[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx":"31","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx":"32","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx":"33","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx":"34","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx":"35","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rapidAPI-config.js":"36","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/country-converter.js":"37","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/RankingDetailCard.jsx":"38","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/goalServe-config.js":"39"},{"size":589,"mtime":1610168112225,"results":"40","hashOfConfig":"41"},{"size":5641,"mtime":1626914848917,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1610088373592,"results":"43","hashOfConfig":"41"},{"size":1375,"mtime":1624130641199,"results":"44","hashOfConfig":"41"},{"size":6522,"mtime":1626914848929,"results":"45","hashOfConfig":"41"},{"size":8377,"mtime":1631169181182,"results":"46","hashOfConfig":"41"},{"size":1612,"mtime":1624130641191,"results":"47","hashOfConfig":"41"},{"size":6588,"mtime":1626914848930,"results":"48","hashOfConfig":"41"},{"size":21957,"mtime":1631164198889,"results":"49","hashOfConfig":"41"},{"size":10163,"mtime":1626914848929,"results":"50","hashOfConfig":"41"},{"size":353,"mtime":1624130641196,"results":"51","hashOfConfig":"41"},{"size":1652,"mtime":1626914848927,"results":"52","hashOfConfig":"41"},{"size":438,"mtime":1616362426753,"results":"53","hashOfConfig":"41"},{"size":1881,"mtime":1616365380313,"results":"54","hashOfConfig":"41"},{"size":511,"mtime":1610402681806,"results":"55","hashOfConfig":"41"},{"size":549,"mtime":1610387506009,"results":"56","hashOfConfig":"41"},{"size":782,"mtime":1610390275911,"results":"57","hashOfConfig":"41"},{"size":2595,"mtime":1624130641189,"results":"58","hashOfConfig":"41"},{"size":16742,"mtime":1631232252362,"results":"59","hashOfConfig":"41"},{"size":1872,"mtime":1631143455324,"results":"60","hashOfConfig":"41"},{"size":607,"mtime":1631146973137,"results":"61","hashOfConfig":"41"},{"size":1198,"mtime":1630808019425,"results":"62","hashOfConfig":"41"},{"size":271,"mtime":1610687892583,"results":"63","hashOfConfig":"41"},{"size":2825,"mtime":1626914848920,"results":"64","hashOfConfig":"41"},{"size":1407,"mtime":1626914848940,"results":"65","hashOfConfig":"41"},{"size":3174,"mtime":1631168989578,"results":"66","hashOfConfig":"41"},{"size":1324,"mtime":1622828957548,"results":"67","hashOfConfig":"41"},{"size":2080,"mtime":1631169069794,"results":"68","hashOfConfig":"41"},{"size":901,"mtime":1613766193544,"results":"69","hashOfConfig":"41"},{"size":1003,"mtime":1613629547033,"results":"70","hashOfConfig":"41"},{"size":1645,"mtime":1613465539505,"results":"71","hashOfConfig":"41"},{"size":7026,"mtime":1626914848926,"results":"72","hashOfConfig":"41"},{"size":1023,"mtime":1626914848917,"results":"73","hashOfConfig":"41"},{"size":174,"mtime":1616260120177,"results":"74","hashOfConfig":"41"},{"size":174,"mtime":1616260120177,"results":"75","hashOfConfig":"41"},{"size":409,"mtime":1624130641198,"results":"76","hashOfConfig":"41"},{"size":9896,"mtime":1626914848937,"results":"77","hashOfConfig":"41"},{"size":5478,"mtime":1626914848924,"results":"78","hashOfConfig":"41"},{"size":321,"mtime":1628197674282,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ks3lcs",{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["175","176"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["177","178","179","180","181","182"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getTournamentsRapidAPI\n} from './utils/tournaments'\n\nimport {\n  getDailyMatchesRapidAPI,\n  getDailyResultsRapidAPI\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [tournaments, setTournaments] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n    const oneDay = 60 * 60 * 24 * 1000\n\n    const tournamentData = localStorage.getItem('tournaments')\n    const createdAt = localStorage.getItem('createdAt')\n\n    if (totalTournaments === 0 || tournamentData === undefined || tournamentData === null || createdAt === undefined || ((today - createdAt) > (oneDay))) {\n\n      const gatherTournaments = async (currentYear) => {\n        console.log('gathering tournaments -- UseEffect # 1 + API Call #1 from RapidAPI in App.js')\n        const tournamentData = await getTournamentsRapidAPI(currentYear)\n        console.log(tournamentData)\n        setTournaments(tournamentData.sort((a,b) => (a.start_date > b.start_date) ? 1 : -1 ))\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData))\n        localStorage.setItem('createdAt', today)\n        setTournamentsLoaded(true)\n      }\n      gatherTournaments(currentYear)\n\n    } else {\n\n      console.log('retrieving Tournaments from Local Storage -- UseEffect #1 in App.js')\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    console.log(tournamentsLoaded)\n\n    if (tournamentsLoaded) {\n\n      console.log('gathering dailySchedule -- UseEffect #2 + API Call #2 from RapidAPI in App.js')\n\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n\n        const dailyScheduleRawData = await getDailyMatchesRapidAPI(currentYear, currentMonth, currentDay)\n\n        console.log(dailyScheduleRawData)\n\n        const dailyScheduleData = []\n\n        dailyScheduleRawData.map((event) => \n        \n          dailyScheduleData.push(event.matches)\n          \n        )\n\n        console.log(dailyScheduleData.flat())\n\n        if (dailyScheduleData.length === 0) {\n\n          setDailySchedule(\"No Matches Today\")\n\n        } else {\n\n          setDailySchedule(dailyScheduleData.flat())\n        }\n      }\n      const timeOut = setTimeout(() => gatherDailySchedule(year, month, day), 1001)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [tournaments, tournamentsLoaded])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0 && dailySchedule !== \"No Matches Today\") {\n      \n      console.log('gathering dailyResults -- UseEffect #3 + FILTERING DailySchedule in App.js')\n\n      const scheduleData = dailySchedule.filter(match => match.status === \"finished\")\n\n      if (scheduleData.length > 0) {\n\n        setDailyResults(scheduleData)\n        \n        console.log(dailyResults)\n\n      } else if (scheduleData.length === 0) {\n\n        setDailyResults(\"Currently No Results\")\n        \n        console.log(dailyResults)\n\n      }\n\n    } else if (dailySchedule && dailySchedule.length !== 0 && dailySchedule === \"No Matches Today\") {\n\n      setDailyResults(\"Currently No Results\")\n\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0 && dailySchedule !== \"No Matches Today\") {\n\n      console.log('gathering liveMatches -- UseEffect #4 + FILTERING DailySchedule in App.js')\n\n      const liveMatchData = dailySchedule.filter(match => match.status === \"inprogress\")\n\n      if (liveMatchData.length !== 0) {\n\n        setLiveMatches(dailySchedule.filter(match => match.status === \"inprogress\"))\n\n        console.log(liveMatches)\n\n      } else if (liveMatchData.length === 0) {\n\n        setLiveMatches(\"Currently No Live Matches\")\n        \n      }\n\n    } else if (dailySchedule && dailySchedule.length !== 0 && dailySchedule === \"No Matches Today\") {\n      \n      setLiveMatches(\"Currently No Live Matches\")\n\n    }\n    \n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if ((dailySchedule.length !== 0 || dailySchedule === \"No Matches Today\") && (dailyResults.length !== 0 || dailyResults === \"Currently No Results\") && (liveMatches.length !== 0 || liveMatches === \"No Matches Today\")) {\n\n      console.log('UseEffect #5 + Setting Loaded to True in App.js')\n\n      setLoaded(true)\n    }\n\n  }, [liveMatches])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} currentYear={currentYear} currentMonth={currentMonth} currentDay={currentDay} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",["183","184","185","186","187","188"],"import React, {useState, useEffect} from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Tournaments from '../components/Tournaments'\n\nimport './Calendar.css'\n\nimport {\n  getTournaments\n} from '../utils/tournaments'\n\nexport default function Calendar(props) {\n  \n  const [viewCalendar, setViewCalendar] = useState(false)\n  const [calendarTournaments, setCalendarTournaments] = useState(null)\n  const [calendarTournamentData, setCalendarTournamentData] = useState(null)\n  const [filter, setFilter] = useState(\"\")\n\n  const { tournaments, currentDate, viewITF, setViewITF } = props\n\n  useEffect(() => {\n    setCalendarTournaments(tournaments)\n    setCalendarTournamentData(tournaments)\n  }, [])\n\n  useEffect(() => {\n    if (calendarTournamentData !== undefined || calendarTournamentData !== null) {\n      if (viewCalendar) {\n        setCalendarTournamentData(calendarTournaments)\n      }\n    }\n  }, [viewCalendar, viewITF])\n\n  useEffect(() => {\n\n    if (viewCalendar && (filter !== \"-- Select a Month ==\" || filter !== \"\")) {\n\n        const calendar = calendarTournaments\n\n        setCalendarTournamentData(calendarTournaments.filter((tournament) => {\n\n          const tournamentMonth = tournament.start_date.split(\"-\")[1]\n\n          return (\n            (tournamentMonth === filter)\n          )\n        }))\n    } else if (viewCalendar && (filter === \"-- Select a Month ==\" || filter === \"\")) {\n      setCalendarTournamentData(calendarTournaments)\n    }\n  }, [filter])\n\n  const handleSwitch = () => {\n    setViewCalendar(!viewCalendar)\n  }\n\n  const handleNavigation = (month) => {\n    setFilter(month)\n  }\n\n\n  return (\n    <div className=\"calendar-container\">\n\n      <p className=\"calendar-container-title\">Tournament Calendar</p>\n\n      <div className=\"calendar-switch-container\">\n\n        <p className=\"calendar-switch-label\">Ongoing</p>\n\n        <Switch onChange={handleSwitch} checked={viewCalendar ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n        \n        <p className=\"calendar-switch-label\">Calendar</p>\n        \n      </div>\n\n      <MobileBanner />\n\n      {viewCalendar ?\n\n        <>\n\n          <div className=\"calendar-navigation-container-desktop\" id={viewCalendar ? \"\" : \"inactive\"}>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"01\")}>JAN</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"02\")}>FEB</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"03\")}>MAR</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"04\")}>APR</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"05\")}>MAY</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"06\")}>JUN</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"07\")}>JUL</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"08\")}>AUG</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"09\")}>SEP</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"10\")}>OCT</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"11\")}>NOV</p>\n\n            <p className=\"calendar-month-separator\">•</p>\n\n            <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"12\")}>DEC</p>\n\n          </div>\n\n        </>\n\n        :\n        \n        <>\n        </>\n\n      }\n\n      <div className=\"calendar-navigation-container-mobile\">\n        <select className=\"calendar-navigations-select-input\" id={viewCalendar ? \"\" : \"inactive\"} defaultValue={'default'} name=\"mobile-navigation\" onChange={(e) => handleNavigation(e.target.value)}>\n          <option defaultValue=\"default\" className=\"calendar-navigations-select-option\">-- Select a Month --</option>\n\n          {viewCalendar?\n\n            <>\n              <option value=\"01\" className=\"calendar-navigations-select-option\">JAN</option>\n              <option value=\"02\" className=\"calendar-navigations-select-option\">FEB</option>\n              <option value=\"03\" className=\"calendar-navigations-select-option\">MAR</option>\n              <option value=\"04\" className=\"calendar-navigations-select-option\">APR</option>\n              <option value=\"05\" className=\"calendar-navigations-select-option\">MAY</option>\n              <option value=\"06\" className=\"calendar-navigations-select-option\">JUN</option>\n              <option value=\"07\" className=\"calendar-navigations-select-option\">JUL</option>\n              <option value=\"08\" className=\"calendar-navigations-select-option\">AUG</option>\n              <option value=\"09\" className=\"calendar-navigations-select-option\">SEP</option>\n              <option value=\"10\" className=\"calendar-navigations-select-option\">OCT</option>\n              <option value=\"11\" className=\"calendar-navigations-select-option\">NOV</option>\n              <option value=\"12\" className=\"calendar-navigations-select-option\">DEC</option>\n            </>\n          :\n            \n            <>\n            </>\n\n          }\n        </select>\n      </div>\n      \n      <Tournaments tournaments={viewCalendar ? calendarTournamentData : tournaments.filter((tournament) => {\n    \n    const startDate = new Date(tournament.start_date)\n    const endDate = new Date(tournament.end_date)\n    const tournamentCategory = tournament.code\n  \n    return (\n        \n      (((startDate <= currentDate) && (endDate >= currentDate) && ((endDate - currentDate) <= (14*24*60*60*1000))) && ((tournamentCategory !== \"itf\") && (!tournament.name.toLowerCase().includes(\"challenger\")) && (!tournament.name.includes(\"Cancelled\"))))\n      \n      )\n    }\n  )} currentDate={currentDate} viewCalendar={viewCalendar} filter={filter} />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["189","190","191"],"import React, { useState, useEffect, Suspense, lazy } from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Loader from '../components/Loader'\n// import Players from '../components/Players'\nimport IconLogo from '../components/IconLogo'\n\nimport './Rankings.css'\n\nimport {\n  herokuRankings\n} from '../utils/rankings'\n\nconst Players = React.lazy(() => import('../components/Players'))\n\nexport default function Rankings(props) {\n\n  const [loaded, setLoaded] = useState(false)\n  const [activateSwitch, setActivateSwitch] = useState(false)\n\n  const [event, setEvent] = useState('ATP')\n  const [discipline, setDiscipline] = useState('Singles')\n  const [viewRace, setViewRace] = useState(false)\n\n  const [maleSinglesRankings, setMaleSinglesRankings] = useState(null)\n  const [femaleSinglesRankings, setFemaleSinglesRankings] = useState(null)\n  const [maleDoublesRankings, setMaleDoublesRankings] = useState(null)\n  const [femaleDoublesRankings, setFemaleDoublesRankings] = useState(null)\n\n  const [maleSinglesRaceRankings, setMaleSinglesRaceRankings] = useState(null)\n  const [femaleSinglesRaceRankings, setFemaleSinglesRaceRankings] = useState(null)\n  const [maleDoublesRaceRankings, setMaleDoublesRaceRankings] = useState(null)\n  const [femaleDoublesRaceRankings, setFemaleDoublesRaceRankings] = useState(null)\n\n  const [ rankingCategory, setRankingCategory ] = useState(false)\n\n  // The Below UseEffect collects ranking data via Heroku API\n\n    useEffect(() => {\n\n    if ( !loaded ) {\n      \n      const gatherRankings = async () => {\n        const combinedRankingsData = await herokuRankings()\n        console.log(combinedRankingsData)\n\n        const combinedRankings = JSON.parse(combinedRankingsData[0].data)\n        console.log(combinedRankings)\n\n        const ATPRANKINGS = combinedRankings.rankings.ATPRANKINGS\n        const WTARANKINGS = combinedRankings.rankings.WTARANKINGS\n\n        console.log(ATPRANKINGS)\n        console.log(WTARANKINGS)\n\n        setMaleSinglesRankings(JSON.parse(ATPRANKINGS.ATPSINGLESRANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setFemaleSinglesRankings(JSON.parse(WTARANKINGS.WTASINGLESRANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setMaleSinglesRaceRankings(JSON.parse(ATPRANKINGS.ATPSINGLESRACERANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setFemaleSinglesRaceRankings(JSON.parse(WTARANKINGS.WTASINGLESRACERANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setMaleDoublesRankings(JSON.parse(ATPRANKINGS.ATPDOUBLESRANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setFemaleDoublesRankings(JSON.parse(WTARANKINGS.WTADOUBLESRANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setMaleDoublesRaceRankings(JSON.parse(ATPRANKINGS.ATPDOUBLESRACERANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        setFemaleDoublesRaceRankings(JSON.parse(WTARANKINGS.WTADOUBLESRACERANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n\n        setRankingCategory(JSON.parse(ATPRANKINGS.ATPSINGLESRANKINGS).data.dataList.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n        \n        setLoaded(true)\n      }\n\n      gatherRankings()\n  \n    }\n\n  }, [loaded])\n\n// The Below Functions Handle Switch Actions for Ranking Data\n\n  const handleEventSwitch = () => {\n    if (event === \"WTA\") {\n      setEvent(\"ATP\")\n      // setActivateSwitch(true)\n    } else if (event === \"ATP\") {\n      setEvent(\"WTA\")\n      // setActivateSwitch(true)\n    }\n  }\n\n  const handleDisciplineSwitch = () => {\n    if (discipline === \"Singles\") {\n      setDiscipline(\"Doubles\")\n      // setActivateSwitch(true)\n    } else if (discipline === \"Doubles\") {\n      setDiscipline(\"Singles\")\n      // setActivateSwitch(true)\n    }\n  }\n\n  const handleRaceSwitch = () => {\n    setViewRace(!viewRace)\n    // setActivateSwitch(true)\n  }\n\n  const handleSwitch = (switchType) => {\n    setActivateSwitch(true)\n    if (switchType === \"Event\") {\n      handleEventSwitch()\n    } else if (switchType === \"Discipline\") {\n      handleDisciplineSwitch()\n    } else if (switchType === \"Race\") {\n      handleRaceSwitch()\n    }\n  }\n\n  // The Below UseEffect activates when ActivateSwitch is true, thereby changing the current ranking data fed to the Players component and rendered as individual PlayerCards\n\n  useEffect(() => {\n    if (loaded && activateSwitch && event === \"WTA\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(femaleSinglesRankings)\n    } else if (loaded && activateSwitch && event === \"WTA\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(femaleSinglesRaceRankings)\n    } else if (loaded && activateSwitch && event === \"WTA\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(femaleDoublesRankings)\n    } else if (loaded && activateSwitch && event === \"WTA\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(femaleDoublesRaceRankings)\n    } else if (loaded && activateSwitch && event === \"ATP\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(maleSinglesRankings)\n    } else if (loaded && activateSwitch && event === \"ATP\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(maleSinglesRaceRankings)\n    } else if (loaded && activateSwitch && event === \"ATP\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(maleDoublesRankings)\n    } else if (loaded && activateSwitch && event === \"ATP\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(maleDoublesRaceRankings)\n    }\n  }, [event, discipline, viewRace])\n\n// Below UseEffect triggers when RankingCategory changes AND when ActivateSwitch is TRUE. It sets ActivateSwitch back to false.\n\n  useEffect(() => {\n    if (loaded && activateSwitch && rankingCategory) {\n      setActivateSwitch(false)\n    }\n  }, [rankingCategory])\n\n  \n  return (\n    <>\n\n      {!loaded ?\n        \n        <Loader />\n\n        :\n      \n        <>\n\n          <div className=\"rankings-container\">\n\n            <p className=\"rankings-container-title\">{event} {discipline} {viewRace ? \"Race\" : \"\"} Rankings</p>\n\n            <div className=\"rankings-toggle-view-container\">\n\n              <div className=\"switch-container\" id=\"tour-view-switch-container\">\n\n                <p className=\"tour-view-switch-container-copy\">ATP</p>\n\n                <Switch onChange={(e) => handleSwitch(\"Event\")} checked={event === \"WTA\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"tour-view-switch-container-copy\">WTA</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">SINGLES</p>\n\n                <Switch onChange={(e) => handleSwitch(\"Discipline\")} checked={discipline === \"Doubles\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">DOUBLES</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">ROLLING</p>\n\n                <Switch onChange={(e) => handleSwitch(\"Race\")} checked={viewRace ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">RACE</p>\n\n              </div>\n\n            </div>\n\n            <MobileBanner />\n\n              <Suspense fallback={        \n                <div className=\"loader-icon heartbeat\" id=\"rankings-loader\">\n\n                  <IconLogo />\n\n                </div>\n              }>\n\n                <Players rankingCategory={rankingCategory} discipline={discipline} viewRace={viewRace} activateSwitch={activateSwitch} />\n\n              </Suspense>\n            \n          </div>\n          \n        </>\n\n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["192","193"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport TournamentCard from '../components/TournamentCard'\nimport ResultsContainer from '../components/ResultsContainer'\nimport PlayerCard from '../components/PlayerCard'\nimport RankingDetailCard from '../components/RankingDetailCard'\n\nimport './PlayerDetail.css'\n\nimport {\n  getPlayer,\n  getPlayerResults,\n  getPlayerSchedule\n} from \"../utils/players\"\n\nimport { convertCountryIOCtoISO3 } from '../utils/country-converter'\n\nexport default function PlayerDetail(props) {\n\n  const [dataLoaded, setDataLoaded] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [view, setView] = useState('Player Results')\n\n  const [playerData, setPlayerData] = useState(null)\n  const [playerResults, setPlayerResults] = useState(null)\n  const [playerSchedule, setPlayerSchedule] = useState(false)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const currentPlayer = localStorage.getItem('currentPlayer')\n    const playerScheduleData = localStorage.getItem('playerSchedule')\n    const playerResultsData = localStorage.getItem('playerResults')\n    const playerDetails = localStorage.getItem('playerDetails')\n\n    if (playerDetails === undefined || playerDetails === null || playerDetails.length <= 2) {\n\n      console.log('gathering player data via API Call 1')\n\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerData = async (currentPlayerID) => {\n        const playerInfo = await getPlayer(currentPlayerID)\n        console.log(playerInfo)\n        localStorage.setItem('playerDetails', JSON.stringify(playerInfo))\n        setPlayerData(playerInfo)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerData(currentPlayerID), 3001)\n      return () => clearTimeout(timeOut)\n\n    } else {\n\n      console.log(\n        'gathering Player Data from LocalStorage'\n      )\n\n      setPlayerData(JSON.parse(playerDetails))\n      setPlayerResults(JSON.parse(playerResultsData))\n      setPlayerSchedule(JSON.parse(playerScheduleData))\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerResults = async (currentPlayerID) => {\n        const playerResultsInfo = await getPlayerResults(currentPlayerID)\n        localStorage.setItem('playerResults', JSON.stringify(playerResultsInfo))\n        setPlayerResults(playerResultsInfo)\n      }\n\n      gatherPlayerResults(currentPlayerID)\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerSchedule = async (currentPlayerID) => {\n        const playerScheduleInfo = await getPlayerSchedule(currentPlayerID)\n        localStorage.setItem('playerSchedule', JSON.stringify(playerScheduleInfo))\n        setPlayerSchedule(playerScheduleInfo)\n        setDataLoaded(true)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerSchedule(currentPlayerID), 1001)\n      return () => clearTimeout(timeOut)\n\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    console.log(playerData)\n    console.log('PlayerData and PlayerSchedule/Results are being checked')\n\n    if (dataLoaded) {\n\n      console.log('data has been loaded and component will mount')\n      setLoaded(true)\n    }\n  }, [dataLoaded])\n\n  const scheduleItems = playerSchedule && playerSchedule?.schedule.map((tournament, index) => {\n\n    return (\n\n    <TournamentCard\n      tournament={tournament.tournament}\n      index={index}\n      key={tournament.tournament.id}\n      startDate={\"\"}\n      endDate={\"\"}\n    />\n      \n  )})\n\n  console.log(playerResults)\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Player Schedule\":\n        setView(\"Player Schedule\")\n        break;\n      case \"Player Results\":\n        setView(\"Player Results\")\n        break;\n    }\n  }\n\n  const handleReturnToTournament = (e) => {\n    localStorage.removeItem('currentPlayer')\n    localStorage.removeItem('playerSchedule')\n    localStorage.removeItem('playerResults')\n    localStorage.removeItem('playerDetails')\n    history.push('/rankings')\n  }\n  \n  return (\n    \n    <>\n\n      { !loaded ? \n      \n        <Loader />\n\n        :\n\n        <>\n          \n          <div className=\"player-detail-container\">\n\n            <div className=\"back-button-container\" onClick={(e) => handleReturnToTournament(e)} >\n\n              <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n              <p className=\"back-button-copy\">BACK</p>\n\n            </div>\n\n            <PlayerCard playerData={playerData} key={playerData.id} playerCountry={convertCountryIOCtoISO3(playerData.country.toUpperCase())} viewRace={null} discipline={null} componentUsage={\"playerDetail\"} />\n\n            <RankingDetailCard playerData={playerData} componentUsage={\"playerDetail\"} />\n\n            <MobileBanner />\n            \n            <div className=\"player-views-container\">\n\n              <button className=\"player-views-button\" id=\"player-results-button\" onClick={(e) => handleChangeView(\"Player Results\")}> Player Results</button>\n\n              <button className=\"player-views-button\" id=\"player-schedule-button\" onClick={(e) => handleChangeView(\"Player Schedule\")} > Player Schedule</button>\n\n            </div>\n\n              {view === \"Player Results\" ? \n              \n                <div className=\"player-results-container\">\n\n                  <ResultsContainer playerResults={playerResults} />\n\n                </div>\n              \n                :\n                \n                <div className=\"player-schedule-container\">\n                \n                  {scheduleItems.length === 0 ?\n                  \n                    <p className=\"match-container-copy\">Upcoming player schedule currently unavailable.</p>\n                  \n                  :\n                  \n                    <>\n\n                    {scheduleItems}\n                    \n                    </>\n              \n                  }\n\n                </div>\n              \n              }\n              \n            </div>\n          \n        </>\n      \n      }\n\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Matches from '../components/Matches'\nimport OrderOfPlay from '../components/OrderOfPlay'\n\nimport {\n  getDailyTournamentMatchesAndResults\n} from '../utils/matches'\n\nimport {\n  getLiveMatchesGoalServe\n} from '../utils/live'\n\nimport './TournamentDetail.css'\n\n\nexport default function TournamentDetail(props) {\n\n  // Data Loaded Switches\n  const [currentTournamentLoadedRapidAPI, setCurrentTournamentLoadedRapidAPI] = useState(false)\n  const [currentTournamentScheduleLoadedRapidAPI, setCurrentTournamentScheduleLoadedRapidAPI] = useState(false)\n  const [completedMatchesLoadedRapidAPI, setCompletedMatchesLoadedRapidAPI] = useState(false)\n  const [liveMatchesLoadedRapidAPI, setLiveMatchesLoadedRapidAPI] = useState(false)\n  const [matchDetailsLoadedGoalServe, setMatchDetailsLoadedGoalServe] = useState(false)\n  const [dataLoadedRapidAPIGoalServe, setDataLoadedRapidAPIGoalServe] = useState(false)\n  \n  // Visibility Switches\n  const [currentMode, setCurrentMode] = useState(false)\n  const [view, setView] = useState(\"Live Scores\")\n\n  // Data\n    // Tournament Info\n  const [currentTournamentRapidAPI, setCurrentTournamentRapidAPI] = useState([])\n\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n\n    // Tournament Schedule\n  const [currentTournamentScheduleRapidAPI, setCurrentTournamentScheduleRapidAPI] = useState([])\n    // Completed Matches (Results)\n  const [completedSinglesMatchesRapidAPI, setCompletedSinglesMatchesRapidAPI] = useState([])\n  const [completedDoublesMatchesRapidAPI, setCompletedDoublesMatchesRapidAPI] = useState([])\n    // Live Matches\n  const [liveSinglesMatchesRapidAPI, setLiveSinglesMatchesRapidAPI] = useState([])\n  const [liveDoublesMatchesRapidAPI, setLiveDoublesMatchesRapidAPI] = useState([])\n  \n  // Match Details\n  const [combinedSinglesMatchDetailsGoalServe, setCombinedSinglesMatchDetailsGoalServe] = useState([])\n  const [combinedDoublesMatchDetailsGoalServe, setCombinedDoublesMatchDetailsGoalServe] = useState([])\n  const [completedSinglesMatchDetailsGoalServe, setCompletedSinglesMatchDetailsGoalServe] = useState([])\n  const [completedDoublesMatchDetailsGoalServe, setCompletedDoublesMatchDetailsGoalServe] = useState([])\n  const [liveSinglesMatchDetailsGoalServe, setLiveSinglesMatchDetailsGoalServe] = useState([])\n  const [liveDoublesMatchDetailsGoalServe, setLiveDoublesMatchDetailsGoalServe] = useState([])\n\n  const params = useParams();\n  const history = useHistory()\n\n  const { tournaments, dailySchedule, dailyResults, liveMatches, currentDate, currentYear, currentMonth, currentDay } = props;\n\n// UseEffects\n  \n  // Sets currentTournamentRapidAPI Object\n  useEffect(() => {\n\n    if (tournaments !== undefined && tournaments !== null) {\n\n      console.log(tournaments)\n      console.log(params)\n\n      console.log(\"TournamentDetail.js - UseEffect #1a - finding currentTournamentData using params and tournaments prop\")\n\n      const currentTournamentData = tournaments.find((tournament) => parseInt(params.id) === parseInt(tournament.id))\n      setCurrentTournamentRapidAPI(currentTournamentData)\n      setCurrentTournamentLoadedRapidAPI(true)\n\n      console.log(\"TournamentDetail.js - UseEffect #1a - currentTournamentRapidAPI set\")\n      console.log(currentTournamentData)\n\n    } else {\n\n      console.log(\"TournamentDetail.js - UseEffect #1b - gathering currentTournamentData from LocalStorage\")\n\n      const currentTournamentData = localStorage.getItem('currentTournamentRapidAPI')\n      setCurrentTournamentRapidAPI(JSON.parse(currentTournamentData))\n      setCurrentTournamentLoadedRapidAPI(true)\n\n      console.log(\"TournamentDetail.js - UseEffect #1b - currentTournamentRapidAPI set\")\n\n    }\n  }, [])\n\n  // Sets Current Tournament Schedule\n  useEffect(() => {\n\n    if (currentTournamentLoadedRapidAPI) {\n\n      console.log(\"TournamentDetail.js - UseEffect #2a - GETting from RapidAPI Current Tournament Schedule using Params, due to absence of 'tournaments' props\")\n\n      const gatherCurrentTournamentSchedule = async (params, currentYear, currentMonth, currentDay) => {\n        const tournamentScheduleData = await getDailyTournamentMatchesAndResults(params.id, currentYear, currentMonth, currentDay)\n        console.log(tournamentScheduleData)\n\n        setCurrentTournamentScheduleRapidAPI(tournamentScheduleData)\n        setCurrentTournamentScheduleLoadedRapidAPI(true)\n      }\n\n      gatherCurrentTournamentSchedule(params, currentYear, currentMonth, currentDay)\n\n      console.log(\"TournamentDetail.js - UseEffect #2a - Current Tournament Schedule set\")\n\n    }\n    \n  }, [currentTournamentLoadedRapidAPI])\n\n    // Filters Completed Matches (Results) from RapidAPI Data\n    useEffect(() => {\n\n      if (currentTournamentScheduleLoadedRapidAPI) {\n  \n          console.log(\"TournamentDetail.js - UseEffect #3a - filtering completed singles matches from RapidAPI data\")\n  \n          const completedSinglesMatchesData = currentTournamentScheduleRapidAPI.filter((match) => (match.status.toLowerCase() === \"finished\" || match.status === \"retired\"))\n          setCompletedSinglesMatchesRapidAPI(completedSinglesMatchesData)\n          setCompletedMatchesLoadedRapidAPI(true)\n          console.log(dailyResults)\n          console.log(completedSinglesMatchesData)\n  \n          console.log(\"TournamentDetail.js - UseEffect #3a - completedSinglesMatches filtered from RapidAPI data set\")\n  \n      }\n    }, [currentTournamentScheduleLoadedRapidAPI])\n    \n    \n    // Filters Live Singles Matches from RapidAPI Data\n    useEffect(() => {\n  \n      if (currentTournamentScheduleLoadedRapidAPI) {\n  \n          console.log(\"TournamentDetail.js - UseEffect #3b - filtering live singles matches from RapidAPI data\")\n  \n          const liveSinglesMatchesDataRapidAPI = currentTournamentScheduleRapidAPI.filter((match) => (match.status === \"inprogress\"))\n          console.log(liveSinglesMatchesDataRapidAPI)\n        \n        if ((liveSinglesMatchesDataRapidAPI === undefined) || (liveSinglesMatchesDataRapidAPI.length === 0)) {\n            console.log(liveSinglesMatchesDataRapidAPI)\n            setLiveSinglesMatchesRapidAPI(\"Currently No Live Matches\")\n            setLiveMatchesLoadedRapidAPI(true)\n        } else if ((liveSinglesMatchesDataRapidAPI !== undefined)) {\n            console.log(liveSinglesMatchesDataRapidAPI)\n            setLiveSinglesMatchesRapidAPI(liveSinglesMatchesDataRapidAPI)\n            setLiveMatchesLoadedRapidAPI(true)\n          }\n  \n          console.log(\"TournamentDetail.js - UseEffect #3b - live singles matches filtered from RapidAPI data set\")\n  \n      }\n    }, [currentTournamentScheduleLoadedRapidAPI])\n\n  \n  // Gathers Live Match Details from GoalServe\n  useEffect(() => {\n\n    if (currentTournamentScheduleLoadedRapidAPI && (currentTournamentScheduleRapidAPI.length > 0 && currentTournamentScheduleRapidAPI !== undefined)) {\n\n      const gatherLiveMatchDetailsDataGoalServe = async (currentTournamentRapidAPI) => {\n        \n        const liveMatchDetailsDataGoalServe = await getLiveMatchesGoalServe()\n        console.log(liveMatchDetailsDataGoalServe)\n\n        const combinedSinglesMatchesDataGoalServe = liveMatchDetailsDataGoalServe.category.filter((tournament) => {\n          return (\n            (tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.name.toLowerCase()) || tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.city.toLowerCase())) && tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.code.toLowerCase()) && tournament[\"@name\"].toLowerCase().includes(\"singles\")\n          )\n        })\n        \n        const combinedDoublesMatchesDataGoalServe = liveMatchDetailsDataGoalServe.category.filter((tournament) => {\n          return (\n            (tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.name.toLowerCase()) || tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.city.toLowerCase())) && tournament[\"@name\"].toLowerCase().includes(currentTournamentRapidAPI.code.toLowerCase()) && tournament[\"@name\"].toLowerCase().includes('doubles')\n          )\n        })\n\n        console.log(combinedSinglesMatchesDataGoalServe)\n        console.log(combinedDoublesMatchesDataGoalServe)\n        console.log(combinedSinglesMatchesDataGoalServe.length)\n        console.log(combinedDoublesMatchesDataGoalServe.length)\n\n        const filterCompletedSinglesMatchesGoalServe = () => {\n\n          if (combinedSinglesMatchesDataGoalServe.length > 0) {\n\n            if (combinedSinglesMatchesDataGoalServe[0].match.length === undefined) {\n\n              const filteredSinglesMatchesDataGoalServe = []\n\n              if (combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Finished\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Retired\") {\n\n                const filteredCompletedSinglesMatchesDataGoalServe = filteredSinglesMatchesDataGoalServe.push(combinedSinglesMatchesDataGoalServe[0].match)\n                \n                return filteredSinglesMatchesDataGoalServe\n\n              } else {\n\n                return filteredSinglesMatchesDataGoalServe\n\n              }\n\n            } else {\n\n              const filteredSinglesMatchesDataGoalServe = combinedSinglesMatchesDataGoalServe[0].match.filter((match) => {\n                return (\n                  (match[\"@status\"] === \"Finished\" || match[\"@status\"] === \"Retired\")\n                )\n              })\n\n              return filteredSinglesMatchesDataGoalServe\n\n            }\n\n          } else {\n  \n              const filteredSinglesMatchesDataGoalServe = []\n\n              return filteredSinglesMatchesDataGoalServe\n\n            }\n        }\n\n        const completedSinglesMatchesDataGoalServe = filterCompletedSinglesMatchesGoalServe()\n\n        const filterCompletedDoublesMatchesGoalServe = () => {\n\n          if (combinedDoublesMatchesDataGoalServe.length > 0) {\n\n            if (combinedDoublesMatchesDataGoalServe[0].match.length === undefined) {\n\n              const filteredDoublesMatchesDataGoalServe = []\n\n              if (combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Finished\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Retired\") {\n\n                const filteredCompletedDoublesMatchesDataGoalServe = filteredDoublesMatchesDataGoalServe.push(combinedSinglesMatchesDataGoalServe[0].match)\n\n                return filteredDoublesMatchesDataGoalServe\n\n              } else {\n\n                return filteredDoublesMatchesDataGoalServe\n                \n              }\n\n            } else {\n\n              const filteredDoublesMatchesDataGoalServe = combinedDoublesMatchesDataGoalServe[0].match.filter((match) => {\n                return (\n                  (match[\"@status\"] === \"Finished\" || match[\"@status\"] === \"Retired\")\n                )\n              })\n\n              return filteredDoublesMatchesDataGoalServe\n\n            }\n\n          } else {\n\n            const filteredDoublesMatchesDataGoalServe = []\n\n            return filteredDoublesMatchesDataGoalServe\n\n          }\n        }\n\n        const completedDoublesMatchesDataGoalServe = filterCompletedDoublesMatchesGoalServe()\n\n        console.log(completedSinglesMatchesDataGoalServe)\n        console.log(completedDoublesMatchesDataGoalServe)\n\n        const filterLiveSinglesMatchesGoalServe = () => {\n\n          if (combinedSinglesMatchesDataGoalServe.length > 0) {\n\n            if (combinedSinglesMatchesDataGoalServe[0].match.length === undefined) {\n\n              let filteredSinglesMatchesDataGoalServe = []\n\n              if (combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 1\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 2\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 3\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 4\" || combinedSinglesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 5\") {\n\n                const filteredLiveSinglesMatchesDataGoalServe = filteredSinglesMatchesDataGoalServe.push(combinedSinglesMatchesDataGoalServe[0].match)\n\n                return filteredSinglesMatchesDataGoalServe\n\n              } else {\n\n                return filteredSinglesMatchesDataGoalServe\n\n              }\n\n            } else {\n\n              const filteredSinglesMatchesDataGoalServe = combinedSinglesMatchesDataGoalServe[0].match.filter((match) => {\n                return (\n                  (match[\"@status\"] === \"Set 1\" || match[\"@status\"] === \"Set 2\" || match[\"@status\"] === \"Set 3\" || match[\"@status\"] === \"Set 4\" || match[\"@status\"] === \"Set 5\")\n                )\n              })\n\n              return filteredSinglesMatchesDataGoalServe\n\n            }\n\n          } else {\n\n            const filteredSinglesMatchesDataGoalServe = []\n\n            return filteredSinglesMatchesDataGoalServe\n\n          }\n\n        }\n        \n        const liveSinglesMatchesDataGoalServe = filterLiveSinglesMatchesGoalServe()\n\n        console.log(liveSinglesMatchDetailsGoalServe)\n\n        const filterLiveDoublesMatchesGoalServe = () => {\n\n          if (combinedDoublesMatchesDataGoalServe.length > 0) {\n\n            if (combinedDoublesMatchesDataGoalServe[0].match.length === undefined) {\n\n              const filteredDoublesMatchesDataGoalServe = []\n\n              if (combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 1\" || combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 2\" || combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 3\" || combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 4\" || combinedDoublesMatchesDataGoalServe[0].match[\"@status\"] === \"Set 5\") {\n\n                const filteredLiveDoublesMatchesDataGoalServe = filteredDoublesMatchesDataGoalServe.push(combinedSinglesMatchesDataGoalServe[0].match)\n                \n                return filteredDoublesMatchesDataGoalServe\n\n              } else {\n\n                return filteredDoublesMatchesDataGoalServe\n                \n              }\n\n            } else {\n\n              const filteredDoublesMatchesDataGoalServe = combinedDoublesMatchesDataGoalServe[0].match.filter((match) => {\n                return (\n                  (match[\"@status\"] === \"Set 1\" || match[\"@status\"] === \"Set 2\" || match[\"@status\"] === \"Set 3\" || match[\"@status\"] === \"Set 4\" || match[\"@status\"] === \"Set 5\")\n                )\n              })\n\n              return filteredDoublesMatchesDataGoalServe\n\n            }\n\n          } else {\n\n            const filteredDoublesMatchesDataGoalServe = []\n\n            return filteredDoublesMatchesDataGoalServe\n          }\n      \n        }\n\n        const liveDoublesMatchesDataGoalServe = filterLiveDoublesMatchesGoalServe()\n        \n        console.log(completedSinglesMatchesDataGoalServe)\n        console.log(completedDoublesMatchesDataGoalServe)\n        console.log(liveSinglesMatchesDataGoalServe)\n        console.log(liveDoublesMatchesDataGoalServe)\n\n        setCombinedSinglesMatchDetailsGoalServe(combinedSinglesMatchesDataGoalServe)\n        setCombinedDoublesMatchDetailsGoalServe(combinedDoublesMatchesDataGoalServe)\n\n        setCompletedSinglesMatchDetailsGoalServe(completedSinglesMatchesDataGoalServe)\n        setCompletedDoublesMatchDetailsGoalServe(completedDoublesMatchesDataGoalServe)\n\n        setLiveSinglesMatchDetailsGoalServe(liveSinglesMatchesDataGoalServe)\n        setLiveDoublesMatchDetailsGoalServe(liveDoublesMatchesDataGoalServe)\n        }\n      \n      console.log('TournamentDetail.js - UseEffect #4a - gathering live match details data from GoalServe')\n\n      gatherLiveMatchDetailsDataGoalServe(currentTournamentRapidAPI)\n\n      console.log('TournamentDetail.js - UseEffect #4a - completed gathering live match details data from GoalServe')\n\n      setMatchDetailsLoadedGoalServe(true)\n\n    } else if (currentTournamentScheduleLoadedRapidAPI && (currentTournamentScheduleRapidAPI.length === 0 || currentTournamentScheduleRapidAPI === undefined)) {\n\n      console.log('TournamentDetail.js - UseEffect 4b - No Matches Today - Will NOT gather live match details data from GoalServe')\n\n      setMatchDetailsLoadedGoalServe(true)\n\n    }\n  }, [currentTournamentScheduleLoadedRapidAPI])\n\n  // Parses Key Tournament Info\n  useEffect(() => {\n    \n    if (currentTournamentLoadedRapidAPI) {\n\n      console.log(\"TournamentDetail.js - UseEffect #5 - setting Current Tournament Logo\")\n      \n      const parseTournamentIcon = (currentTournamentRapidAPI) => {\n      \n        if (currentTournamentRapidAPI.name.includes(\"doubles\")) {\n          return\n        } else if (currentTournamentRapidAPI.code.includes(\"WTA\")) {\n          setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n        } else if (currentTournamentRapidAPI.name.toLowerCase().includes(\"challenger\")) {\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentTournamentRapidAPI.code.includes(\"ATP\")) {\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentTournamentRapidAPI.name.includes(\"ITF\")) {\n          setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n        } else {\n          setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n        }\n      }\n  \n      parseTournamentIcon(currentTournamentRapidAPI)\n\n      console.log(\"TournamentDetail.js - UseEffect #5 - Current Tournament Logo set\")\n\n    }\n  }, [currentTournamentLoadedRapidAPI])\n\n  useEffect(() => {\n    if (completedMatchesLoadedRapidAPI && liveMatchesLoadedRapidAPI && matchDetailsLoadedGoalServe) {\n      setDataLoadedRapidAPIGoalServe(true)\n    }\n  })\n\n\n  // Switch Functions\n\n  const handleSwitch = () => {\n    setCurrentMode(!currentMode)\n  }\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Live Scores\":\n        setView(\"Live Scores\")\n        break;\n      case \"Completed Matches\":\n        setView(\"Completed Matches\")\n        break;\n      case \"Schedule\":\n        setView(\"Schedule\")\n        break;\n    }\n  }\n\n  const handleReturnToCalendar = (e) => {\n    localStorage.removeItem('currentTournamentRapidAPI')\n    localStorage.removeItem('scheduleDate')\n    history.push('/calendar')\n  }\n  \n  return (\n\n    <>\n      \n      { dataLoadedRapidAPIGoalServe ?\n      \n        <div className=\"tournament-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToCalendar(e)} >\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <div className=\"tournament-card-container\">\n\n            <p className=\"tournament-card-name\">{currentTournamentRapidAPI.name}</p>\n\n            <div className=\"tournament-category-container\">\n\n              <p className=\"tournament-date\">{`${currentTournamentRapidAPI.start_date.split(\"-\").splice(1).join(\"/\")} - ${currentTournamentRapidAPI.end_date.split(\"-\").splice(1).join(\"/\")}`}</p>\n\n              <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n          \n            </div>\n\n          </div>\n\n\n\n          <div className=\"discipline-switch-container\">\n\n            <p className=\"discipline-switch-container-copy\">SINGLES</p>\n\n            <Switch onChange={handleSwitch} checked={currentMode ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n            <p className=\"discipline-switch-container-copy\">DOUBLES</p>\n\n          </div>\n\n\n          \n          <div className=\"tournament-views-container\">\n\n            <button className=\"tournament-views-button\" id=\"live-scores-button\" onClick={(e) => handleChangeView(\"Live Scores\")} > Live Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Completed Matches\")}> Completed Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Schedule\")} > Schedule</button>\n          \n          </div>\n\n          <MobileBanner />\n\n          {view === \"Live Scores\" ?\n        \n            <Matches matchesData={currentMode ? liveDoublesMatchDetailsGoalServe : liveSinglesMatchDetailsGoalServe} supportingMatchesData={currentTournamentScheduleRapidAPI} view={view} discipline={currentMode ? \"DOUBLES\" : \"SINGLES\"} tournamentGender={currentTournamentRapidAPI.code === \"ATP\" ? \"MEN'S\" : \"WOMEN'S\"} />\n\n            :\n        \n            <>\n          \n              {view === \"Completed Matches\" ?\n        \n                <Matches matchesData={currentMode ? completedDoublesMatchDetailsGoalServe : completedSinglesMatchDetailsGoalServe} supportingMatchesData={currentTournamentScheduleRapidAPI} view={view} discipline={currentMode ? \"DOUBLES\" : \"SINGLES\"} tournamentGender={currentTournamentRapidAPI.code === \"ATP\" ? \"MEN'S\" : \"WOMEN'S\"} />\n              \n                :\n            \n                <>\n              \n                  {currentTournamentScheduleRapidAPI.length === 0 ?\n              \n                    <p className=\"match-container-copy\">Tournament schedule currently unavailable.</p>\n            \n                    :\n\n                    <OrderOfPlay currentTournamentSchedule={currentTournamentScheduleRapidAPI} />\n        \n                  }\n\n                </>\n              \n              }\n        \n            </>\n      \n          }\n\n        </div>\n        \n      :\n        \n        <Loader />\n      \n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["217","218"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport MatchCard from '../components/MatchCard'\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './MatchDetail.css'\n\nimport {\n  getMatchDetails\n} from \"../utils/matches\"\n\nexport default function MatchDetail(props) {\n  \n  const [matchDetailsLoaded, setMatchDetailsLoaded] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [ matchData, setMatchData ] = useState(null)\n  const [ homeStats, setHomeStats] = useState(null)\n  const [ awayStats, setAwayStats ] = useState(null)\n  const [tournamentGender, setTournamentGender] = useState(\"\")\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const match = localStorage.getItem('currentMatch')\n    const matchDetails = localStorage.getItem('matchDetails')\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n\n    if (matchDetails) {\n      setMatchData(JSON.parse(matchDetails))\n      setHomeStats(JSON.parse(matchDetails).statistics.teams[0])\n      setAwayStats(JSON.parse(matchDetails).statistics.teams[1])\n      setTournamentGender(JSON.parse(currentTournament.code))\n      setMatchDetailsLoaded(true)\n \n    } else {\n\n      const matchID = JSON.parse(match).id\n      console.log(matchID)\n\n      const getMatchStatistics = async (matchID) => {\n        const matchDetails = await getMatchDetails(matchID)\n        console.log(matchDetails)\n        setMatchData(matchDetails)\n        localStorage.setItem('matchDetails', JSON.stringify(matchDetails))\n        if (matchDetails.statistics) {\n          setHomeStats(matchDetails.statistics.teams[0])\n          setAwayStats(matchDetails.statistics.teams[1])\n          console.log(matchDetails.statistics.teams[0])\n          setMatchDetailsLoaded(true)\n        } else {\n          setMatchDetailsLoaded(true)\n        }\n      }\n      getMatchStatistics(matchID)\n      setTournamentGender(JSON.parse(currentTournament.code))\n\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (matchDetailsLoaded) {\n      setLoaded(true)\n    }\n\n  }, [matchDetailsLoaded])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchData.matchStatus === \"live\" || matchData.matchStatus === \"inprogress\") {\n          const getLiveMatchStatistics = async (matchID) => {\n            const matchDetails = await getMatchDetails(matchID)\n            setMatchData(matchDetails)\n          }\n          getLiveMatchStatistics(matchData.id)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [loaded])\n\n  const handleReturnToTournament = () => {\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n    const currentPlayer = localStorage.getItem('currentPlayer')\n\n    if (currentTournament) {\n      const tournamentID = JSON.parse(currentTournament).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/tournament/${tournamentID}`)\n    } else if (currentPlayer) {\n      const playerID = JSON.parse(currentPlayer).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/player/${playerID}`)\n    }\n  }\n\n  return (\n\n    <>\n\n      { ((loaded === false) || (matchData === null)) ? \n        \n        <Loader />\n     :\n        \n        <div className=\"match-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToTournament(e)}>\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <MatchCard matchData={matchData} key={matchData.sport_event.id} />\n\n          <MobileBanner />\n\n          <p className=\"match-statistics-title\">MATCH STATISTICS</p>\n\n          <div className=\"match-statistics-container\">\n\n            <div className=\"match-statistic-categories-container\">\n\n              <p className=\"statistic-category\" id=\"placeholder-category\"></p>\n\n              <p className=\"statistic-category\">First Serve Percentage</p>\n\n              <p className=\"statistic-category\">Second Serve Percentage</p>\n\n              <p className=\"statistic-category\">Aces</p>\n\n              <p className=\"statistic-category\">Double Faults</p>\n\n              <p className=\"statistic-category\">First Serve Points Won</p>\n\n              <p className=\"statistic-category\">Second Serve Points Won</p>\n\n              <p className=\"statistic-category\">Receiving Points Won</p>\n\n              <p className=\"statistic-category\">Break Points</p>\n\n              <p className=\"statistic-category total-points\">Total Points Won</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"home\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${homeStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{homeStats.statistics.first_serve_successful}{`/`}{homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults}{` (`}{(homeStats.statistics.first_serve_successful / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_successful}/${homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults} (${(homeStats.statistics.second_serve_successful / (homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.first_serve_points_won}/${homeStats.statistics.first_serve_successful} (${(homeStats.statistics.first_serve_points_won / homeStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_points_won}/${homeStats.statistics.second_serve_successful} (${(homeStats.statistics.second_serve_points_won / homeStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.receiver_points_won}/${(awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful)} (${((homeStats.statistics.receiver_points_won / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.breakpoints_won}/${homeStats.statistics.total_breakpoints} (${(homeStats.statistics.breakpoints_won / homeStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${homeStats.statistics.points_won}`}</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"away\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${awayStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{awayStats.statistics.first_serve_successful}{`/`}{awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults}{` (`}{(awayStats.statistics.first_serve_successful / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_successful}/${awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults} (${(awayStats.statistics.second_serve_successful / (awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.first_serve_points_won}/${awayStats.statistics.first_serve_successful} (${(awayStats.statistics.first_serve_points_won / awayStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_points_won}/${awayStats.statistics.second_serve_successful} (${(awayStats.statistics.second_serve_points_won / awayStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.receiver_points_won}/${(homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful)} (${((awayStats.statistics.receiver_points_won / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.breakpoints_won}/${awayStats.statistics.total_breakpoints} (${(awayStats.statistics.breakpoints_won / awayStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${awayStats.statistics.points_won}`}</p>\n          \n            </div>\n\n          </div>\n      \n        </div>\n      }\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",["219"],"import React from 'react'\n\nimport Header from '../shared/Header'\nimport Sidebar from '../shared/Sidebar'\nimport Footer from '../shared/Footer'\n\nimport './Layout.css'\n\nexport default function Layout (props) {\n\n  return (\n    <div className=\"layout-container\">\n\n      <Header\n      />\n\n      <div className=\"body-container\">\n\n          \n        {/* <Sidebar /> */}\n\n        {props.children}\n\n      </div>\n\n      <Footer />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",["220"],"import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport IconLogo from '../IconLogo'\n\nimport './Header.css'\n\nexport default function Header(props) {\n\n  const [menuVisibility, setMenuVisibility] = useState(false);\n\n  const changeMenuVisibility = (e) => {\n    e.preventDefault();\n    setMenuVisibility(!menuVisibility);\n  };\n\n  return (\n\n    <div className=\"header-container slide-in-top-header\"> \n\n      <div className=\"desktop-nav\">\n\n        <Link to=\"/\" className=\"desktop-logo-container\">\n\n          <IconLogo />\n          \n        </Link>\n\n        <div className=\"desktop-nav-links-container\">\n\n          <Link to=\"/\" className=\"desktop-nav-link\">Home</Link>\n\n          <Link to=\"/calendar\" className=\"desktop-nav-link\">Calendar</Link>\n\n          <Link to=\"/rankings\" className=\"desktop-nav-link\">Rankings</Link>\n\n          <p className=\"desktop-nav-link\">About</p>\n\n          <a className=\"desktop-nav-link\" target=\"_blank\" href=\"https://www.gameset.blog\">Blog</a>\n        </div>\n\n      </div>\n\n      <div className=\"mobile-nav\">\n\n        {menuVisibility ?\n        \n        <i className=\"fas fa-times mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n          \n        :\n\n        <i className=\"fas fa-bars mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n      \n        }\n\n        <div className=\"mobile-logo-container\">\n\n          <IconLogo style={{\n            zIndex: \"5\",\n            textAlign: \"center\",\n            verticalAlign: \"center\",\n            \n        }} />\n\n        </div>\n\n          \n        <div className=\"mobile-header-placeholder\"></div>\n        \n\n      </div>\n\n      <div id=\"mobile-menu\" className={menuVisibility ? \"mobile-menu-visible\" : \"mobile-menu-hidden\"}>\n      \n        <p className=\"mobile-nav-link\">About</p>\n        <p className=\"mobile-nav-link\">Blog</p>\n\n      </div>\n      \n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["221"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n\n    const parseTournamentName = (currentTournament) => {\n      if (currentTournament.name) {\n        setTournamentName(currentTournament.name)\n      } else if (currentTournament.city) {\n        setTournamentName(currentTournament.city)\n      }\n    }\n\n    parseTournamentName(currentTournament)\n    \n    const parseTournamentIcon = (currentTournament) => {\n    \n      if (currentTournament.name.includes(\"doubles\")) {\n        return\n      } else if (currentTournament.code.includes(\"WTA\")) {\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (currentTournament.name.toLowerCase().includes(\"challenger\")) {\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (currentTournament.code.includes(\"ATP\")) {\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (currentTournament.name.includes(\"ITF\")) {\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n\n    parseTournamentIcon(currentTournament)\n\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n\n        {startDate === \"\" ?\n          <div className=\"tournament-date\"></div>\n        : \n          <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        }\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["222","223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactCountryFlag from \"react-country-flag\"\nimport XMLParser from 'react-xml-parser';\n\nimport \"./MatchCard.css\";\n\nimport {\n  getLiveMatchGoalServe\n} from '../utils/live'\n\nexport default function MatchCard(props) {\n  const { matchData, supportingMatchData, discipline, tournamentGender, court, round, status } = props;\n  const history = useHistory();\n\n  console.log(matchData)\n  console.log(supportingMatchData)\n\n  const [currentMatchData, setCurrentMatchData] = useState(matchData)\n\n  const [match, setMatch] = useState(null)\n\n  const [matchInfo, setMatchInfo] = useState({\n\n    tournamentEvent: tournamentGender,\n    tournamentDiscipline: discipline,\n    tournamentRound: round,\n\n    matchCourt: court,\n    matchStatus: status,\n\n    homeCompetitorID: matchData.player[0][\"@id\"],\n    homeCompetitor: matchData.player[0][\"@name\"],\n\n    awayCompetitorID: matchData.player[1][\"@id\"],\n    awayCompetitor: matchData.player[0][\"@name\"]\n\n  })\n\n  const [scoreInfo, setScoreInfo] = useState({\n\n    setOneScoreHome: matchData.player[0][\"@s1\"].split(\".\")[0],\n    setOneScoreAway: matchData.player[1][\"@s1\"].split(\".\")[0],\n    setTwoScoreHome: matchData.player[0][\"@s2\"].split(\".\")[0],\n    setTwoScoreAway: matchData.player[1][\"@s2\"].split(\".\")[0],\n    setThreeScoreHome: matchData.player[0][\"@s3\"].split(\".\")[0],\n    setThreeScoreAway: matchData.player[1][\"@s3\"].split(\".\")[0],\n    setFourScoreHome: matchData.player[0][\"@s4\"].split(\".\")[0],\n    setFourScoreAway: matchData.player[1][\"@s4\"].split(\".\")[0],\n    setFiveScoreHome: matchData.player[0][\"@s5\"].split(\".\")[0],\n    setFiveScoreAway: matchData.player[1][\"@s5\"].split(\".\")[0],\n    serviceScoreHome: matchData.player[0][\"@game_score\"],\n    serviceScoreAway: matchData.player[1][\"@game_score\"],\n    server: \"\"\n\n  })\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n  const CountryCodes = require('countrycodes/countryCodes.js')\n\n  useEffect(() => {\n    if (match === null) {\n      console.log(\"UseEffect #1 - MatchCard.js - MatchCard component Initializing - Setting Match with MatchData prop\")\n      setMatch(matchData)\n    }\n  }, [])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchInfo.matchStatus.toLowerCase() === \"inprogress\" || matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"set 1\" || matchInfo.matchStatus.toLowerCase() === \"set 2\" || matchInfo.matchStatus.toLowerCase() === \"set 3\" || matchInfo.matchStatus.toLowerCase() === \"set 4\" || matchInfo.matchStatus.toLowerCase() === \"set 5\") {\n\n        const currentMatchID = matchData[\"@id\"]\n\n        console.log(currentMatchID)\n        console.log('UseEffect #2 - MatchCard.js - Interval to fetch updated Match Data from Goal Serve about to execute')\n\n        const fetchMatch = async (matchID) => {\n\n          const liveMatchDataXML = await getLiveMatchGoalServe(matchID)\n          console.log(liveMatchDataXML)\n          const liveMatchDataJSON = new XMLParser().parseFromString(liveMatchDataXML)\n          console.log(liveMatchDataJSON)\n\n          setMatch(liveMatchDataJSON)\n\n          setMatchInfo(prevState => ({\n            ...prevState,\n            matchStatus: liveMatchDataJSON.children[0].children[0].attributes.status\n          }))\n\n          setScoreInfo(prevState => ({\n            ...prevState,\n            setOneScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.s1.split(\".\")[0],\n            setOneScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.s1.split(\".\")[0],\n            setTwoScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.s2.split(\".\")[0],\n            setTwoScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.s2.split(\".\")[0],\n            setThreeScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.s3.split(\".\")[0],\n            setThreeScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.s3.split(\".\")[0],\n            setFourScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.s4.split(\".\")[0],\n            setFourScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.s4.split(\".\")[0],\n            setFiveScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.s5.split(\".\")[0],\n            setFiveScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.s5.split(\".\")[0],\n            serviceScoreHome: liveMatchDataJSON.children[0].children[0].children[0].attributes.game_score,\n            serviceScoreAway: liveMatchDataJSON.children[0].children[0].children[1].attributes.game_score,\n          }))\n        }\n\n        fetchMatch(currentMatchID)\n      } else {\n\n        clearInterval(interval)\n\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [match, scoreInfo])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    console.log(currentMatch)\n\n    if (currentMatch !== null) {\n\n      const handleHomeScore = () => {\n        if (matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"inprogress\" || matchInfo.matchStatus.toLowerCase() === \"set 1\" || matchInfo.matchStatus.toLowerCase() === \"set 2\" || matchInfo.matchStatus.toLowerCase() === \"set 3\" || matchInfo.matchStatus.toLowerCase() === \"set 4\" || matchInfo.matchStatus.toLowerCase() === \"set 5\") {\n\n          if (match.player) {\n\n            if (match.player[0][\"@game_score\"] === \"A\") {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: \"AD\"\n              }))\n\n            } else {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: match.player[0][\"@game_score\"]\n              }))\n\n            }\n          \n          } else {\n\n            if (match.children[0].children[0].children[0].attributes.game_score === \"A\") {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: \"AD\"\n              }))\n  \n            } else {\n  \n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: match.children[0].children[0].children[0].attributes.game_score\n              }))\n  \n            }\n\n          }\n\n        }\n      }\n\n      const handleAwayScore = () => {\n        \n        if (matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"set 1\" || matchInfo.matchStatus.toLowerCase() === \"set 2\" || matchInfo.matchStatus.toLowerCase() === \"set 3\" || matchInfo.matchStatus.toLowerCase() === \"set 4\" || matchInfo.matchStatus.toLowerCase() === \"set 5\") {\n\n          if (match.player) {\n\n            if (match.player[1][\"@game_score\"] === \"A\") {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreAway: \"AD\"\n              }))\n\n            } else {\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreAway: match.player[1][\"@game_score\"]\n              }))\n            }\n\n          } else {\n\n            if (match.children[0].children[0].children[1].attributes.game_score === \"A\") {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: \"AD\"\n              }))\n  \n            } else {\n  \n              setScoreInfo(prevState => ({\n                ...prevState,\n                serviceScoreHome: match.children[0].children[0].children[1].attributes.game_score\n              }))\n  \n            }\n\n          }\n        }\n      }\n\n      const handleServer = () => {\n        if (matchInfo.matchStatus.toLowerCase() === \"inprogress\" || matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"set 1\" || matchInfo.matchStatus.toLowerCase() === \"set 2\" || matchInfo.matchStatus.toLowerCase() === \"set 3\" || matchInfo.matchStatus.toLowerCase() === \"set 4\" || matchInfo.matchStatus.toLowerCase() === \"set 5\") {\n\n          if (match.player) {\n\n            if (match.player[0][\"@serve\"] === \"True\") {\n\n              console.log('generating server')\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"home\"\n              }))\n\n            } else if (match.player[1][\"@serve\"] === \"True\") {\n\n              console.log('generating server')\n              \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"away\"\n              }))\n            }\n\n          } else {\n\n            if (match.children[0].children[0].children[0].attributes.serve === \"True\") {\n\n              console.log('generating server')\n  \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"home\"\n              }))\n  \n            } else if (match.children[0].children[0].children[1].attributes.serve === \"True\") {\n  \n              console.log('generating server')\n              \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"away\"\n              }))\n            }\n\n          }\n\n        } else if (matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"finished\" || matchInfo.matchStatus.toLowerCase() === \"complete\" || matchInfo.matchStatus.toLowerCase() === \"retired\") {\n\n          if (match.player) {\n\n            if (match.player[0][\"@winner\"] === \"True\") {\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"homeWinner\"\n              }))\n\n            } else if (match.player[1][\"@winner\"] === \"True\") {\n              \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"awayWinner\"\n              }))\n            }\n\n          } else {\n\n            if (match.children[0].children[0].attributes.winner === \"True\") {\n\n              console.log('generating server')\n  \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"homeWinner\"\n              }))\n  \n            } else if (match.children[0].children[1].attributes.winner === \"True\") {\n  \n              console.log('generating server')\n              \n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"awayWinner\"\n              }))\n            }\n\n          }\n\n        }\n      }\n        \n      handleHomeScore()\n      handleAwayScore()\n      handleServer()\n\n\n    }\n  }, [match, matchInfo])\n\n  const handleMatch = (matchInfo, scoreInfo, matchID) => {\n    localStorage.setItem(\"currentMatch\", JSON.stringify(match))\n    history.push(`/match/${matchID}`);\n  };\n\n  const generateCompetitor = (index, type) => {\n\n    if (matchInfo.tournamentDiscipline === \"Doubles\") {\n\n      const doublesTeamInfo = {\n        partnerA: {\n          name: matchInfo.homeCompetitor.split('/ ')[0]\n        },\n        partnerB: {\n          name: matchInfo.homeCompetitor.split('/ ')[1]\n        },\n      }\n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n          <p className=\"competitor-name\">{doublesTeamInfo.partnerA.name}{'/'}{doublesTeamInfo.partnerB.name}</p>\n\n        </div>\n\n      )\n\n    } else {\n\n      const competitor = matchData.player[index]\n      const competitorName = competitor[\"@name\"].split(\". \")[competitor[\"@name\"].split(\". \").length - 1]\n\n      const generateRanking = (type) => {\n        if (supportingMatchData !== \"No Corresponding Match\" && type === \"home\") {\n\n          const ranking = '(' + supportingMatchData[0].home.ranking + ')'\n          return ranking\n\n        } else if (supportingMatchData !== \"No Corresponding Match\" && type === \"away\") {\n\n          const ranking = '(' + supportingMatchData[0].away.ranking + ')'\n          return ranking\n\n        } else {\n\n          const ranking = \"\"\n          return ranking\n\n        }\n      }\n\n      const competitorRanking = generateRanking(type)\n        console.log(competitorRanking)\n\n      const generateCountry = (type) => {\n        if (supportingMatchData !== \"No Corresponding Match\" && type === \"home\") {\n  \n          const country = supportingMatchData[0].home.country\n          return country\n  \n        } else if (supportingMatchData !== \"No Corresponding Match\" && type === \"away\") {\n  \n          const country = supportingMatchData[0].away.country\n          return country\n  \n        }\n      } \n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n\n          {supportingMatchData !== \"No Corresponding Match\" ?\n            \n            <>\n\n              <ReactCountryFlag\n                className=\"emojiFlag\"\n                countryCode={CountryCodes.getCountry(generateCountry(type)).iso2}\n                aria-label=\"United States\"\n                style={{\n                  fontSize: '150%',\n                  lineHeight: '150%',\n                }}\n              />\n              \n            </>\n\n            :\n\n            <></>\n\n          }\n\n          <p className=\"competitor-name\">{competitorName}{' '}{(competitorRanking !== null && competitorRanking !== undefined) ? competitorRanking : ''}</p>\n\n        </div>\n\n      )\n    }\n  }\n  \n  const homePlayer = generateCompetitor(0, \"home\")\n\n  const awayPlayer = generateCompetitor(1, \"away\")\n\n  return (\n    <div\n      className=\"match-card-container\"\n      id={matchData.id}\n      key={matchData.id}\n    >\n      <div className=\"match-card-header-container\">\n\n        <p className=\"match-card-title\">{`${matchInfo.tournamentEvent} ${matchInfo.tournamentDiscipline}`}</p>\n\n        <p className=\"match-court\">{`${matchInfo.matchCourt}`}</p>\n\n      </div>\n\n      <div className=\"match-container\">\n\n        <div className=\"match-info-container\">\n\n          <p className=\"match-round\">{`${matchInfo.tournamentRound}`}</p>\n\n          <p className=\"match-status\">{`${matchInfo.matchStatus}`}</p>\n\n        </div>\n\n        <div className=\"competitor-container\" id=\"home\">\n\n          {homePlayer}\n\n          {scoreInfo.server === \"home\" ? \n          \n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server home\"></i>\n            \n          :\n            \n          <>\n            \n          {\n            scoreInfo.server === \"homeWinner\" ?\n            \n            <i className=\"fas fa-check service-icon\"></i>\n              \n          :\n          \n            <div className=\"service-icon\" id=\"receiver home\" />\n\n          }\n          </>\n          \n          }\n\n          <p className=\"service-score home\">{scoreInfo.serviceScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-one\">{scoreInfo.setOneScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-two\">{scoreInfo.setTwoScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-three\">{scoreInfo.setThreeScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-four\">{scoreInfo.setFourScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-five\">{scoreInfo.setFiveScoreHome}</p>\n\n        </div>\n\n        <div className=\"set-labels-container\">\n\n        <p className=\"set-label\" id=\"service-score\">SERVICE</p>\n\n          <p className=\"set-label\" id=\"set-one\">1</p>\n\n          <p className=\"set-label\" id=\"set-two\">2</p>\n\n          <p className=\"set-label\" id=\"set-three\">3</p>\n\n          <p className=\"set-label\" id=\"set-four\">4</p>\n\n          <p className=\"set-label\" id=\"set-five\">5</p>\n\n        </div>\n        \n\n        <div className=\"competitor-container\" id=\"away\">\n\n          {awayPlayer}\n\n          {scoreInfo.server === \"away\" ?\n\n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server away\"></i>\n            \n            :\n          \n            <>\n            \n            {\n              scoreInfo.server === \"awayWinner\" ?\n              \n              <i className=\"fas fa-check service-icon\"></i>\n                \n            :\n            \n              <div className=\"service-icon\" id=\"receiver away\" />\n\n            }\n            </>\n\n          }\n\n          <p className=\"service-score away\">{scoreInfo.serviceScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-one\">{scoreInfo.setOneScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-two\">{scoreInfo.setTwoScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-three\">{scoreInfo.setThreeScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-four\">{scoreInfo.setFourScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-five\">{scoreInfo.setFiveScoreAway}</p>\n\n        </div>\n\n      </div>\n\n      <div className=\"match-stats-container\">\n        VIEW MATCH STATS\n      </div>\n      \n    </div>\n  );\n}\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",["228"],"import React from 'react'\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport './OrderOfPlay.css'\n\nexport default function OrderOfPlay(props) {\n\n  const { currentTournamentSchedule } = props\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n  const CountryCodes = require('countrycodes/countryCodes.js')\n\n  const generateMatch = (match) => {\n\n    console.log(match)\n\n      const competitorA = match.home\n      const competitorB = match.away\n\n      const competitorAName = competitorA.first_name.charAt(0) + \". \" + competitorA.last_name\n      const competitorASeed = '(' + competitorA.ranking + ')'\n      const competitorACountry = CountryCodes.getCountry(competitorA.country)\n      const competitorACountryCode = competitorACountry.iso2\n\n      const competitorBName = competitorB.first_name.charAt(0) + \". \" + competitorB.last_name\n      const competitorBSeed = '(' + competitorB.ranking + ')'\n      const competitorBCountry = CountryCodes.getCountry(competitorB.country)\n      const competitorBCountryCode = competitorBCountry.iso2\n\n      const matchTime = new Date(match.date).toLocaleTimeString()\n      const matchTimeString = matchTime.slice(0,-6) + matchTime.substring(matchTime.length - 3)\n      console.log(matchTime)\n      console.log(matchTimeString)\n\n      return (\n\n        <div className=\"upcoming-match-container\" key={match.id}>\n\n          <p className=\"upcoming-match-time\">START TIME: NOT BEFORE {matchTimeString} (UTC)</p>\n          \n          <div className=\"upcoming-match-competitors-container\">\n\n            <ReactCountryFlag\n                className=\"emojiFlag\"\n                countryCode={competitorACountryCode}\n                aria-label=\"United States\"\n                style={{\n                  fontSize: '200%',\n                  lineHeight: '200%',\n              }}\n            />\n\n            <p className=\"competitor-name\">{competitorAName}{' '}{(competitorA.seed !== undefined) ? competitorASeed : ''}{` (`}{competitorACountry.iso3}{`)`}</p>\n\n            <p className='player-separator'>vs.</p>\n\n            <ReactCountryFlag\n                className=\"emojiFlag\"\n                countryCode={competitorBCountryCode}\n                style={{\n                  fontSize: '200%',\n                  lineHeight: '200%',\n                }}\n                aria-label=\"United States\"\n            />\n\n            <p className=\"competitor-name\">{competitorBName}{' '}{(competitorB.seed !== undefined) ? competitorBSeed : ''}{` (`}{competitorBCountry.iso3}{`)`}</p>\n\n          </div>\n          \n        </div>\n\n      )\n  }\n\nconst schedule = currentTournamentSchedule.map((match) => {\n    \n  const matchesJSX = generateMatch(match)\n    \n  return (\n    \n    <>\n      {matchesJSX}\n    </>\n\n  )})\n   \n  return (\n    <div className=\"order-of-play-container\">\n      {schedule}\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",["229"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport './PlayerCard.css'\n\nexport default function PlayerCard(props) {\n\n  const [loaded, setLoaded] =  useState(false)\n  const [detailLevel, setDetailLevel] = useState(\"none\")\n\n  const { playerData, playerCountry, discipline, viewRace, componentUsage, key } = props\n\n  const history = useHistory()\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n  const alpha2Country = getCountryISO2(playerCountry)\n\n  useEffect(() => {\n    const gatherPlayerRankings = (playerData) => {\n\n      if (!loaded && componentUsage === \"rankings\") {\n        setDetailLevel(\"medium\")\n      }\n    }\n    gatherPlayerRankings(playerData)\n  }, [])\n\n  useEffect(() => {\n    if (detailLevel !== \"none\") {\n      setLoaded(true)\n    }\n  }, [detailLevel])\n\n  const handlePlayerDetails = (id) => {\n\n    if (playerData && !viewRace && discipline !== \"Doubles\") {\n\n      localStorage.setItem('currentPlayer', JSON.stringify(playerData))\n      history.push(`/player/${playerData.id}`)\n\n    }\n  }\n\n  // console.log(playerData)\n  \n  return (\n\n    <>\n      \n      {/* { !loaded ?\n        \n        <div className=\"empty-div-playerCard\">\n        </div>\n        \n        : */}\n          \n        <div className=\"player-container\" id={componentUsage === \"rankings\" ? `low-detail` : `high-detail`} key={key} onClick={(e) => handlePlayerDetails(e)}>\n          \n          {componentUsage === \"rankings\" ?\n            \n            <>\n\n              <p className=\"player-ranking\">{playerData.ranking}</p>\n\n              <p className=\"player-name\">{discipline === \"Doubles\" && viewRace ? `${playerData.player_name_1}/${playerData.player_name_2}` : playerData.player_name}</p>\n              \n              {((discipline === \"Doubles\") && viewRace) ?\n                \n                <>\n                </>\n                \n                :\n\n                <div className=\"player-nationality-container\">\n\n                  <ReactCountryFlag\n                    className=\"emojiFlag\"\n                    countryCode={alpha2Country}\n                    aria-label=\"United States\"\n                    style={{\n                      fontSize: '200%',\n                      lineHeight: '200%',\n                    }}\n                  />\n              \n                  <p className=\"player-country\">{playerData.country.toUpperCase()}</p>\n\n                </div>\n\n              }\n\n              <p className=\"player-ranking-points\">{playerData.points}</p>\n\n            </>\n\n            :\n\n            <div className=\"player-nationality-container\">\n\n              <ReactCountryFlag\n                className=\"emojiFlag\"\n                countryCode={alpha2Country}\n                aria-label=\"United States\"\n                style={{\n                  fontSize: '200%',\n                  lineHeight: '200%',\n                }}\n              />\n              \n              <p className=\"player-country\">{playerData.country.toUpperCase()}</p>\n              \n            </div>\n            \n          }\n        \n        </div>\n          \n      {/* } */}\n\n    </>\n      \n  )\n\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",["230"],"import React, {useState, useEffect} from 'react'\n\nimport IconLogo from './IconLogo'\nimport Loader from '../components/Loader'\nimport PlayerCard from './PlayerCard'\n\nimport { convertCountryIOCtoISO3 } from '../utils/country-converter'\n\nexport default function Players(props) {\n\n  const { rankingCategory, discipline, viewRace, activateSwitch } = props\n\n  const [loaded, setLoaded] = useState(false)\n\n  console.log(rankingCategory[1])\n  \n  useEffect(() => {\n    if (activateSwitch) {\n      setLoaded(false)\n    } else if (!activateSwitch) {\n      setLoaded(true)\n    }\n  }, [])\n\n  const generatePlayers = (rankingCategory) => {\n\n    if (!activateSwitch && rankingCategory && discipline === \"Doubles\" && viewRace) {\n\n      const playerCards = rankingCategory?.map((player, index) => {\n\n        return ( \n          \n            <PlayerCard\n              playerData = { player }\n              playerCountry = { null }\n              key={player.current_time}\n              discipline = { discipline }\n              viewRace = { viewRace }\n              componentUsage = \"rankings\"\n            />\n\n      )})\n\n      return playerCards\n\n    } else if (!activateSwitch && rankingCategory) {\n\n      const playerCards = rankingCategory?.map((player, index) => {\n\n        const key = player.name + player.current_time\n      \n        return (\n\n          <PlayerCard\n            playerData={player}\n            playerCountry={convertCountryIOCtoISO3(player.country.toUpperCase())}\n            key={key}\n            discipline={discipline}\n            componentUsage=\"rankings\"\n          />\n\n      )})\n\n      return playerCards\n\n    } else {\n\n      const loader = <Loader />\n\n      return loader\n    }\n  }\n\n  const players = generatePlayers(rankingCategory)\n\n  // console.log(players[1])\n\n  return (\n\n    <>\n      \n      {(activateSwitch || !rankingCategory || !loaded) ?\n\n        <div className=\"loader-icon heartbeat\" id=\"rankings-loader\">\n\n          <IconLogo />\n\n        </div>\n\n      :\n      \n        <>\n    \n            { players }\n          \n        </>\n      \n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",[],["231","232"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx",["233","234"],"import React, { useState, useEffect } from 'react'\n\nimport Loader from './Loader'\nimport Results from './Results'\n\n\nexport default function ResultsContainer (props) {\n\n  const { playerResults } = props\n\n  const [uniqueTournaments, setUniqueTournaments] = useState(null)\n\n  const currentYear = new Date().getFullYear()\n  \n  console.log(currentYear)\n  console.log(playerResults)\n  console.log(uniqueTournaments)\n\n  useEffect(() => {\n\n    if (playerResults) {\n\n      console.log(\"generating unique tournaments\")\n\n      const generateUniqueTournaments = () => {\n\n        console.log('ahead of the loop')\n\n        let tournaments = []\n        let tournamentsData = []\n\n        for (let i = 0; i < playerResults.results.length; i++) {\n\n          console.log(`in the loop ${i} time`)\n\n          if (!tournaments.includes(playerResults.results[i].sport_event.tournament.id) && (playerResults.results[i].sport_event.season.year === currentYear.toString())) {\n            console.log('pushing into array')\n            tournaments.push(playerResults.results[i].sport_event.tournament.id)\n            tournamentsData.push(playerResults.results[i])\n          }\n        }\n        return tournamentsData\n      }\n\n\n      const uniqueTournamentsArray = generateUniqueTournaments()\n\n      setUniqueTournaments(uniqueTournamentsArray)\n    }\n\n  }, [])\n  \n    return (\n     \n      <>\n        \n        {uniqueTournaments === null ?\n\n          <>\n          </>\n          \n        :\n        \n          <>\n      \n            <Results uniqueTournaments={uniqueTournaments} playerResults={playerResults} />\n            \n          </>\n          \n        }\n\n    </>\n  )\n\n}\n\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rapidAPI-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/country-converter.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/RankingDetailCard.jsx",["235"],"import React, { useState, useEffect } from 'react'\n\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './RankingDetailCard.css'\n\nexport default function RankingDetailCard(props) {\n\n  const [loaded, setLoaded] = useState(false)\n  const [detailLevel, setDetailLevel] = useState(\"none\")\n  \n  const [playerRankings, setPlayerRankings] = useState({\n    playerSinglesRanking: \"--\",\n    playerSinglesRankingPoints: \"--\",\n    playerSinglesRaceRanking: \"--\",\n    playerSinglesRaceRankingPoints: \"--\",\n    playerDoublesRanking: \"--\",\n    playerDoublesRankingPoints: \"--\",\n    playerDoublesRaceRanking: \"--\",\n    playerDoublesRaceRankingPoints: \"--\"\n  })\n\n  const { playerData, componentUsage } = props\n\n  useEffect(() => {\n    const gatherPlayerRankings = (playerData) => {\n\n       if (componentUsage === \"playerDetail\") {\n\n        const setPlayerRankingsData = (playerData) => {\n          for (let i = 0; i < playerData.rankings.length; i++) {\n            console.log(\"inside player card loop\")\n            if (playerData.rankings[i].type === \"singles\" && playerData.rankings[i].race_ranking === false) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerSinglesRanking: playerData.rankings[i].rank,\n                playerSinglesRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"singles\" && playerData.rankings[i].race_ranking === true) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerSinglesRaceRanking: playerData.rankings[i].rank,\n                playerSinglesRaceRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"doubles\" && playerData.rankings[i].race_ranking === false) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerDoublesRanking: playerData.rankings[i].rank,\n                playerDoublesRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"doubles\" && playerData.rankings[i].race_ranking === true) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerDoublesRaceRanking: playerData.rankings[i].rank,\n                playerDoublesRaceRankingPoints: playerData.rankings[i].points\n              }));\n            }\n          }\n        }\n\n        setPlayerRankingsData(playerData)\n        setDetailLevel(\"high\")\n      }\n    }\n    gatherPlayerRankings(playerData)\n  }, [])\n\n  useEffect(() => {\n    if (detailLevel !== \"none\") {\n      setLoaded(true)\n    }\n  }, [detailLevel])\n\n  return (\n\n    <>\n      \n      { loaded ?\n        \n        <>\n                \n          <MobileBanner />\n          \n          <div className=\"playerDetail-rankings-container\">\n\n            <p className=\"playerDetail-rankings-container-title\">Ranking Details</p>\n\n            <div className=\"detailed-player-rankings-container\">\n\n              <div className=\"player-rankings-container\" id=\"singles\">\n\n                <p className=\"player-rankings-container-subtitle\">Singles</p>\n\n                <div className=\"ranking-category-container\">\n\n                  <div className=\"ranking-discipline-container\" id=\"singles\">\n\n                    <p className=\"player-rankings-container-header\">Current</p>\n\n                    <p className=\"player-ranking-detail\">{playerRankings.playerSinglesRanking}</p>\n\n                    <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerSinglesRankingPoints} points{`)`}</p>\n\n                  </div>\n\n                  <div className=\"ranking-discipline-container\" id=\"singles-race\">\n\n                    <p className=\"player-rankings-container-header\">Race</p>\n\n                    <p className=\"player-ranking-detail\">{playerRankings.playerSinglesRaceRanking}</p>\n\n                    <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerSinglesRaceRankingPoints} points{`)`}</p>\n\n                  </div>\n                            \n                </div>\n\n              </div>\n\n              <div className=\"player-rankings-container\" id=\"doubles\">\n\n                <p className=\"player-rankings-container-subtitle\">Doubles</p>\n\n                <div className=\"ranking-category-container\">\n\n                  <div className=\"ranking-discipline-container\" id=\"doubles\">\n\n                    <p className=\"player-rankings-container-header\">Current</p>\n\n                    <p className=\"player-ranking-detail\">{playerRankings.playerDoublesRanking}</p>\n                              \n                    <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerDoublesRankingPoints} points{`)`}</p>\n\n                  </div>\n\n                  <div className=\"ranking-discipline-container\" id=\"doubles\">\n\n                    <p className=\"player-rankings-container-header\">Race</p>\n\n                    <p className=\"player-ranking-detail\">{playerRankings.playerDoublesRanking}</p>\n\n                    <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerDoublesRankingPoints} points{`)`}</p>\n\n                  </div>\n                            \n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n        \n        </>\n          \n      :\n          \n        <>\n        </>\n        \n      }\n                \n    </>\n      \n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/goalServe-config.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":13,"column":3,"nodeType":"242","messageId":"243","endLine":13,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":65,"column":6,"nodeType":"246","endLine":65,"endColumn":8,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":108,"column":6,"nodeType":"246","endLine":108,"endColumn":38,"suggestions":"249"},{"ruleId":"244","severity":1,"message":"250","line":138,"column":6,"nodeType":"246","endLine":138,"endColumn":21,"suggestions":"251"},{"ruleId":"244","severity":1,"message":"252","line":166,"column":6,"nodeType":"246","endLine":166,"endColumn":21,"suggestions":"253"},{"ruleId":"244","severity":1,"message":"254","line":177,"column":6,"nodeType":"246","endLine":177,"endColumn":19,"suggestions":"255"},{"ruleId":"240","severity":1,"message":"256","line":10,"column":3,"nodeType":"242","messageId":"243","endLine":10,"endColumn":17},{"ruleId":"240","severity":1,"message":"257","line":20,"column":46,"nodeType":"242","messageId":"243","endLine":20,"endColumn":56},{"ruleId":"244","severity":1,"message":"258","line":25,"column":6,"nodeType":"246","endLine":25,"endColumn":8,"suggestions":"259"},{"ruleId":"244","severity":1,"message":"260","line":33,"column":6,"nodeType":"246","endLine":33,"endColumn":29,"suggestions":"261"},{"ruleId":"240","severity":1,"message":"262","line":39,"column":15,"nodeType":"242","messageId":"243","endLine":39,"endColumn":23},{"ruleId":"244","severity":1,"message":"263","line":52,"column":6,"nodeType":"246","endLine":52,"endColumn":14,"suggestions":"264"},{"ruleId":"240","severity":1,"message":"265","line":1,"column":48,"nodeType":"242","messageId":"243","endLine":1,"endColumn":52},{"ruleId":"244","severity":1,"message":"266","line":135,"column":6,"nodeType":"246","endLine":135,"endColumn":35,"suggestions":"267"},{"ruleId":"244","severity":1,"message":"268","line":143,"column":6,"nodeType":"246","endLine":143,"endColumn":23,"suggestions":"269"},{"ruleId":"244","severity":1,"message":"270","line":117,"column":6,"nodeType":"246","endLine":117,"endColumn":18,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":136,"column":5,"nodeType":"274","messageId":"275","endLine":143,"endColumn":6},{"ruleId":"240","severity":1,"message":"276","line":44,"column":10,"nodeType":"242","messageId":"243","endLine":44,"endColumn":41},{"ruleId":"240","severity":1,"message":"277","line":45,"column":10,"nodeType":"242","messageId":"243","endLine":45,"endColumn":41},{"ruleId":"240","severity":1,"message":"278","line":45,"column":43,"nodeType":"242","messageId":"243","endLine":45,"endColumn":77},{"ruleId":"240","severity":1,"message":"279","line":47,"column":10,"nodeType":"242","messageId":"243","endLine":47,"endColumn":36},{"ruleId":"240","severity":1,"message":"280","line":48,"column":10,"nodeType":"242","messageId":"243","endLine":48,"endColumn":36},{"ruleId":"240","severity":1,"message":"281","line":48,"column":38,"nodeType":"242","messageId":"243","endLine":48,"endColumn":67},{"ruleId":"240","severity":1,"message":"282","line":51,"column":10,"nodeType":"242","messageId":"243","endLine":51,"endColumn":46},{"ruleId":"240","severity":1,"message":"283","line":52,"column":10,"nodeType":"242","messageId":"243","endLine":52,"endColumn":46},{"ruleId":"240","severity":1,"message":"284","line":61,"column":24,"nodeType":"242","messageId":"243","endLine":61,"endColumn":37},{"ruleId":"240","severity":1,"message":"285","line":61,"column":53,"nodeType":"242","messageId":"243","endLine":61,"endColumn":64},{"ruleId":"240","severity":1,"message":"286","line":61,"column":66,"nodeType":"242","messageId":"243","endLine":61,"endColumn":77},{"ruleId":"244","severity":1,"message":"287","line":93,"column":6,"nodeType":"246","endLine":93,"endColumn":8,"suggestions":"288"},{"ruleId":"244","severity":1,"message":"289","line":116,"column":6,"nodeType":"246","endLine":116,"endColumn":39,"suggestions":"290"},{"ruleId":"244","severity":1,"message":"291","line":134,"column":8,"nodeType":"246","endLine":134,"endColumn":49,"suggestions":"292"},{"ruleId":"244","severity":1,"message":"293","line":160,"column":8,"nodeType":"246","endLine":160,"endColumn":49,"suggestions":"294"},{"ruleId":"240","severity":1,"message":"295","line":200,"column":23,"nodeType":"242","messageId":"243","endLine":200,"endColumn":67},{"ruleId":"240","severity":1,"message":"296","line":243,"column":23,"nodeType":"242","messageId":"243","endLine":243,"endColumn":67},{"ruleId":"240","severity":1,"message":"297","line":289,"column":23,"nodeType":"242","messageId":"243","endLine":289,"endColumn":62},{"ruleId":"240","severity":1,"message":"298","line":335,"column":23,"nodeType":"242","messageId":"243","endLine":335,"endColumn":62},{"ruleId":"244","severity":1,"message":"299","line":398,"column":6,"nodeType":"246","endLine":398,"endColumn":47,"suggestions":"300"},{"ruleId":"244","severity":1,"message":"301","line":429,"column":6,"nodeType":"246","endLine":429,"endColumn":39,"suggestions":"302"},{"ruleId":"244","severity":1,"message":"303","line":431,"column":3,"nodeType":"242","endLine":431,"endColumn":12,"suggestions":"304"},{"ruleId":"272","severity":1,"message":"273","line":445,"column":5,"nodeType":"274","messageId":"275","endLine":455,"endColumn":6},{"ruleId":"240","severity":1,"message":"305","line":21,"column":10,"nodeType":"242","messageId":"243","endLine":21,"endColumn":26},{"ruleId":"244","severity":1,"message":"306","line":88,"column":6,"nodeType":"246","endLine":88,"endColumn":14,"suggestions":"307"},{"ruleId":"240","severity":1,"message":"308","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":15},{"ruleId":"309","severity":1,"message":"310","line":39,"column":11,"nodeType":"311","endLine":39,"endColumn":91},{"ruleId":"244","severity":1,"message":"312","line":47,"column":6,"nodeType":"246","endLine":47,"endColumn":8,"suggestions":"313"},{"ruleId":"240","severity":1,"message":"314","line":19,"column":10,"nodeType":"242","messageId":"243","endLine":19,"endColumn":26},{"ruleId":"240","severity":1,"message":"315","line":19,"column":28,"nodeType":"242","messageId":"243","endLine":19,"endColumn":47},{"ruleId":"240","severity":1,"message":"316","line":58,"column":9,"nodeType":"242","messageId":"243","endLine":58,"endColumn":23},{"ruleId":"244","severity":1,"message":"317","line":66,"column":6,"nodeType":"246","endLine":66,"endColumn":8,"suggestions":"318"},{"ruleId":"244","severity":1,"message":"319","line":120,"column":6,"nodeType":"246","endLine":120,"endColumn":24,"suggestions":"320"},{"ruleId":"240","severity":1,"message":"321","line":316,"column":9,"nodeType":"242","messageId":"243","endLine":316,"endColumn":20},{"ruleId":"240","severity":1,"message":"316","line":10,"column":9,"nodeType":"242","messageId":"243","endLine":10,"endColumn":23},{"ruleId":"244","severity":1,"message":"322","line":27,"column":6,"nodeType":"246","endLine":27,"endColumn":8,"suggestions":"323"},{"ruleId":"244","severity":1,"message":"324","line":23,"column":6,"nodeType":"246","endLine":23,"endColumn":8,"suggestions":"325"},{"ruleId":"236","replacedBy":"326"},{"ruleId":"238","replacedBy":"327"},{"ruleId":"240","severity":1,"message":"328","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"244","severity":1,"message":"329","line":51,"column":6,"nodeType":"246","endLine":51,"endColumn":8,"suggestions":"330"},{"ruleId":"244","severity":1,"message":"331","line":66,"column":6,"nodeType":"246","endLine":66,"endColumn":8,"suggestions":"332"},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],"no-unused-vars","'getDailyResultsRapidAPI' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentYear', 'today', and 'tournaments.length'. Either include them or remove the dependency array.","ArrayExpression",["335"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'dailyResults'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has a missing dependency: 'liveMatches'. Either include it or remove the dependency array.",["338"],"React Hook useEffect has missing dependencies: 'dailyResults' and 'dailySchedule'. Either include them or remove the dependency array.",["339"],"'getTournaments' is defined but never used.","'setViewITF' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tournaments'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has missing dependencies: 'calendarTournamentData' and 'calendarTournaments'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCalendarTournamentData' needs the current value of 'calendarTournaments'.",["341"],"'calendar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'calendarTournaments' and 'viewCalendar'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCalendarTournamentData' needs the current value of 'calendarTournaments'.",["342"],"'lazy' is defined but never used.","React Hook useEffect has missing dependencies: 'activateSwitch', 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'loaded', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["343"],"React Hook useEffect has missing dependencies: 'activateSwitch' and 'loaded'. Either include them or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["345"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'completedSinglesMatchesRapidAPI' is assigned a value but never used.","'completedDoublesMatchesRapidAPI' is assigned a value but never used.","'setCompletedDoublesMatchesRapidAPI' is assigned a value but never used.","'liveSinglesMatchesRapidAPI' is assigned a value but never used.","'liveDoublesMatchesRapidAPI' is assigned a value but never used.","'setLiveDoublesMatchesRapidAPI' is assigned a value but never used.","'combinedSinglesMatchDetailsGoalServe' is assigned a value but never used.","'combinedDoublesMatchDetailsGoalServe' is assigned a value but never used.","'dailySchedule' is assigned a value but never used.","'liveMatches' is assigned a value but never used.","'currentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params' and 'tournaments'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', 'currentYear', and 'params'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'currentTournamentScheduleRapidAPI' and 'dailyResults'. Either include them or remove the dependency array.",["348"],"React Hook useEffect has a missing dependency: 'currentTournamentScheduleRapidAPI'. Either include it or remove the dependency array.",["349"],"'filteredCompletedSinglesMatchesDataGoalServe' is assigned a value but never used.","'filteredCompletedDoublesMatchesDataGoalServe' is assigned a value but never used.","'filteredLiveSinglesMatchesDataGoalServe' is assigned a value but never used.","'filteredLiveDoublesMatchesDataGoalServe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentTournamentRapidAPI', 'currentTournamentScheduleRapidAPI', and 'liveSinglesMatchDetailsGoalServe'. Either include them or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'currentTournamentRapidAPI'. Either include it or remove the dependency array.",["351"],"React Hook useEffect contains a call to 'setDataLoadedRapidAPIGoalServe'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [completedMatchesLoadedRapidAPI, liveMatchesLoadedRapidAPI, matchDetailsLoadedGoalServe] as a second argument to the useEffect Hook.",["352"],"'tournamentGender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'matchData.id' and 'matchData.matchStatus'. Either include them or remove the dependency array.",["353"],"'Sidebar' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'tournament'. Either include it or remove the dependency array.",["354"],"'currentMatchData' is assigned a value but never used.","'setCurrentMatchData' is assigned a value but never used.","'getCountryISO2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match' and 'matchData'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["356"],"'handleMatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'componentUsage', 'loaded', and 'playerData'. Either include them or remove the dependency array.",["357"],"React Hook useEffect has a missing dependency: 'activateSwitch'. Either include it or remove the dependency array.",["358"],["333"],["334"],"'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["359"],"React Hook useEffect has missing dependencies: 'componentUsage' and 'playerData'. Either include them or remove the dependency array.",["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},"Update the dependencies array to be: [currentYear, today, tournaments.length]",{"range":"413","text":"414"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"415","text":"416"},"Update the dependencies array to be: [dailyResults, dailySchedule]",{"range":"417","text":"418"},"Update the dependencies array to be: [dailySchedule, liveMatches]",{"range":"419","text":"420"},"Update the dependencies array to be: [dailyResults, dailySchedule, liveMatches]",{"range":"421","text":"422"},"Update the dependencies array to be: [tournaments]",{"range":"423","text":"424"},"Update the dependencies array to be: [calendarTournamentData, calendarTournaments, viewCalendar, viewITF]",{"range":"425","text":"426"},"Update the dependencies array to be: [calendarTournaments, filter, viewCalendar]",{"range":"427","text":"428"},"Update the dependencies array to be: [event, discipline, viewRace, loaded, activateSwitch, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"429","text":"430"},"Update the dependencies array to be: [activateSwitch, loaded, rankingCategory]",{"range":"431","text":"432"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"433","text":"434"},"Update the dependencies array to be: [params, tournaments]",{"range":"435","text":"436"},"Update the dependencies array to be: [currentDay, currentMonth, currentTournamentLoadedRapidAPI, currentYear, params]",{"range":"437","text":"438"},"Update the dependencies array to be: [currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI, dailyResults]",{"range":"439","text":"440"},"Update the dependencies array to be: [currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI]",{"range":"441","text":"442"},"Update the dependencies array to be: [currentTournamentRapidAPI, currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI, liveSinglesMatchDetailsGoalServe]",{"range":"443","text":"444"},"Update the dependencies array to be: [currentTournamentLoadedRapidAPI, currentTournamentRapidAPI]",{"range":"445","text":"446"},"Add dependencies array: [completedMatchesLoadedRapidAPI, liveMatchesLoadedRapidAPI, matchDetailsLoadedGoalServe]",{"range":"447","text":"448"},"Update the dependencies array to be: [loaded, matchData.id, matchData.matchStatus]",{"range":"449","text":"450"},"Update the dependencies array to be: [tournament]",{"range":"451","text":"452"},"Update the dependencies array to be: [match, matchData]",{"range":"453","text":"454"},"Update the dependencies array to be: [match, matchData, matchInfo.matchStatus, scoreInfo]",{"range":"455","text":"456"},"Update the dependencies array to be: [componentUsage, loaded, playerData]",{"range":"457","text":"458"},"Update the dependencies array to be: [activateSwitch]",{"range":"459","text":"460"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"461","text":"462"},"Update the dependencies array to be: [componentUsage, playerData]",{"range":"463","text":"464"},[2228,2230],"[currentYear, today, tournaments.length]",[3274,3306],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[4046,4061],"[dailyResults, dailySchedule]",[4822,4837],"[dailySchedule, liveMatches]",[5188,5201],"[dailyResults, dailySchedule, liveMatches]",[752,754],"[tournaments]",[960,983],"[calendarTournamentData, calendarTournaments, viewCalendar, viewITF]",[1520,1528],"[calendarTournaments, filter, viewCalendar]",[5963,5992],"[event, discipline, viewRace, loaded, activateSwitch, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[6241,6258],"[activateSwitch, loaded, rankingCategory]",[3754,3766],"[dataLoaded, playerData]",[3935,3937],"[params, tournaments]",[4815,4848],"[currentDay, currentMonth, currentTournamentLoadedRapidAPI, currentYear, params]",[5637,5678],"[currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI, dailyResults]",[6819,6860],"[currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI]",[16347,16388],"[currentTournamentRapidAPI, currentTournamentScheduleLoadedRapidAPI, currentTournamentScheduleRapidAPI, liveSinglesMatchDetailsGoalServe]",[17851,17884],"[currentTournamentLoadedRapidAPI, currentTournamentRapidAPI]",[18061,18061],", [completedMatchesLoadedRapidAPI, liveMatchesLoadedRapidAPI, matchDetailsLoadedGoalServe]",[2649,2657],"[loaded, matchData.id, matchData.matchStatus]",[1838,1840],"[tournament]",[2189,2191],"[match, matchData]",[4922,4940],"[match, matchData, matchInfo.matchStatus, scoreInfo]",[773,775],"[componentUsage, loaded, playerData]",[572,574],"[activateSwitch]",[1328,1330],"[currentYear, playerResults]",[2599,2601],"[componentUsage, playerData]"]