[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx":"31","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx":"32","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx":"33","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx":"34","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx":"35"},{"size":589,"mtime":1610168112225,"results":"36","hashOfConfig":"37"},{"size":4533,"mtime":1616480386079,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1610088373592,"results":"39","hashOfConfig":"37"},{"size":999,"mtime":1617245852587,"results":"40","hashOfConfig":"37"},{"size":7393,"mtime":1616626597972,"results":"41","hashOfConfig":"37"},{"size":5698,"mtime":1622666605668,"results":"42","hashOfConfig":"37"},{"size":1726,"mtime":1616260151754,"results":"43","hashOfConfig":"37"},{"size":6297,"mtime":1616712536811,"results":"44","hashOfConfig":"37"},{"size":14219,"mtime":1616712551988,"results":"45","hashOfConfig":"37"},{"size":9879,"mtime":1616712522301,"results":"46","hashOfConfig":"37"},{"size":357,"mtime":1622086108777,"results":"47","hashOfConfig":"37"},{"size":1486,"mtime":1616471701047,"results":"48","hashOfConfig":"37"},{"size":438,"mtime":1616362426753,"results":"49","hashOfConfig":"37"},{"size":1881,"mtime":1616365380313,"results":"50","hashOfConfig":"37"},{"size":511,"mtime":1610402681806,"results":"51","hashOfConfig":"37"},{"size":549,"mtime":1610387506009,"results":"52","hashOfConfig":"37"},{"size":782,"mtime":1610390275911,"results":"53","hashOfConfig":"37"},{"size":2970,"mtime":1616712035396,"results":"54","hashOfConfig":"37"},{"size":18770,"mtime":1616298076617,"results":"55","hashOfConfig":"37"},{"size":767,"mtime":1615137524649,"results":"56","hashOfConfig":"37"},{"size":200,"mtime":1610517578412,"results":"57","hashOfConfig":"37"},{"size":669,"mtime":1610602823119,"results":"58","hashOfConfig":"37"},{"size":271,"mtime":1610687892583,"results":"59","hashOfConfig":"37"},{"size":6306,"mtime":1616479213618,"results":"60","hashOfConfig":"37"},{"size":1148,"mtime":1622666634453,"results":"61","hashOfConfig":"37"},{"size":8559,"mtime":1616298256939,"results":"62","hashOfConfig":"37"},{"size":1324,"mtime":1622085977834,"results":"63","hashOfConfig":"37"},{"size":1657,"mtime":1616214309776,"results":"64","hashOfConfig":"37"},{"size":901,"mtime":1613766193544,"results":"65","hashOfConfig":"37"},{"size":1003,"mtime":1613629547033,"results":"66","hashOfConfig":"37"},{"size":1645,"mtime":1613465539505,"results":"67","hashOfConfig":"37"},{"size":4768,"mtime":1616021734575,"results":"68","hashOfConfig":"37"},{"size":1053,"mtime":1616544251397,"results":"69","hashOfConfig":"37"},{"size":174,"mtime":1616260120177,"results":"70","hashOfConfig":"37"},{"size":174,"mtime":1616260120177,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ks3lcs",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["154","155"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["156","157","158"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getCurrentTournaments\n} from './utils/tournaments'\n\nimport {\n  getLiveMatches\n} from './utils/live'\n\nimport {\n  getDailySchedule,\n  getDailyResults\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [ tournaments, setTournaments ] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n    const oneDay = 60 * 60 * 24 * 1000\n\n    const tournamentData = localStorage.getItem('tournaments')\n    const createdAt = localStorage.getItem('createdAt')\n\n    if (totalTournaments === 0 || tournamentData === undefined || tournamentData === null || createdAt === undefined || ((today - createdAt) > (oneDay))) {\n\n      const gatherActiveTournaments = async () => {\n        console.log('apirequest 1')\n        const tournamentData = await getCurrentTournaments()\n        console.log(tournamentData)\n        setTournaments(tournamentData.tournaments)\n        console.log(tournamentData.tournaments)\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData.tournaments))\n        localStorage.setItem('createdAt', today)\n        setTournamentsLoaded(true)\n      }\n      gatherActiveTournaments()\n\n    } else {\n\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    console.log(tournamentsLoaded)\n\n    if (tournamentsLoaded) {\n      console.log('apirequest 2')\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n        const dailyScheduleData = await getDailySchedule(currentYear, currentMonth, currentDay)\n        console.log(dailyScheduleData.sport_events)\n        if (dailyScheduleData.length === 0) {\n          setDailySchedule(dailyScheduleData)\n        } else {\n          setDailySchedule(dailyScheduleData.sport_events)\n        }\n      }\n      const timeOut = setTimeout(() => gatherDailySchedule(year, month, day), 1001)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [tournaments, tournamentsLoaded])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 3')\n      const gatherDailyResults = async (currentYear, currentMonth, currentDay) => {\n        const dailyResultsData = await getDailyResults(currentYear, currentMonth, currentDay)\n        console.log(dailyResultsData)\n        console.log(dailyResultsData.results)\n        setDailyResults(dailyResultsData.results)\n      }\n\n      const timeOut = setTimeout(() => gatherDailyResults(year, month, day), 2002)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 4')\n      const gatherLiveMatches = async () => {\n        const liveMatchesData = await getLiveMatches()\n        console.log(liveMatchesData.summaries)\n        if (liveMatchesData.summaries.length === 0) {\n          setLoaded(true)\n        } else {\n          setLiveMatches(liveMatchesData.summaries)\n          setLoaded(true)\n        }\n      }\n      const timeOut = setTimeout(() => gatherLiveMatches(), 3003)\n      return () => clearTimeout(timeOut)\n    }\n    \n  }, [dailySchedule])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",["159","160","161"],"import React, {useState, useEffect} from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Tournaments from '../components/Tournaments'\n\nimport './Calendar.css'\n\nimport {\n  getTournaments\n} from '../utils/tournaments'\n\nexport default function Calendar(props) {\n  \n  const [viewCalendar, setViewCalendar] = useState(false)\n  const [calendarTournaments, setCalendarTournaments] = useState(null)\n  const [calendarTournamentsITF, setCalendarTournamentsITF] = useState(null)\n  const [calendarTournamentData, setCalendarTournamentData] = useState(null)\n  const [filter, setFilter] = useState(\"\")\n\n  const { tournaments, currentDate, viewITF, setViewITF } = props\n\n  useEffect(() => {\n\n    if (viewCalendar) {\n\n      const getDate = (str) => {\n        const splitDate = str.split(\"/\")\n        const date = splitDate[0]+splitDate[1]+splitDate[2]\n        return date\n      }\n\n      const gatherCalendar = async () => {\n        const calendarData = await getTournaments()\n        console.log(calendarData)\n        const calendar = calendarData.tournaments.sort((a, b) => {\n          a = getDate(a.current_season.end_date); b = getDate(b.current_season.end_date); return a.localeCompare(b)\n      })\n        console.log(calendar)\n        setCalendarTournaments(calendar.filter(tournament => {\n          return (\n            ((tournament.current_season.year === \"2021\") && (tournament.type === \"singles\") && (!tournament.name.toLowerCase().includes(\"itf\")))\n          )\n        }))\n        setCalendarTournamentData(calendar.filter(tournament => {\n          return (\n            ((tournament.current_season.year === \"2021\") && (tournament.type === \"singles\") && (!tournament.name.toLowerCase().includes(\"itf\")))\n          )\n        }))\n        setCalendarTournamentsITF(calendar)\n      }\n      gatherCalendar()\n    }\n  }, [viewCalendar])\n\n  useEffect(() => {\n    if (calendarTournamentData !== undefined || calendarTournamentData !== null) {\n      if (viewCalendar && viewITF) {\n        setCalendarTournamentData(calendarTournamentsITF)\n      } else if (viewCalendar) {\n        setCalendarTournamentData(calendarTournaments)\n      }\n    }\n  }, [viewITF])\n\n  useEffect(() => {\n\n    if (filter != \"\" && viewCalendar) {\n\n      if (viewITF) {\n\n        const calendar = calendarTournamentsITF\n    \n        setCalendarTournamentData(calendar.filter((tournament) => {\n\n          const tournamentMonth = tournament.current_season.start_date.split(\"-\")[1]\n\n          return (\n            (tournamentMonth === filter)\n          )\n        }))\n      } else {\n\n        const calendar = calendarTournaments\n\n        setCalendarTournamentData(calendar.filter((tournament) => {\n\n          const tournamentMonth = tournament.current_season.start_date.split(\"-\")[1]\n\n          return (\n            (tournamentMonth === filter)\n          )\n        }))\n\n      }\n    }\n  }, [filter])\n\n  const handleSwitch = () => {\n    setViewCalendar(!viewCalendar)\n  }\n\n  const handleChange = (e) => {\n    setViewITF(!viewITF)\n  }\n\n  const handleNavigation = (month) => {\n    setFilter(month)\n  }\n\n\n  return (\n    <div className=\"calendar-container\">\n\n      <p className=\"calendar-container-title\">Tournament Calendar</p>\n\n      <div className=\"calendar-switch-container\">\n\n        <p className=\"calendar-switch-label\">Ongoing</p>\n\n        <Switch onChange={handleSwitch} checked={viewCalendar ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n        \n        <p className=\"calendar-switch-label\">Calendar</p>\n        \n      </div>\n\n      <div className=\"checkbox-container\">\n\n        <label class=\"checkbox-label\">\n          <input type=\"checkbox\"\n            className=\"checkbox-input\"\n            id=\"calendar-checkbox\"\n            name=\"viewITF\"\n            value={viewITF}\n            onChange={(e) => handleChange(e)}\n          />\n            <span class=\"checkbox-custom rectangular\"></span>\n        </label>\n        \n        <p className=\"checkbox-label-copy\"> Include ITF?</p>\n  \n      </div>\n\n      <MobileBanner />\n\n      <div class=\"calendar-navigation-container-desktop\">\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"01\")}>JAN</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"02\")}>FEB</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"03\")}>MAR</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"04\")}>APR</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"05\")}>MAY</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"06\")}>JUN</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"07\")}>JUL</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"08\")}>AUG</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"09\")}>SEP</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"10\")}>OCT</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"11\")}>NOV</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"12\")}>DEC</p>\n\n      </div>\n\n      <div className=\"calendar-navigation-container-mobile\">\n        <select className=\"calendar-navigations-select-input\" defaultValue={'default'} name=\"mobile-navigation\" onChange={(e) => handleNavigation(e.target.value)}>\n          <option defaultValue=\"default\">-- Select a Month --</option>\n          <option value=\"01\" className=\"calendar-navigations-select-option\">JAN</option>\n          <option value=\"02\" className=\"calendar-navigations-select-option\">FEB</option>\n          <option value=\"03\" className=\"calendar-navigations-select-option\">MAR</option>\n          <option value=\"04\" className=\"calendar-navigations-select-option\">APR</option>\n          <option value=\"05\" className=\"calendar-navigations-select-option\">MAY</option>\n          <option value=\"06\" className=\"calendar-navigations-select-option\">JUN</option>\n          <option value=\"07\" className=\"calendar-navigations-select-option\">JUL</option>\n          <option value=\"08\" className=\"calendar-navigations-select-option\">AUG</option>\n          <option value=\"09\" className=\"calendar-navigations-select-option\">SEP</option>\n          <option value=\"10\" className=\"calendar-navigations-select-option\">OCT</option>\n          <option value=\"11\" className=\"calendar-navigations-select-option\">NOV</option>\n          <option value=\"12\" className=\"calendar-navigations-select-option\">DEC</option>\n        </select>\n      </div>\n      \n      <Tournaments tournaments={viewCalendar ? calendarTournamentData : tournaments} currentDate={currentDate} viewCalendar={viewCalendar} />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["162"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["163","164"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport TournamentCard from '../components/TournamentCard'\nimport ResultsContainer from '../components/ResultsContainer'\nimport PlayerCard from '../components/PlayerCard'\n\nimport './PlayerDetail.css'\n\nimport {\n  getPlayer,\n  getPlayerResults,\n  getPlayerSchedule\n} from \"../utils/players\"\n\nexport default function PlayerDetail(props) {\n\n  const [ dataLoaded, setDataLoadedm] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [view, setView] = useState('Player Results')\n\n  const [playerData, setPlayerData] = useState(null)\n  const [playerResults, setPlayerResults] = useState(null)\n  const [playerSchedule, setPlayerSchedule] = useState(false)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const currentPlayer = localStorage.getItem('currentPlayer')\n    const playerScheduleData = localStorage.getItem('playerSchedule')\n    const playerResultsData = localStorage.getItem('playerResults')\n    const playerDetails = localStorage.getItem('playerDetails')\n\n    if (playerDetails === undefined || playerDetails === null || playerDetails.length <= 2) {\n\n      console.log('gathering player data via API Call 1')\n\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerData = async (currentPlayerID) => {\n        const playerInfo = await getPlayer(currentPlayerID)\n        console.log(playerInfo)\n        localStorage.setItem('playerDetails', JSON.stringify(playerInfo))\n        setPlayerData(playerInfo)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerData(currentPlayerID), 3001)\n      return () => clearTimeout(timeOut)\n\n    } else {\n\n      console.log(\n        'gathering Player Data from LocalStorage'\n      )\n\n      setPlayerData(JSON.parse(playerDetails))\n      setPlayerResults(JSON.parse(playerResultsData))\n      setPlayerSchedule(JSON.parse(playerScheduleData))\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerResults = async (currentPlayerID) => {\n        const playerResultsInfo = await getPlayerResults(currentPlayerID)\n        localStorage.setItem('playerResults', JSON.stringify(playerResultsInfo))\n        setPlayerResults(playerResultsInfo)\n      }\n\n      gatherPlayerResults(currentPlayerID)\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerSchedule = async (currentPlayerID) => {\n        const playerScheduleInfo = await getPlayerSchedule(currentPlayerID)\n        localStorage.setItem('playerSchedule', JSON.stringify(playerScheduleInfo))\n        setPlayerSchedule(playerScheduleInfo)\n        setDataLoadedm(true)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerSchedule(currentPlayerID), 1001)\n      return () => clearTimeout(timeOut)\n\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    console.log(playerData)\n    console.log('PlayerData and PlayerSchedule/Results are being checked')\n\n    if (dataLoaded) {\n\n      console.log('data has been loaded and component will mount')\n      setLoaded(true)\n    }\n  }, [dataLoaded])\n\n  const scheduleItems = playerSchedule && playerSchedule?.schedule.map((tournament, index) => {\n\n    return (\n\n    <TournamentCard\n      tournament={tournament.tournament}\n      index={index}\n      key={tournament.tournament.id}\n      startDate={\"\"}\n      endDate={\"\"}\n    />\n      \n  )})\n\n  console.log(playerResults)\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Player Schedule\":\n        setView(\"Player Schedule\")\n        break;\n      case \"Player Results\":\n        setView(\"Player Results\")\n        break;\n    }\n  }\n\n  const handleReturnToTournament = (e) => {\n    localStorage.removeItem('currentPlayer')\n    localStorage.removeItem('playerSchedule')\n    localStorage.removeItem('playerResults')\n    localStorage.removeItem('playerDetails')\n    history.push('/rankings')\n  }\n  \n  return (\n    \n    <>\n\n      { !loaded ? \n      \n        <Loader />\n\n        :\n\n        <>\n          \n          <div className=\"player-detail-container\">\n\n            <div className=\"back-button-container\" onClick={(e) => handleReturnToTournament(e)} >\n\n              <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n              <p className=\"back-button-copy\">BACK</p>\n\n            </div>\n\n            <PlayerCard playerData={playerData} key={playerData.player.id} playerCountry={playerData.player.country_code} viewRace={false} />\n\n            <MobileBanner />\n            \n            <div className=\"player-views-container\">\n\n              <button className=\"player-views-button\" id=\"player-results-button\" onClick={(e) => handleChangeView(\"Player Results\")}> Player Results</button>\n\n              <button className=\"player-views-button\" id=\"player-schedule-button\" onClick={(e) => handleChangeView(\"Player Schedule\")} > Player Schedule</button>\n\n            </div>\n\n              {view === \"Player Results\" ? \n              \n                <div className=\"player-results-container\">\n\n                  <ResultsContainer playerResults={playerResults} />\n\n                </div>\n              \n                :\n                \n                <div className=\"player-schedule-container\">\n                \n                  {scheduleItems.length === 0 ?\n                  \n                    <p className=\"match-container-copy\">Upcoming player schedule currently unavailable.</p>\n                  \n                  :\n                  \n                    <>\n\n                    {scheduleItems}\n                    \n                    </>\n              \n                  }\n\n                </div>\n              \n              }\n              \n            </div>\n          \n        </>\n      \n      }\n\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["165","166","167","168","169","170","171"],"import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Matches from '../components/Matches'\nimport OrderOfPlay from '../components/OrderOfPlay'\n\nimport './TournamentDetail.css'\n\nexport default function TournamentDetail(props) {\n\n  // Data Loaded Switches\n  const [currentSinglesTournamentLoaded, setCurrentSinglesTournamentLoaded] = useState(false)\n  const [currentDoublesTournamentLoaded, setCurrentDoublesTournamentLoaded] = useState(false)\n  const [currentTournamentScheduleLoaded, setCurrentTournamentScheduleLoaded] = useState(false)\n  const [currentTournamentCompletedMatchesLoaded, setCurrentTournamentCompletedMatchesLoaded] = useState(false)\n  const [currentTournamentLiveMatchesLoaded, setCurrentTournamentLiveMatchesLoaded] = useState(false)\n  \n  // Visibility Switches\n  const [ currentMode, setCurrentMode ] = useState(false)\n  const [ view, setView ] = useState(\"Live Scores\")\n\n  // Data\n    // Tournament Info\n  const [ currentSinglesTournament, setCurrentSinglesTournament ] = useState([])\n  const [currentDoublesTournament, setCurrentDoublesTournament] = useState([])\n  \n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentGender, setTournamentGender] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n\n    // Tournament Schedule\n  const [ currentTournamentSchedule, setCurrentTournamentSchedule ] = useState([])\n    // Completed Matches (Results)\n  const [ completedSinglesMatches, setCompletedSinglesMatches ] = useState([])\n  const [ completedDoublesMatches, setCompletedDoublesMatches ] = useState([])\n    // Live Matches\n  const [ liveSinglesMatches, setLiveSinglesMatches ] = useState([])\n  const [ liveDoublesMatches, setLiveDoublesMatches ] = useState([])\n\n  const params = useParams();\n  const history = useHistory()\n\n  const { tournaments, dailySchedule, dailyResults, liveMatches } = props;\n\n// UseEffects\n  \n  // Sets currentSinglesTournament Object\n  useEffect(() => {\n    if (tournaments !== undefined && tournaments !== null) {\n      const currentTournamentData = tournaments.find((tournament) => params.id === tournament.id)\n      setCurrentSinglesTournament(currentTournamentData)\n      setCurrentSinglesTournamentLoaded(true)\n    } else {\n      const currentTournamentData = localStorage.getItem('currentSinglesTournament')\n      setCurrentSinglesTournament(JSON.parse(currentTournamentData))\n      setCurrentSinglesTournamentLoaded(true)\n    }\n  }, [])\n\n  // Parses Key Tournament Info\n  useEffect(() => {\n    \n    if (currentSinglesTournamentLoaded) {\n\n      const parseTournamentInfo = (currentSinglesTournament) => {\n\n        const splitTournamentName = currentSinglesTournament.name.split(\",\")\n        const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n        const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n        if (tournamentName.includes(\"doubles\")) {\n          return\n        } else if (currentSinglesTournament.name.includes(\"WTA\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n        } else if (currentSinglesTournament.name.toLowerCase().includes(\"challenger\")) {\n          console.log(isolatedTournamentName)\n          const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n          console.log(isolatedChallengerTournamentName)\n          setTournamentName(isolatedChallengerTournamentName)\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ATP\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ITF\")) {\n          const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n          setTournamentName(isolatedITFTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n        } else {\n          setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n          setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n        }\n      }\n      parseTournamentInfo(currentSinglesTournament)\n      setStartDate(currentSinglesTournament.current_season.start_date.split(\"-\").splice(1).join(\"/\"))\n      setEndDate(currentSinglesTournament.current_season.end_date.split(\"-\").splice(1).join(\"/\"))\n      setTournamentGender(currentSinglesTournament.gender)\n    }\n  }, [currentSinglesTournamentLoaded])\n\n  // Collects Corresponding Doubles Tournament Data\n  useEffect(() => {\n\n    if (tournamentName && tournamentGender) {\n      console.log(tournaments)\n      console.log(tournamentGender)\n      console.log(tournamentName)\n      const currentDoublesTournamentData = tournaments.find((tournament) => ((tournament.type === \"doubles\") && (tournament.gender === tournamentGender) && (tournament.parent_id === currentSinglesTournament.parent_id)))\n      console.log(currentDoublesTournamentData)\n      setCurrentDoublesTournament(currentDoublesTournamentData)\n      setCurrentDoublesTournamentLoaded(true)\n    }\n  }, [tournamentName, tournamentGender])\n\n\n  // Collects Tournament Schedule\n  useEffect(() => {\n    if (currentDoublesTournamentLoaded) {\n      \n      console.log(currentDoublesTournament)\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n        console.log(currentSinglesTournament.id)\n        console.log(currentDoublesTournament.id)\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id) || (match.tournament.id === currentDoublesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      }\n\n    }\n  }, [currentDoublesTournamentLoaded])\n\n  // Collect Completed Matches (Results)\n  useEffect(() => {\n\n    if (currentTournamentScheduleLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        const completedDoublesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentDoublesTournament.id)))\n        setCompletedDoublesMatches(completedDoublesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      }\n    }\n  }, [currentTournamentScheduleLoaded])\n  \n  \n  // Collects Live Singles & Doubles Matches\n  useEffect(() => {\n\n    if (currentTournamentCompletedMatchesLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n        const liveDoublesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentDoublesTournament.id)))\n        \n        if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData !== undefined)) {\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData !== undefined) && (liveDoublesMatchesData === undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData) && (liveDoublesMatchesData)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n  \n        if ((liveSinglesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData !== undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      }\n    }\n  }, [currentTournamentCompletedMatchesLoaded])\n\n  // Switch Functions\n\n  const handleSwitch = () => {\n    setCurrentMode(!currentMode)\n  }\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Live Scores\":\n        setView(\"Live Scores\")\n        break;\n      case \"Completed Matches\":\n        setView(\"Completed Matches\")\n        break;\n      case \"Schedule\":\n        setView(\"Schedule\")\n        break;\n    }\n  }\n\n  const handleReturnToCalendar = (e) => {\n    localStorage.removeItem('currentSinglesTournament')\n    history.push('/calendar')\n  }\n  \n  return (\n\n    <>\n      \n      { currentTournamentLiveMatchesLoaded ?\n      \n        <div className=\"tournament-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToCalendar(e)} >\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <div className=\"tournament-card-container\">\n\n            <p className=\"tournament-card-name\">{tournamentName}</p>\n\n            <div className=\"tournament-category-container\">\n\n              <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n\n              <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n          \n            </div>\n\n          </div>\n\n\n\n          <div className=\"discipline-switch-container\">\n\n            <p className=\"discipline-switch-container-copy\">SINGLES</p>\n\n            <Switch onChange={handleSwitch} checked={currentMode ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n            <p className=\"discipline-switch-container-copy\">DOUBLES</p>\n\n          </div>\n\n\n          \n          <div className=\"tournament-views-container\">\n\n            <button className=\"tournament-views-button\" id=\"live-scores-button\" onClick={(e) => handleChangeView(\"Live Scores\")} > Live Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Completed Matches\")}> Completed Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Schedule\")} > Schedule</button>\n          \n          </div>\n\n          <MobileBanner />\n\n          {view === \"Live Scores\" ?\n        \n            <Matches matchesData={currentMode ? liveDoublesMatches : liveSinglesMatches} view={view} />\n\n            :\n        \n            <>\n          \n              {view === \"Completed Matches\" ?\n        \n                <Matches matchesData={currentMode ? completedDoublesMatches : completedSinglesMatches} view={view} />\n              \n                :\n            \n                <>\n              \n                  {currentTournamentSchedule.length === 0 ?\n              \n                    <p className=\"match-container-copy\">Tournament schedule currently unavailable.</p>\n            \n                    :\n\n                    <OrderOfPlay currentTournamentSchedule={currentTournamentSchedule} />\n        \n                  }\n\n                </>\n              \n              }\n        \n            </>\n      \n          }\n\n        </div>\n        \n      :\n        \n        <Loader />\n      \n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["172"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport MatchCard from '../components/MatchCard'\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './MatchDetail.css'\n\nimport {\n  getMatchDetails\n} from \"../utils/matches\"\n\nexport default function MatchDetail(props) {\n  \n  const [matchDetailsLoaded, setMatchDetailsLoaded] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [ matchData, setMatchData ] = useState(null)\n  const [ homeStats, setHomeStats] = useState(null)\n  const [ awayStats, setAwayStats ] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const match = localStorage.getItem('currentMatch')\n    const matchDetails = localStorage.getItem('matchDetails')\n\n    if (matchDetails) {\n      setMatchData(JSON.parse(matchDetails))\n      setHomeStats(JSON.parse(matchDetails).statistics.teams[0])\n      setAwayStats(JSON.parse(matchDetails).statistics.teams[1])\n      setMatchDetailsLoaded(true)\n \n    } else {\n\n      const matchID = JSON.parse(match).sport_event.id\n      console.log(matchID)\n\n      const getMatchStatistics = async (matchID) => {\n        const matchDetails = await getMatchDetails(matchID)\n        console.log(matchDetails)\n        setMatchData(matchDetails)\n        localStorage.setItem('matchDetails', JSON.stringify(matchDetails))\n        if (matchDetails.statistics) {\n          setHomeStats(matchDetails.statistics.teams[0])\n          setAwayStats(matchDetails.statistics.teams[1])\n          console.log(matchDetails.statistics.teams[0])\n          setMatchDetailsLoaded(true)\n        } else {\n          setMatchDetailsLoaded(true)\n        }\n      }\n      getMatchStatistics(matchID)\n\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (matchDetailsLoaded) {\n      setLoaded(true)\n    }\n\n  }, [matchDetailsLoaded])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchData.matchStatus === \"live\") {\n          const getLiveMatchStatistics = async (matchID) => {\n            const matchDetails = await getMatchDetails(matchID)\n            setMatchData(matchDetails)\n          }\n          getLiveMatchStatistics(matchData.sport_event.id)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [loaded])\n\n  const handleReturnToTournament = () => {\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n    const currentPlayer = localStorage.getItem('currentPlayer')\n\n    if (currentTournament) {\n      const tournamentID = JSON.parse(currentTournament).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/tournament/${tournamentID}`)\n    } else if (currentPlayer) {\n      const playerID = JSON.parse(currentPlayer).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/player/${playerID}`)\n    }\n  }\n\n  return (\n\n    <>\n\n      { ((loaded === false) || (matchData === null)) ? \n        \n        <Loader />\n     :\n        \n        <div className=\"match-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToTournament(e)}>\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <MatchCard matchData={matchData} key={matchData.sport_event.id} />\n\n          <MobileBanner />\n\n          <p className=\"match-statistics-title\">MATCH STATISTICS</p>\n\n          <div className=\"match-statistics-container\">\n\n            <div className=\"match-statistic-categories-container\">\n\n              <p className=\"statistic-category\" id=\"placeholder-category\"></p>\n\n              <p className=\"statistic-category\">First Serve Percentage</p>\n\n              <p className=\"statistic-category\">Second Serve Percentage</p>\n\n              <p className=\"statistic-category\">Aces</p>\n\n              <p className=\"statistic-category\">Double Faults</p>\n\n              <p className=\"statistic-category\">First Serve Points Won</p>\n\n              <p className=\"statistic-category\">Second Serve Points Won</p>\n\n              <p className=\"statistic-category\">Receiving Points Won</p>\n\n              <p className=\"statistic-category\">Break Points</p>\n\n              <p className=\"statistic-category total-points\">Total Points Won</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"home\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${homeStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{homeStats.statistics.first_serve_successful}{`/`}{homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults}{` (`}{(homeStats.statistics.first_serve_successful / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_successful}/${homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults} (${(homeStats.statistics.second_serve_successful / (homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.first_serve_points_won}/${homeStats.statistics.first_serve_successful} (${(homeStats.statistics.first_serve_points_won / homeStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_points_won}/${homeStats.statistics.second_serve_successful} (${(homeStats.statistics.second_serve_points_won / homeStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.receiver_points_won}/${(awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful)} (${((homeStats.statistics.receiver_points_won / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.breakpoints_won}/${homeStats.statistics.total_breakpoints} (${(homeStats.statistics.breakpoints_won / homeStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${homeStats.statistics.points_won}`}</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"away\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${awayStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{awayStats.statistics.first_serve_successful}{`/`}{awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults}{` (`}{(awayStats.statistics.first_serve_successful / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_successful}/${awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults} (${(awayStats.statistics.second_serve_successful / (awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.first_serve_points_won}/${awayStats.statistics.first_serve_successful} (${(awayStats.statistics.first_serve_points_won / awayStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_points_won}/${awayStats.statistics.second_serve_successful} (${(awayStats.statistics.second_serve_points_won / awayStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.receiver_points_won}/${(homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful)} (${((awayStats.statistics.receiver_points_won / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.breakpoints_won}/${awayStats.statistics.total_breakpoints} (${(awayStats.statistics.breakpoints_won / awayStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${awayStats.statistics.points_won}`}</p>\n          \n            </div>\n\n          </div>\n      \n        </div>\n      }\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",["173"],"import React from 'react'\n\nimport Header from '../shared/Header'\nimport Sidebar from '../shared/Sidebar'\nimport Footer from '../shared/Footer'\n\nimport './Layout.css'\n\nexport default function Layout (props) {\n\n  return (\n    <div className=\"layout-container\">\n\n      <Header\n      />\n\n      <div className=\"body-container\">\n\n          \n        {/* <Sidebar /> */}\n\n        {props.children}\n\n      </div>\n\n      <Footer />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",["174"],"import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport IconLogo from '../IconLogo'\n\nimport './Header.css'\n\nexport default function Header(props) {\n\n  const [menuVisibility, setMenuVisibility] = useState(false);\n\n  const changeMenuVisibility = (e) => {\n    e.preventDefault();\n    setMenuVisibility(!menuVisibility);\n  };\n\n  return (\n\n    <div className=\"header-container slide-in-top-header\"> \n\n      <div className=\"desktop-nav\">\n\n        <Link to=\"/\" className=\"desktop-logo-container\">\n\n          <IconLogo />\n          \n        </Link>\n\n        <div className=\"desktop-nav-links-container\">\n\n          <Link to=\"/\" className=\"desktop-nav-link\">Home</Link>\n\n          <Link to=\"/calendar\" className=\"desktop-nav-link\">Calendar</Link>\n\n          <Link to=\"/rankings\" className=\"desktop-nav-link\">Rankings</Link>\n\n          <p className=\"desktop-nav-link\">About</p>\n\n          <a className=\"desktop-nav-link\" target=\"_blank\" href=\"https://www.gameset.blog\">Blog</a>\n        </div>\n\n      </div>\n\n      <div className=\"mobile-nav\">\n\n        {menuVisibility ?\n        \n        <i className=\"fas fa-times mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n          \n        :\n\n        <i className=\"fas fa-bars mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n      \n        }\n\n        <div className=\"mobile-logo-container\">\n\n          <IconLogo style={{\n            zIndex: \"5\",\n            textAlign: \"center\",\n            verticalAlign: \"center\",\n            \n        }} />\n\n        </div>\n\n          \n        <div className=\"mobile-header-placeholder\"></div>\n        \n\n      </div>\n\n      <div id=\"mobile-menu\" className={menuVisibility ? \"mobile-menu-visible\" : \"mobile-menu-hidden\"}>\n      \n        <p className=\"mobile-nav-link\">About</p>\n        <p className=\"mobile-nav-link\">Blog</p>\n\n      </div>\n      \n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["175"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n    \n    const parseTournamentInfo = (tournament) => {\n\n      const splitTournamentName = currentTournament.name.split(\",\")\n      const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n      const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n      if (tournamentName.includes(\"doubles\")) {\n        return\n      } else if (tournament.name.includes(\"WTA\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (tournament.name.toLowerCase().includes(\"challenger\")) {\n        const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n        setTournamentName(isolatedChallengerTournamentName)\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ATP\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ITF\")) {\n        const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n        setTournamentName(isolatedITFTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n    parseTournamentInfo(currentTournament)\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n\n        {startDate === \"\" ?\n          <div className=\"tournament-date\"></div>\n        : \n          <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        }\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["176","177","178"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport \"./MatchCard.css\";\n\nimport {\n  getMatch,\n} from '../utils/matches'\n\nexport default function MatchCard(props) {\n  const { matchData, key } = props;\n  const history = useHistory();\n\n  console.log(matchData)\n\n  const [currentMatchData, setCurrentMatchData] = useState(matchData)\n\n  const [match, setMatch] = useState(null)\n\n  const [matchInfo, setMatchInfo] = useState({\n\n    tournamentEvent: matchData.sport_event.tournament.gender,\n    tournamentDiscipline: matchData.sport_event.sport_event_type,\n    tournamentRound: matchData.sport_event.tournament_round.name,\n\n    matchFormat: matchData.sport_event_conditions.match_mode,\n    matchCourt: matchData.sport_event_conditions.venue.name,\n    matchStatus: matchData.sport_event_status.status,\n\n    homeCompetitorID: matchData.sport_event.competitors[0].id,\n    homeCompetitor: matchData.sport_event.competitors[0].name,\n\n    awayCompetitorID: matchData.sport_event.competitors[1].id,\n    awayCompetitor: matchData.sport_event.competitors[1].name\n\n  })\n\n  const [scoreInfo, setScoreInfo] = useState({\n\n    setOneScoreHome: \"\",\n    setOneScoreAway: \"\",\n    setTwoScoreHome: \"\",\n    setTwoScoreAway: \"\",\n    setThreeScoreHome: \"\",\n    setThreeScoreAway: \"\",\n    setFourScoreHome: \"\",\n    setFourScoreAway: \"\",\n    setFiveScoreHome: \"\",\n    setFiveScoreAway: \"\",\n    serviceScoreHome: \"\",\n    serviceScoreAway: \"\",\n    server: \"\"\n\n  })\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n\n  useEffect(() => {\n    setCurrentMatchData(matchData)\n  }, [matchData])\n\n  useEffect(() => {\n    \n    if (match === null || (currentMatchData.sport_event.id !== match.sport_event.id)) {\n      console.log('setMatchData')\n      setMatch(matchData)\n    }\n    \n  }, [matchData, currentMatchData])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchInfo.matchStatus.toLowerCase() === \"live\") {\n\n        const currentMatchID = matchData.sport_event.id\n\n        console.log('live data')\n        console.log(matchData)\n        const fetchMatch = async (matchID) => {\n          const data = await getMatch(matchID)\n          console.log(\"interval for fetchMatch within MatchCard\")\n          setMatch(data)\n        }\n        fetchMatch(currentMatchID)\n      } else {\n        clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [match, scoreInfo])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const parseTournamentRound = (tournamentRound) => {\n        switch (tournamentRound) {\n          case \"round_of_128\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 128\"\n            }));\n            break;\n          case \"round_of_64\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 64\"\n            }));\n            break;\n          case \"round_of_32\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 32\"\n            }));\n            break;\n          case \"round_of_16\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 16\"\n            }));\n            break;\n          case \"round_of_8\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"quarterfinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"round_of_4\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"semifinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"round_of_2\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          case \"final\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentRound(\n        match.sport_event.tournament_round.name\n      );\n\n      const parseTournamentDiscipline = (tournamentType) => {\n        switch (tournamentType) {\n          case \"singles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"SINGLES\"\n            }));\n            break;\n          case \"doubles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"DOUBLES\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentDiscipline(\n        match.sport_event.sport_event_type\n      );\n\n      const parseTournamentGender = (tournamentGender) => {\n        switch (tournamentGender) {\n          case \"men\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MEN'S\"\n            }));\n            break;\n          case \"women\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"WOMEN'S\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentGender(\n        match.sport_event.tournament.gender\n      );\n\n      const parseMatchStatus = (props) => {\n        switch (props) {\n          case \"not_started\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Not Started\"\n            }));\n            break;\n          case \"match_about_to_start\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Match To Start\"\n            }));\n            break;\n          case \"live\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Live\"\n            }));\n            break;\n          case \"closed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"ended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"interrupted\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Interrupted\"\n            }));\n            break;\n          case \"suspended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Suspended\"\n            }));\n            break;\n          case \"cancelled\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Cancelled\"\n            }));\n            break;\n          case \"delayed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Delayed\"\n            }));\n            break;\n          case \"abandoned\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Abandoned\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n\n      parseMatchStatus(\n        matchData.sport_event_status.status\n      );\n\n      const parseMatchCompetitors = (match) => {\n        setMatchInfo(prevState => ({\n          ...prevState,\n          homeCompetitorID: match.competitors[0].id\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          homeCompetitor: match.competitors[0].name\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          awayCompetitorID: match.competitors[1].id\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          awayCompetitor: match.competitors[1].name\n        }));\n      }\n\n      parseMatchCompetitors(matchData.sport_event)\n\n    }\n  }, [match])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const handleHomeScore = () => {\n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.home_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: \"AD\"\n            }))\n\n          } else {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: match.sport_event_status.game_state.home_score\n            }))\n\n          }\n\n\n        }\n      }\n\n      const handleAwayScore = () => {\n        \n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.away_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: \"AD\"\n            }))\n\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: match.sport_event_status.game_state.away_score\n            }))\n          }\n        }\n      }\n\n      const generateSets = (formatValue) => {\n        \n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\" || matchInfo.matchStatus.toLowerCase() === \"complete\") && match.sport_event_status.period_scores !== undefined) {\n\n          const sets = [\"setOneScore\", \"setTwoScore\", \"setThreeScore\", \"setFourScore\", \"setFiveScore\"]\n\n          for (let i = 0; i < formatValue; i++) {\n\n            if (match.sport_event_status.period_scores[i] !== undefined) {\n          \n              let homeScore = sets[i] + \"Home\"\n              let awayScore = sets[i] + \"Away\"\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                [homeScore]: match.sport_event_status.period_scores[i].home_score,\n                [awayScore]: match.sport_event_status.period_scores[i].away_score\n              }))\n            }\n          }\n        }\n      }\n\n      const handleServer = () => {\n        if (matchInfo.matchStatus.toLowerCase() === \"live\") {\n          if (match.sport_event_status.game_state.serving) {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: match.sport_event_status.game_state.serving\n            }))\n          }\n        } else if (matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"complete\") {\n          if (match.sport_event_status.winner_id) {\n            if (match.sport_event_status.winner_id === matchInfo.homeCompetitorID) {\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"homeWinner\"\n              }))\n            } else {\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"awayWinner\"\n              }))\n            }\n          }\n        }\n      }\n        \n      handleHomeScore()\n      handleAwayScore()\n      handleServer()\n\n      if (matchInfo.matchFormat === \"bo3\") {\n\n        let formatValue = 3\n\n        generateSets(formatValue, match)\n\n      } else if (matchInfo.matchFormat === \"bo5\") {\n\n        let formatValue = 5\n\n        generateSets(formatValue, match)\n\n      }\n\n    }\n  }, [match, matchInfo])\n\n  const handleMatch = (matchInfo, scoreInfo, matchID) => {\n    localStorage.setItem(\"currentMatch\", JSON.stringify(match))\n    history.push(`/match/${matchID}`);\n  };\n\n  const generateCompetitor = (index, type) => {\n    if (matchData.sport_event.sport_event_type === \"doubles\") {\n\n      const competitor = matchData.sport_event.competitors[index]\n\n      const doublesTeamInfo = {\n        partnerA: {\n          name: competitor.players[0].name.split(',')[0],\n          countryCode: competitor.players[0].country_code\n        },\n        partnerB: {\n          name: competitor.players[1].name.split(',')[0],\n          countryCode: competitor.players[1].country_code\n        },\n        seed: competitor.seed\n      }\n\n      const partnerAAlpha2Country = getCountryISO2(doublesTeamInfo.partnerA.countryCode)\n      const partnerBAlpha2Country = getCountryISO2(doublesTeamInfo.partnerB.countryCode)\n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={partnerAAlpha2Country}\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n              aria-label=\"United States\"\n            />\n            \n            <p className=\"player-country-seperator\">/</p>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={partnerBAlpha2Country}\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n              aria-label=\"United States\"\n            />\n\n          <p className=\"competitor-name\">{doublesTeamInfo.partnerA.name}{'/'}{doublesTeamInfo.partnerB.name}{' '}{(competitor.seed !== null || competitor.seed !== undefined) ? doublesTeamInfo.seed : ''}</p>\n\n        </div>\n\n      )\n\n    } else {\n\n      const competitor = matchData.sport_event.competitors[index]\n      const competitorName = competitor.name\n      const competitorSeed = '[' + competitor.seed + ']'\n      const competitorCountryCode = competitor.country_code\n      const alpha2Country = getCountryISO2(competitorCountryCode)\n\n      console.log(competitor.seed)\n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={alpha2Country}\n              aria-label=\"United States\"\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n            />\n\n          <p className=\"competitor-name\">{competitorName}{' '}{(competitor.seed !== null && competitor.seed !== undefined) ? competitorSeed : ''}</p>\n\n        </div>\n\n      )\n    }\n  }\n  \n  const homePlayer = generateCompetitor(0, \"home\")\n\n  const awayPlayer = generateCompetitor(1, \"away\")\n\n  return (\n    <div\n      className=\"match-card-container\"\n      id={key}\n      key={key}\n      onClick={(e) => handleMatch(matchInfo, scoreInfo, matchData.sport_event.id)}\n    >\n      <div className=\"match-card-header-container\">\n\n        <p className=\"match-card-title\">{`${matchInfo.tournamentEvent} ${matchInfo.tournamentDiscipline}`}</p>\n\n        <p className=\"match-court\">{`${matchInfo.matchCourt}`}</p>\n\n      </div>\n\n      <div className=\"match-container\">\n\n        <div className=\"match-info-container\">\n\n          <p className=\"match-round\">{`${matchInfo.tournamentRound}`}</p>\n\n          <p className=\"match-status\">{`${matchInfo.matchStatus}`}</p>\n\n        </div>\n\n        <div className=\"competitor-container\" id=\"home\">\n\n          {homePlayer}\n\n          {scoreInfo.server === \"home\" ? \n          \n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server home\"></i>\n            \n          :\n            \n          <>\n            \n          {\n            scoreInfo.server === \"homeWinner\" ?\n            \n            <i className=\"fas fa-check service-icon\"></i>\n              \n          :\n          \n            <div className=\"service-icon\" id=\"receiver home\" />\n\n          }\n          </>\n          \n          }\n\n          <p className=\"service-score home\">{scoreInfo.serviceScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-one\">{scoreInfo.setOneScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-two\">{scoreInfo.setTwoScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-three\">{scoreInfo.setThreeScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-four\">{scoreInfo.setFourScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-five\">{scoreInfo.setFiveScoreHome}</p>\n\n        </div>\n\n        <div className=\"set-labels-container\">\n\n        <p className=\"set-label\" id=\"service-score\">SERVICE</p>\n\n          <p className=\"set-label\" id=\"set-one\">1</p>\n\n          <p className=\"set-label\" id=\"set-two\">2</p>\n\n          <p className=\"set-label\" id=\"set-three\">3</p>\n\n          <p className=\"set-label\" id=\"set-four\">4</p>\n\n          <p className=\"set-label\" id=\"set-five\">5</p>\n\n        </div>\n        \n\n        <div className=\"competitor-container\" id=\"away\">\n\n          {awayPlayer}\n\n          {scoreInfo.server === \"away\" ?\n\n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server away\"></i>\n            \n            :\n          \n            <>\n            \n            {\n              scoreInfo.server === \"awayWinner\" ?\n              \n              <i className=\"fas fa-check service-icon\"></i>\n                \n            :\n            \n              <div className=\"service-icon\" id=\"receiver away\" />\n\n            }\n            </>\n\n          }\n\n          <p className=\"service-score away\">{scoreInfo.serviceScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-one\">{scoreInfo.setOneScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-two\">{scoreInfo.setTwoScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-three\">{scoreInfo.setThreeScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-four\">{scoreInfo.setFourScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-five\">{scoreInfo.setFiveScoreAway}</p>\n\n        </div>\n\n      </div>\n\n      <div className=\"match-stats-container\">\n        VIEW MATCH STATS\n      </div>\n      \n    </div>\n  );\n}\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",["179"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",["180"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './PlayerCard.css'\n\nexport default function PlayerCard(props) {\n\n  const [loaded, setLoaded] =  useState(false)\n  const [detailLevel, setDetailLevel] = useState(\"none\")\n  const [playerRankings, setPlayerRankings] = useState({\n    playerSinglesRanking: \"--\",\n    playerSinglesRankingPoints: \"--\",\n    playerSinglesRaceRanking: \"--\",\n    playerSinglesRaceRankingPoints: \"--\",\n    playerDoublesRanking: \"--\",\n    playerDoublesRankingPoints: \"--\",\n    playerDoublesRaceRanking: \"--\",\n    playerDoublesRaceRankingPoints: \"--\"\n  })\n\n  const { playerData, playerCountry, discipline, viewRace } = props\n\n  const history = useHistory()\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n  const alpha2Country = getCountryISO2(playerCountry)\n\n  useEffect(() => {\n    const gatherPlayerRankings = (playerData) => {\n\n      if (playerData.rank) {\n\n        setDetailLevel(\"medium\")\n\n      } else if (playerData.rankings) {\n\n        const setPlayerRankingsData = (playerData) => {\n          for (let i = 0; i < playerData.rankings.length; i++) {\n            console.log(\"inside player card loop\")\n            if (playerData.rankings[i].type === \"singles\" && playerData.rankings[i].race_ranking === false) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerSinglesRanking: playerData.rankings[i].rank,\n                playerSinglesRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"singles\" && playerData.rankings[i].race_ranking === true) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerSinglesRaceRanking: playerData.rankings[i].rank,\n                playerSinglesRaceRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"doubles\" && playerData.rankings[i].race_ranking === false) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerDoublesRanking: playerData.rankings[i].rank,\n                playerDoublesRankingPoints: playerData.rankings[i].points\n              }));\n            } else if (playerData.rankings[i].type === \"doubles\" && playerData.rankings[i].race_ranking === true) {\n              setPlayerRankings(prevState => ({\n                ...prevState,\n                playerDoublesRaceRanking: playerData.rankings[i].rank,\n                playerDoublesRaceRankingPoints: playerData.rankings[i].points\n              }));\n            }\n          }\n        }\n\n        setPlayerRankingsData(playerData)\n        setDetailLevel(\"high\")\n      }\n    }\n    gatherPlayerRankings(playerData)\n  }, [])\n\n  useEffect(() => {\n    if (detailLevel !== \"none\") {\n      setLoaded(true)\n    }\n  }, [detailLevel])\n\n  const handlePlayerDetails = (id) => {\n\n    if (playerData.player) {\n\n      localStorage.setItem('currentPlayer', JSON.stringify(playerData))\n      history.push(`/player/${playerData.player.id}`)\n\n    }\n  }\n\n  console.log(playerData)\n  \n  return (\n\n    <>\n      \n      { !loaded ?\n        \n        <>\n        </>\n        \n      :\n\n            <>\n        \n            { (detailLevel === \"medium\") ?\n          \n              <div className=\"player-container\" key={playerData.player ? playerData.player.id : playerData.double_team.id} onClick={(e) => handlePlayerDetails(e)}>\n\n                <p className=\"player-ranking\">{playerData.rank}</p>\n                <p className=\"player-name\">{playerData.player ? playerData.player.name : playerData.double_team.name}</p>\n              \n                {discipline === \"Doubles\" && viewRace ?\n                \n                  <>\n                  </>\n                \n                :\n\n                  <div className=\"player-nationality-container\">\n\n                    <ReactCountryFlag\n                      className=\"emojiFlag\"\n                      countryCode={alpha2Country}\n                      aria-label=\"United States\"\n                      style={{\n                        fontSize: '200%',\n                        lineHeight: '200%',\n                      }}\n                    />\n                    <p className=\"player-country\">{playerData.player.country_code}</p>\n\n                  </div>\n                  \n                }\n\n                <p className=\"player-ranking-points\">{playerData.points}</p>\n\n              </div>\n            \n            :\n\n              <>\n              \n              <div className=\"player-container\" id=\"high-detail\" key={playerData.player.id} onClick={(e) => handlePlayerDetails(e)}>\n                \n                {discipline === \"Doubles\" && viewRace ?\n                  \n                  <>\n                  </>\n                \n                :\n                \n                  <div className=\"player-nationality-container\">\n                    <ReactCountryFlag\n                      className=\"emojiFlag\"\n                      countryCode={alpha2Country}\n                      aria-label=\"United States\"\n                      style={{\n                        fontSize: '200%',\n                        lineHeight: '200%',\n                      }}\n                    />\n                    <p className=\"player-country\">{playerData.player.country_code}</p>\n                  </div>\n\n                }\n                  \n                  <p className=\"player-name\">{playerData.player.name}</p>\n                \n               </div>\n              \n                <MobileBanner />\n      \n                <div className=\"playerDetail-rankings-container\">\n\n                  <p className=\"playerDetail-rankings-container-title\">Ranking Details</p>\n\n                  <div className=\"detailed-player-rankings-container\">\n\n                    <div className=\"player-rankings-container\" id=\"singles\">\n\n                      <p className=\"player-rankings-container-subtitle\">Singles</p>\n\n                      <div className=\"ranking-category-container\">\n\n                        <div className=\"ranking-discipline-container\" id=\"singles\">\n\n                          <p className=\"player-rankings-container-header\">Current</p>\n\n                          <p className=\"player-ranking-detail\">{playerRankings.playerSinglesRanking}</p>\n\n                          <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerSinglesRankingPoints} points{`)`}</p>\n\n                        </div>\n\n                        <div className=\"ranking-discipline-container\" id=\"singles-race\">\n\n                          <p className=\"player-rankings-container-header\">Race</p>\n\n                          <p className=\"player-ranking-detail\">{playerRankings.playerSinglesRaceRanking}</p>\n\n                          <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerSinglesRaceRankingPoints} points{`)`}</p>\n\n                          </div>\n                        \n                      </div>\n\n                    </div>\n\n                    <div className=\"player-rankings-container\" id=\"doubles\">\n\n                      <p className=\"player-rankings-container-subtitle\">Doubles</p>\n\n                      <div className=\"ranking-category-container\">\n\n                        <div className=\"ranking-discipline-container\" id=\"doubles\">\n\n                          <p className=\"player-rankings-container-header\">Current</p>\n\n                          <p className=\"player-ranking-detail\">{playerRankings.playerDoublesRanking}</p>\n                          \n                          <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerDoublesRankingPoints} points{`)`}</p>\n\n                        </div>\n\n                        <div className=\"ranking-discipline-container\" id=\"doubles\">\n\n                          <p className=\"player-rankings-container-header\">Race</p>\n\n                          <p className=\"player-ranking-detail\">{playerRankings.playerDoublesRanking}</p>\n\n                          <p className=\"player-ranking-points-detail\">{`(`}{playerRankings.playerDoublesRankingPoints} points{`)`}</p>\n\n                        </div>\n                        \n                      </div>\n\n                    </div>\n\n                  </div>\n\n                </div>\n                \n              </>\n          \n            }\n\n          </>\n          \n          }\n\n        </>\n      \n  )\n\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx",["181","182"],"import React, { useState, useEffect } from 'react'\n\nimport Loader from './Loader'\nimport Results from './Results'\n\n\nexport default function ResultsContainer (props) {\n\n  const { playerResults } = props\n\n  const [uniqueTournaments, setUniqueTournaments] = useState(null)\n\n  const currentYear = new Date().getFullYear()\n  \n  console.log(currentYear)\n  console.log(playerResults)\n  console.log(uniqueTournaments)\n\n  useEffect(() => {\n\n    if (playerResults) {\n\n      console.log(\"generating unique tournaments\")\n\n      const generateUniqueTournaments = () => {\n\n        console.log('ahead of the loop')\n\n        let tournaments = []\n        let tournamentsData = []\n\n        for (let i = 0; i < playerResults.results.length; i++) {\n\n          console.log(`in the loop ${i} time`)\n\n          if (!tournaments.includes(playerResults.results[i].sport_event.tournament.id) && (playerResults.results[i].sport_event.season.year === currentYear.toString())) {\n            console.log('pushing into array')\n            tournaments.push(playerResults.results[i].sport_event.tournament.id)\n            tournamentsData.push(playerResults.results[i])\n          }\n        }\n        return tournamentsData\n      }\n\n\n      const uniqueTournamentsArray = generateUniqueTournaments()\n\n      setUniqueTournaments(uniqueTournamentsArray)\n    }\n\n  }, [])\n  \n    return (\n     \n      <>\n        \n        {uniqueTournaments === null ?\n\n          <>\n          </>\n          \n        :\n        \n          <>\n      \n            <Results uniqueTournaments={uniqueTournaments} playerResults={playerResults} />\n            \n          </>\n          \n        }\n\n    </>\n  )\n\n}\n\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":69,"column":6,"nodeType":"189","endLine":69,"endColumn":8,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":94,"column":6,"nodeType":"189","endLine":94,"endColumn":38,"suggestions":"192"},{"ruleId":"187","severity":1,"message":"191","line":115,"column":6,"nodeType":"189","endLine":115,"endColumn":21,"suggestions":"193"},{"ruleId":"187","severity":1,"message":"194","line":64,"column":6,"nodeType":"189","endLine":64,"endColumn":15,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":68,"column":16,"nodeType":"198","messageId":"199","endLine":68,"endColumn":18},{"ruleId":"187","severity":1,"message":"200","line":97,"column":6,"nodeType":"189","endLine":97,"endColumn":14,"suggestions":"201"},{"ruleId":"187","severity":1,"message":"202","line":54,"column":6,"nodeType":"189","endLine":54,"endColumn":43,"suggestions":"203"},{"ruleId":"187","severity":1,"message":"204","line":114,"column":6,"nodeType":"189","endLine":114,"endColumn":18,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":133,"column":5,"nodeType":"208","messageId":"209","endLine":140,"endColumn":6},{"ruleId":"187","severity":1,"message":"210","line":64,"column":6,"nodeType":"189","endLine":64,"endColumn":8,"suggestions":"211"},{"ruleId":"187","severity":1,"message":"212","line":105,"column":6,"nodeType":"189","endLine":105,"endColumn":38,"suggestions":"213"},{"ruleId":"187","severity":1,"message":"214","line":119,"column":6,"nodeType":"189","endLine":119,"endColumn":40,"suggestions":"215"},{"ruleId":"187","severity":1,"message":"216","line":153,"column":6,"nodeType":"189","endLine":153,"endColumn":38,"suggestions":"217"},{"ruleId":"187","severity":1,"message":"218","line":182,"column":6,"nodeType":"189","endLine":182,"endColumn":39,"suggestions":"219"},{"ruleId":"187","severity":1,"message":"220","line":232,"column":6,"nodeType":"189","endLine":232,"endColumn":47,"suggestions":"221"},{"ruleId":"206","severity":1,"message":"207","line":241,"column":5,"nodeType":"208","messageId":"209","endLine":251,"endColumn":6},{"ruleId":"187","severity":1,"message":"222","line":84,"column":6,"nodeType":"189","endLine":84,"endColumn":14,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":15},{"ruleId":"228","severity":1,"message":"229","line":39,"column":11,"nodeType":"230","endLine":39,"endColumn":91},{"ruleId":"187","severity":1,"message":"231","line":46,"column":6,"nodeType":"189","endLine":46,"endColumn":8,"suggestions":"232"},{"ruleId":"187","severity":1,"message":"233","line":70,"column":6,"nodeType":"189","endLine":70,"endColumn":35,"suggestions":"234"},{"ruleId":"187","severity":1,"message":"235","line":95,"column":6,"nodeType":"189","endLine":95,"endColumn":24,"suggestions":"236"},{"ruleId":"187","severity":1,"message":"237","line":326,"column":6,"nodeType":"189","endLine":326,"endColumn":13,"suggestions":"238"},{"ruleId":"224","severity":1,"message":"239","line":26,"column":7,"nodeType":"226","messageId":"227","endLine":26,"endColumn":13},{"ruleId":"187","severity":1,"message":"204","line":76,"column":6,"nodeType":"189","endLine":76,"endColumn":8,"suggestions":"240"},{"ruleId":"224","severity":1,"message":"241","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"242","line":51,"column":6,"nodeType":"189","endLine":51,"endColumn":8,"suggestions":"243"},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'today' and 'tournaments.length'. Either include them or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["247"],["248"],"React Hook useEffect has missing dependencies: 'calendarTournamentData', 'calendarTournaments', 'calendarTournamentsITF', and 'viewCalendar'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCalendarTournamentData' needs the current value of 'calendarTournamentsITF'.",["249"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'calendarTournaments', 'calendarTournamentsITF', 'viewCalendar', and 'viewITF'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["251"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["252"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'params.id' and 'tournaments'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament' and 'tournamentName'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.parent_id' and 'tournaments'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', and 'dailySchedule'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailyResults', and 'dailySchedule.length'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailySchedule.length', and 'liveMatches'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has missing dependencies: 'matchData.matchStatus' and 'matchData.sport_event.id'. Either include them or remove the dependency array.",["259"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has missing dependencies: 'tournament' and 'tournamentName'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has missing dependencies: 'matchData.sport_event' and 'matchData.sport_event_status.status'. Either include them or remove the dependency array.",["263"],"'config' is assigned a value but never used.",["264"],"'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [today, tournaments.length]",{"range":"306","text":"307"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"308","text":"309"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, dailySchedule]",{"range":"310","text":"311"},"Update the dependencies array to be: [calendarTournamentData, calendarTournaments, calendarTournamentsITF, viewCalendar, viewITF]",{"range":"312","text":"313"},"Update the dependencies array to be: [calendarTournaments, calendarTournamentsITF, filter, viewCalendar, viewITF]",{"range":"314","text":"315"},"Update the dependencies array to be: [loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"316","text":"317"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"318","text":"319"},"Update the dependencies array to be: [params.id, tournaments]",{"range":"320","text":"321"},"Update the dependencies array to be: [currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",{"range":"322","text":"323"},"Update the dependencies array to be: [tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",{"range":"324","text":"325"},"Update the dependencies array to be: [currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",{"range":"326","text":"327"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",{"range":"328","text":"329"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",{"range":"330","text":"331"},"Update the dependencies array to be: [loaded, matchData.matchStatus, matchData.sport_event.id]",{"range":"332","text":"333"},"Update the dependencies array to be: [tournament, tournamentName]",{"range":"334","text":"335"},"Update the dependencies array to be: [matchData, currentMatchData, match]",{"range":"336","text":"337"},"Update the dependencies array to be: [match, matchData, matchInfo.matchStatus, scoreInfo]",{"range":"338","text":"339"},"Update the dependencies array to be: [match, matchData.sport_event, matchData.sport_event_status.status]",{"range":"340","text":"341"},"Update the dependencies array to be: [playerData]",{"range":"342","text":"343"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"344","text":"345"},[2105,2107],"[today, tournaments.length]",[2874,2906],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[3564,3579],"[currentDay, currentMonth, currentYear, dailySchedule]",[2194,2203],"[calendarTournamentData, calendarTournaments, calendarTournamentsITF, viewCalendar, viewITF]",[2903,2911],"[calendarTournaments, calendarTournamentsITF, filter, viewCalendar, viewITF]",[2460,2497],"[loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[3623,3635],"[dataLoaded, playerData]",[2745,2747],"[params.id, tournaments]",[5100,5132],"[currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",[5744,5778],"[tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",[7207,7239],"[currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",[8661,8694],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",[10903,10944],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",[2365,2373],"[loaded, matchData.matchStatus, matchData.sport_event.id]",[2213,2215],"[tournament, tournamentName]",[1858,1887],"[matchData, currentMatchData, match]",[2488,2506],"[match, matchData, matchInfo.matchStatus, scoreInfo]",[8671,8678],"[match, matchData.sport_event, matchData.sport_event_status.status]",[2899,2901],"[playerData]",[1328,1330],"[currentYear, playerResults]"]