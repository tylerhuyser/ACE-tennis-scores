[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx":"31","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx":"32","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx":"33","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx":"34","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx":"35"},{"size":589,"mtime":1610168112225,"results":"36","hashOfConfig":"37"},{"size":4533,"mtime":1616217051753,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1610088373592,"results":"39","hashOfConfig":"37"},{"size":1048,"mtime":1614831778053,"results":"40","hashOfConfig":"37"},{"size":2042,"mtime":1616262640591,"results":"41","hashOfConfig":"37"},{"size":6596,"mtime":1616262761891,"results":"42","hashOfConfig":"37"},{"size":1726,"mtime":1616260151754,"results":"43","hashOfConfig":"37"},{"size":6401,"mtime":1616262845061,"results":"44","hashOfConfig":"37"},{"size":14218,"mtime":1616263195230,"results":"45","hashOfConfig":"37"},{"size":9879,"mtime":1616263090473,"results":"46","hashOfConfig":"37"},{"size":357,"mtime":1614720059631,"results":"47","hashOfConfig":"37"},{"size":1380,"mtime":1612321384908,"results":"48","hashOfConfig":"37"},{"size":430,"mtime":1610266940796,"results":"49","hashOfConfig":"37"},{"size":1711,"mtime":1610402758870,"results":"50","hashOfConfig":"37"},{"size":511,"mtime":1610402681806,"results":"51","hashOfConfig":"37"},{"size":549,"mtime":1610387506009,"results":"52","hashOfConfig":"37"},{"size":782,"mtime":1610390275911,"results":"53","hashOfConfig":"37"},{"size":2868,"mtime":1614116156970,"results":"54","hashOfConfig":"37"},{"size":18770,"mtime":1616298076617,"results":"55","hashOfConfig":"37"},{"size":767,"mtime":1615137524649,"results":"56","hashOfConfig":"37"},{"size":200,"mtime":1610517578412,"results":"57","hashOfConfig":"37"},{"size":669,"mtime":1610602823119,"results":"58","hashOfConfig":"37"},{"size":271,"mtime":1610687892583,"results":"59","hashOfConfig":"37"},{"size":5829,"mtime":1616298241328,"results":"60","hashOfConfig":"37"},{"size":612,"mtime":1615519735736,"results":"61","hashOfConfig":"37"},{"size":8559,"mtime":1616298256939,"results":"62","hashOfConfig":"37"},{"size":1321,"mtime":1610517594598,"results":"63","hashOfConfig":"37"},{"size":1657,"mtime":1616214309776,"results":"64","hashOfConfig":"37"},{"size":901,"mtime":1613766193544,"results":"65","hashOfConfig":"37"},{"size":1003,"mtime":1613629547033,"results":"66","hashOfConfig":"37"},{"size":1645,"mtime":1613465539505,"results":"67","hashOfConfig":"37"},{"size":4768,"mtime":1616021734575,"results":"68","hashOfConfig":"37"},{"size":975,"mtime":1616209407995,"results":"69","hashOfConfig":"37"},{"size":174,"mtime":1616260120177,"results":"70","hashOfConfig":"37"},{"size":174,"mtime":1616260120177,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ks3lcs",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["150","151"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["152","153","154"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getCurrentTournaments\n} from './utils/tournaments'\n\nimport {\n  getLiveMatches\n} from './utils/live'\n\nimport {\n  getDailySchedule,\n  getDailyResults\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [ tournaments, setTournaments ] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n    const oneDay = 60 * 60 * 24 * 1000\n\n    const tournamentData = localStorage.getItem('tournaments')\n    const createdAt = localStorage.getItem('createdAt')\n\n    if (totalTournaments === 0 || tournamentData === undefined || tournamentData === null || createdAt === undefined || ((today - createdAt) > (oneDay))) {\n\n      const gatherActiveTournaments = async () => {\n        console.log('apirequest 1')\n        const tournamentData = await getCurrentTournaments()\n        console.log(tournamentData)\n        setTournaments(tournamentData.tournaments)\n        console.log(tournamentData.tournaments)\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData.tournaments))\n        localStorage.setItem('createdAt', today)\n        setTournamentsLoaded(true)\n      }\n      gatherActiveTournaments()\n\n    } else {\n\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    console.log(tournamentsLoaded)\n\n    if (tournamentsLoaded) {\n      console.log('apirequest 2')\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n        const dailyScheduleData = await getDailySchedule(currentYear, currentMonth, currentDay)\n        console.log(dailyScheduleData.sport_events)\n        if (dailyScheduleData.length === 0) {\n          setDailySchedule(dailyScheduleData)\n        } else {\n          setDailySchedule(dailyScheduleData.sport_events)\n        }\n      }\n      const timeOut = setTimeout(() => gatherDailySchedule(year, month, day), 1001)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [tournaments, tournamentsLoaded])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 3')\n      const gatherDailyResults = async (currentYear, currentMonth, currentDay) => {\n        const dailyResultsData = await getDailyResults(currentYear, currentMonth, currentDay)\n        console.log(dailyResultsData)\n        console.log(dailyResultsData.results)\n        setDailyResults(dailyResultsData.results)\n      }\n\n      const timeOut = setTimeout(() => gatherDailyResults(year, month, day), 1001)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 4')\n      const gatherLiveMatches = async () => {\n        const liveMatchesData = await getLiveMatches()\n        console.log(liveMatchesData.summaries)\n        if (liveMatchesData.summaries.length === 0) {\n          setLoaded(true)\n        } else {\n          setLiveMatches(liveMatchesData.summaries)\n          setLoaded(true)\n        }\n      }\n      const timeOut = setTimeout(() => gatherLiveMatches(), 2002)\n      return () => clearTimeout(timeOut)\n    }\n    \n  }, [dailySchedule])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["155"],"import React, { useState, useEffect } from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Loader from '../components/Loader'\nimport Players from '../components/Players'\n\nimport './Rankings.css'\n\nimport {\n  playerRankings,\n  playerRaceRankings,\n  doublesTeamRankings,\n  doublesTeamRaceRankings\n} from '../utils/rankings'\n\nexport default function Rankings(props) {\n\n  const [loaded, setLoaded] = useState(false)\n\n  const [event, setEvent] = useState('ATP')\n  const [discipline, setDiscipline] = useState('Singles')\n  const [viewRace, setViewRace] = useState(false)\n\n  const [maleSinglesRankings, setMaleSinglesRankings] = useState(null)\n  const [femaleSinglesRankings, setFemaleSinglesRankings] = useState(null)\n  const [maleDoublesRankings, setMaleDoublesRankings] = useState(null)\n  const [femaleDoublesRankings, setFemaleDoublesRankings] = useState(null)\n\n  const [maleSinglesRaceRankings, setMaleSinglesRaceRankings] = useState(null)\n  const [femaleSinglesRaceRankings, setFemaleSinglesRaceRankings] = useState(null)\n  const [maleDoublesRaceRankings, setMaleDoublesRaceRankings] = useState(null)\n  const [femaleDoublesRaceRankings, setFemaleDoublesRaceRankings] = useState(null)\n\n  const [ rankingCategory, setRankingCategory ] = useState(false)\n\n  const [playerCount, setPlayerCount] = useState(0)\n\n  useEffect(() => {\n    if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(femaleSinglesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(femaleSinglesRaceRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(femaleDoublesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(femaleDoublesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(maleSinglesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(maleSinglesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(maleDoublesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(maleDoublesRaceRankings)\n    }\n  }, [loaded, event, discipline, viewRace])\n\n  \n  useEffect(() => {\n    const gatherSinglesRankings = async () => {\n      const combinedSinglesRankings = await playerRankings()\n      console.log(combinedSinglesRankings)\n      setMaleSinglesRankings(combinedSinglesRankings.rankings[1])\n      setFemaleSinglesRankings(combinedSinglesRankings.rankings[0])\n    }\n\n    gatherSinglesRankings()\n\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRankings = async () => {\n      const combinedDoublesRankings = await doublesTeamRankings()\n      setMaleDoublesRankings(combinedDoublesRankings.rankings[1])\n      setFemaleDoublesRankings(combinedDoublesRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherDoublesRankings(), 1001)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherSinglesRaceRankings = async () => {\n      const combinedSinglesRaceRankings = await playerRaceRankings()\n      setMaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[1])\n      setFemaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherSinglesRaceRankings(), 2002)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRaceRankings = async () => {\n      const combinedDoublesRaceRankings = await doublesTeamRaceRankings()\n      setMaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[1])\n      setFemaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[0])\n      setLoaded(true)\n    }\n    const timeOut = setTimeout(() => gatherDoublesRaceRankings(), 3003)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  const handleEventSwitch = () => {\n    if (event === \"WTA\") {\n      setPlayerCount(0)\n      setEvent(\"ATP\")\n    } else if (event === \"ATP\") {\n      setPlayerCount(0)\n      setEvent(\"WTA\")\n    }\n  }\n\n  const handleDisciplineSwitch = () => {\n    if (discipline === \"Singles\") {\n      setPlayerCount(0)\n      setDiscipline(\"Doubles\")\n    } else if (discipline === \"Doubles\") {\n      setPlayerCount(0)\n      setDiscipline(\"Singles\")\n    }\n  }\n\n  const handleRaceSwitch = () => {\n    setPlayerCount(0)\n    setViewRace(!viewRace)\n  }\n  \n  return (\n    <>\n\n      {!loaded ?\n        \n        <Loader />\n\n        :\n      \n        <>\n\n          <div className=\"rankings-container\">\n\n            <p className=\"rankings-container-title\">{event} {discipline} {viewRace ? \"Race\" : \"\"} Rankings</p>\n\n            <div className=\"rankings-toggle-view-container\">\n\n              <div className=\"switch-container\" id=\"tour-view-switch-container\">\n\n                <p className=\"tour-view-switch-container-copy\">ATP</p>\n\n                <Switch onChange={handleEventSwitch} checked={event === \"WTA\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"tour-view-switch-container-copy\">WTA</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">SINGLES</p>\n\n                <Switch onChange={handleDisciplineSwitch} checked={discipline === \"Doubles\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">DOUBLES</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">ROLLING</p>\n\n                <Switch onChange={handleRaceSwitch} checked={viewRace ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">RACE</p>\n\n              </div>\n\n            </div>\n\n            <MobileBanner />\n\n              <Players rankingCategory={rankingCategory} discipline={discipline} viewRace={viewRace} playerCount={playerCount} setPlayerCount={setPlayerCount} />\n            \n          </div>\n          \n        </>\n\n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["156","157","158"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport TournamentCard from '../components/TournamentCard'\nimport ResultsContainer from '../components/ResultsContainer'\nimport PlayerCard from '../components/PlayerCard'\n\nimport './PlayerDetail.css'\n\nimport {\n  getPlayer,\n  getPlayerResults,\n  getPlayerSchedule\n} from \"../utils/players\"\n\nexport default function PlayerDetail(props) {\n\n  const [ dataLoaded, setDataLoadedm] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [view, setView] = useState('Player Results')\n\n  const [playerData, setPlayerData] = useState(null)\n  const [playerResults, setPlayerResults] = useState(null)\n  const [playerSchedule, setPlayerSchedule] = useState(false)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const currentPlayer = localStorage.getItem('currentPlayer')\n    const playerScheduleData = localStorage.getItem('playerSchedule')\n    const playerResultsData = localStorage.getItem('playerResults')\n    const playerDetails = localStorage.getItem('playerDetails')\n\n    if (playerDetails === undefined || playerDetails === null || playerDetails.length <= 2) {\n\n      console.log('gathering player data via API Call 1')\n\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerData = async (currentPlayerID) => {\n        const playerInfo = await getPlayer(currentPlayerID)\n        console.log(playerInfo)\n        localStorage.setItem('playerDetails', JSON.stringify(playerInfo))\n        setPlayerData(playerInfo)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerData(currentPlayerID), 3001)\n      return () => clearTimeout(timeOut)\n\n    } else {\n\n      console.log(\n        'gathering Player Data from LocalStorage'\n      )\n\n      setPlayerData(JSON.parse(playerDetails))\n      setPlayerResults(JSON.parse(playerResultsData))\n      setPlayerSchedule(JSON.parse(playerScheduleData))\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerResults = async (currentPlayerID) => {\n        const playerResultsInfo = await getPlayerResults(currentPlayerID)\n        localStorage.setItem('playerResults', JSON.stringify(playerResults))\n        setPlayerResults(playerResultsInfo)\n      }\n\n      gatherPlayerResults(currentPlayerID)\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerSchedule = async (currentPlayerID) => {\n        const playerScheduleInfo = await getPlayerSchedule(currentPlayerID)\n        localStorage.setItem('playerSchedule', JSON.stringify(playerScheduleInfo))\n        setPlayerSchedule(playerScheduleInfo)\n        setDataLoadedm(true)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerSchedule(currentPlayerID), 1001)\n      return () => clearTimeout(timeOut)\n\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    console.log(playerData)\n    console.log('PlayerData and PlayerSchedule/Results are being checked')\n\n    if (dataLoaded) {\n\n      console.log('data has been loaded and component will mount')\n      setLoaded(true)\n    }\n  }, [dataLoaded])\n\n  const scheduleItems = playerSchedule && playerSchedule?.schedule.map((tournament, index) => {\n\n    const startDate = new Date(tournament.season.start_date)\n    const endDate = new Date(tournament.season.end_date)\n\n    return (\n\n    <TournamentCard\n      tournament={tournament}\n      index={index}\n      key={tournament.id}\n      startDate={startDate}\n      endDate={endDate}\n    />\n      \n  )})\n\n  console.log(playerResults)\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Player Schedule\":\n        setView(\"Player Schedule\")\n        break;\n      case \"Player Results\":\n        setView(\"Player Results\")\n        break;\n    }\n  }\n\n  const handleReturnToTournament = (e) => {\n    localStorage.removeItem('currentPlayer')\n    localStorage.removeItem('playerSchedule')\n    localStorage.removeItem('playerResults')\n    localStorage.removeItem('playerDetails')\n    history.push('/rankings')\n  }\n  \n  return (\n    \n    <>\n\n      { !loaded ? \n      \n        <Loader />\n\n        :\n\n        <>\n          \n          <div className=\"player-detail-container\">\n\n            <div className=\"back-button-container\">\n\n              <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToTournament(e)} ></i>\n\n              <p className=\"back-button-copy\">BACK</p>\n\n            </div>\n\n            <PlayerCard playerData={playerData} key={playerData.player.id} playerCountry={playerData.player.country_code} viewRace={false} />\n\n            <MobileBanner />\n            \n            <div className=\"player-views-container\">\n\n              <button className=\"player-views-button\" id=\"player-results-button\" onClick={(e) => handleChangeView(\"Player Results\")}> Player Results</button>\n\n              <button className=\"player-views-button\" id=\"player-schedule-button\" onClick={(e) => handleChangeView(\"Player Schedule\")} > Player Schedule</button>\n\n            </div>\n\n              {view === \"Player Results\" ? \n              \n                <div className=\"player-results-container\">\n\n                  <ResultsContainer playerResults={playerResults} />\n\n                </div>\n              \n                :\n                \n                <div className=\"player-schedule-container\">\n                \n                  {scheduleItems.length === 0 ?\n                  \n                    <p className=\"match-container-copy\">Upcoming player schedule currently unavailable.</p>\n                  \n                  :\n                  \n                    <>\n\n                    {scheduleItems}\n                    \n                    </>\n              \n                  }\n\n                </div>\n              \n              }\n              \n            </div>\n          \n        </>\n      \n      }\n\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["159","160","161","162","163","164","165"],"import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Matches from '../components/Matches'\nimport OrderOfPlay from '../components/OrderOfPlay'\n\nimport './TournamentDetail.css'\n\nexport default function TournamentDetail(props) {\n\n  // Data Loaded Switches\n  const [currentSinglesTournamentLoaded, setCurrentSinglesTournamentLoaded] = useState(false)\n  const [currentDoublesTournamentLoaded, setCurrentDoublesTournamentLoaded] = useState(false)\n  const [currentTournamentScheduleLoaded, setCurrentTournamentScheduleLoaded] = useState(false)\n  const [currentTournamentCompletedMatchesLoaded, setCurrentTournamentCompletedMatchesLoaded] = useState(false)\n  const [currentTournamentLiveMatchesLoaded, setCurrentTournamentLiveMatchesLoaded] = useState(false)\n  \n  // Visibility Switches\n  const [ currentMode, setCurrentMode ] = useState(false)\n  const [ view, setView ] = useState(\"Live Scores\")\n\n  // Data\n    // Tournament Info\n  const [ currentSinglesTournament, setCurrentSinglesTournament ] = useState([])\n  const [currentDoublesTournament, setCurrentDoublesTournament] = useState([])\n  \n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentGender, setTournamentGender] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n\n    // Tournament Schedule\n  const [ currentTournamentSchedule, setCurrentTournamentSchedule ] = useState([])\n    // Completed Matches (Results)\n  const [ completedSinglesMatches, setCompletedSinglesMatches ] = useState([])\n  const [ completedDoublesMatches, setCompletedDoublesMatches ] = useState([])\n    // Live Matches\n  const [ liveSinglesMatches, setLiveSinglesMatches ] = useState([])\n  const [ liveDoublesMatches, setLiveDoublesMatches ] = useState([])\n\n  const params = useParams();\n  const history = useHistory()\n\n  const { tournaments, dailySchedule, dailyResults, liveMatches } = props;\n\n// UseEffects\n  \n  // Sets currentSinglesTournament Object\n  useEffect(() => {\n    if (tournaments !== undefined && tournaments !== null) {\n      const currentTournamentData = tournaments.find((tournament) => params.id === tournament.id)\n      setCurrentSinglesTournament(currentTournamentData)\n      setCurrentSinglesTournamentLoaded(true)\n    } else {\n      const currentTournamentData = localStorage.getItem('currentSinglesTournament')\n      setCurrentSinglesTournament(JSON.parse(currentTournamentData))\n      setCurrentSinglesTournamentLoaded(true)\n    }\n  }, [])\n\n  // Parses Key Tournament Info\n  useEffect(() => {\n    \n    if (currentSinglesTournamentLoaded) {\n\n      const parseTournamentInfo = (currentSinglesTournament) => {\n\n        const splitTournamentName = currentSinglesTournament.name.split(\",\")\n        const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n        const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n        if (tournamentName.includes(\"doubles\")) {\n          return\n        } else if (currentSinglesTournament.name.includes(\"WTA\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n        } else if (currentSinglesTournament.name.toLowerCase().includes(\"challenger\")) {\n          console.log(isolatedTournamentName)\n          const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n          console.log(isolatedChallengerTournamentName)\n          setTournamentName(isolatedChallengerTournamentName)\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ATP\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ITF\")) {\n          const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n          setTournamentName(isolatedITFTournamentName.join(\" \"))\n          setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n        } else {\n          setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n          setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n        }\n      }\n      parseTournamentInfo(currentSinglesTournament)\n      setStartDate(currentSinglesTournament.current_season.start_date.split(\"-\").splice(1).join(\"/\"))\n      setEndDate(currentSinglesTournament.current_season.end_date.split(\"-\").splice(1).join(\"/\"))\n      setTournamentGender(currentSinglesTournament.gender)\n    }\n  }, [currentSinglesTournamentLoaded])\n\n  // Collects Corresponding Doubles Tournament Data\n  useEffect(() => {\n\n    if (tournamentName && tournamentGender) {\n      console.log(tournaments)\n      console.log(tournamentGender)\n      console.log(tournamentName)\n      const currentDoublesTournamentData = tournaments.find((tournament) => ((tournament.type === \"doubles\") && (tournament.gender === tournamentGender) && (tournament.parent_id === currentSinglesTournament.parent_id)))\n      console.log(currentDoublesTournamentData)\n      setCurrentDoublesTournament(currentDoublesTournamentData)\n      setCurrentDoublesTournamentLoaded(true)\n    }\n  }, [tournamentName, tournamentGender])\n\n\n  // Collects Tournament Schedule\n  useEffect(() => {\n    if (currentDoublesTournamentLoaded) {\n      \n      console.log(currentDoublesTournament)\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n        console.log(currentSinglesTournament.id)\n        console.log(currentDoublesTournament.id)\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id) || (match.tournament.id === currentDoublesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      }\n\n    }\n  }, [currentDoublesTournamentLoaded])\n\n  // Collect Completed Matches (Results)\n  useEffect(() => {\n\n    if (currentTournamentScheduleLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        const completedDoublesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentDoublesTournament.id)))\n        setCompletedDoublesMatches(completedDoublesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      }\n    }\n  }, [currentTournamentScheduleLoaded])\n  \n  \n  // Collects Live Singles & Doubles Matches\n  useEffect(() => {\n\n    if (currentTournamentCompletedMatchesLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n        const liveDoublesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentDoublesTournament.id)))\n        \n        if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData !== undefined)) {\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData !== undefined) && (liveDoublesMatchesData === undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData) && (liveDoublesMatchesData)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n  \n        if ((liveSinglesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData !== undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      }\n    }\n  }, [currentTournamentCompletedMatchesLoaded])\n\n  // Switch Functions\n\n  const handleSwitch = () => {\n    setCurrentMode(!currentMode)\n  }\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Live Scores\":\n        setView(\"Live Scores\")\n        break;\n      case \"Completed Matches\":\n        setView(\"Completed Matches\")\n        break;\n      case \"Schedule\":\n        setView(\"Schedule\")\n        break;\n    }\n  }\n\n  const handleReturnToCalendar = (e) => {\n    localStorage.removeItem('currentSinglesTournament')\n    history.push('/calendar')\n  }\n  \n  return (\n\n    <>\n      \n      { currentTournamentLiveMatchesLoaded ?\n      \n        <div className=\"tournament-detail-container\">\n\n          <div className=\"back-button-container\">\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToCalendar(e)} ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <div className=\"tournament-card-container\">\n\n            <p className=\"tournament-card-name\">{tournamentName}</p>\n\n            <div className=\"tournament-category-container\">\n\n              <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n\n              <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n          \n            </div>\n\n          </div>\n\n\n\n          <div className=\"discipline-switch-container\">\n\n            <p className=\"discipline-switch-container-copy\">SINGLES</p>\n\n            <Switch onChange={handleSwitch} checked={currentMode ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n            <p className=\"discipline-switch-container-copy\">DOUBLES</p>\n\n          </div>\n\n\n          \n          <div className=\"tournament-views-container\">\n\n            <button className=\"tournament-views-button\" id=\"live-scores-button\" onClick={(e) => handleChangeView(\"Live Scores\")} > Live Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Completed Matches\")}> Completed Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Schedule\")} > Schedule</button>\n          \n          </div>\n\n          <MobileBanner />\n\n          {view === \"Live Scores\" ?\n        \n            <Matches matchesData={currentMode ? liveDoublesMatches : liveSinglesMatches} view={view} />\n\n            :\n        \n            <>\n          \n              {view === \"Completed Matches\" ?\n        \n                <Matches matchesData={currentMode ? completedDoublesMatches : completedSinglesMatches} view={view} />\n              \n                :\n            \n                <>\n              \n                  {currentTournamentSchedule.length === 0 ?\n              \n                    <p className=\"match-container-copy\">Tournament schedule currently unavailable.</p>\n            \n                    :\n\n                    <OrderOfPlay currentTournamentSchedule={currentTournamentSchedule} />\n        \n                  }\n\n                </>\n              \n              }\n        \n            </>\n      \n          }\n\n        </div>\n        \n      :\n        \n        <Loader />\n      \n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["166"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport MatchCard from '../components/MatchCard'\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './MatchDetail.css'\n\nimport {\n  getMatchDetails\n} from \"../utils/matches\"\n\nexport default function MatchDetail(props) {\n  \n  const [matchDetailsLoaded, setMatchDetailsLoaded] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [ matchData, setMatchData ] = useState(null)\n  const [ homeStats, setHomeStats] = useState(null)\n  const [ awayStats, setAwayStats ] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const match = localStorage.getItem('currentMatch')\n    const matchDetails = localStorage.getItem('matchDetails')\n\n    if (matchDetails) {\n      setMatchData(JSON.parse(matchDetails))\n      setHomeStats(JSON.parse(matchDetails).statistics.teams[0])\n      setAwayStats(JSON.parse(matchDetails).statistics.teams[1])\n      setMatchDetailsLoaded(true)\n \n    } else {\n\n      const matchID = JSON.parse(match).sport_event.id\n      console.log(matchID)\n\n      const getMatchStatistics = async (matchID) => {\n        const matchDetails = await getMatchDetails(matchID)\n        console.log(matchDetails)\n        setMatchData(matchDetails)\n        localStorage.setItem('matchDetails', JSON.stringify(matchDetails))\n        if (matchDetails.statistics) {\n          setHomeStats(matchDetails.statistics.teams[0])\n          setAwayStats(matchDetails.statistics.teams[1])\n          console.log(matchDetails.statistics.teams[0])\n          setMatchDetailsLoaded(true)\n        } else {\n          setMatchDetailsLoaded(true)\n        }\n      }\n      getMatchStatistics(matchID)\n\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (matchDetailsLoaded) {\n      setLoaded(true)\n    }\n\n  }, [matchDetailsLoaded])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchData.matchStatus === \"live\") {\n          const getLiveMatchStatistics = async (matchID) => {\n            const matchDetails = await getMatchDetails(matchID)\n            setMatchData(matchDetails)\n          }\n          getLiveMatchStatistics(matchData.sport_event.id)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [loaded])\n\n  const handleReturnToTournament = () => {\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n    const currentPlayer = localStorage.getItem('currentPlayer')\n\n    if (currentTournament) {\n      const tournamentID = JSON.parse(currentTournament).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/tournament/${tournamentID}`)\n    } else if (currentPlayer) {\n      const playerID = JSON.parse(currentPlayer).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/player/${playerID}`)\n    }\n  }\n\n  return (\n\n    <>\n\n      { ((loaded === false) || (matchData === null)) ? \n        \n        <Loader />\n     :\n        \n        <div className=\"match-detail-container\">\n\n          <div className=\"back-button-container\">\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToTournament(e)} ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <MatchCard matchData={matchData} key={matchData.sport_event.id} />\n\n          <MobileBanner />\n\n          <p className=\"match-statistics-title\">MATCH STATISTICS</p>\n\n          <div className=\"match-statistics-container\">\n\n            <div className=\"match-statistic-categories-container\">\n\n              <p className=\"statistic-category\" id=\"placeholder-category\"></p>\n\n              <p className=\"statistic-category\">First Serve Percentage</p>\n\n              <p className=\"statistic-category\">Second Serve Percentage</p>\n\n              <p className=\"statistic-category\">Aces</p>\n\n              <p className=\"statistic-category\">Double Faults</p>\n\n              <p className=\"statistic-category\">First Serve Points Won</p>\n\n              <p className=\"statistic-category\">Second Serve Points Won</p>\n\n              <p className=\"statistic-category\">Receiving Points Won</p>\n\n              <p className=\"statistic-category\">Break Points</p>\n\n              <p className=\"statistic-category total-points\">Total Points Won</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"home\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${homeStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{homeStats.statistics.first_serve_successful}{`/`}{homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults}{` (`}{(homeStats.statistics.first_serve_successful / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_successful}/${homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults} (${(homeStats.statistics.second_serve_successful / (homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.first_serve_points_won}/${homeStats.statistics.first_serve_successful} (${(homeStats.statistics.first_serve_points_won / homeStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_points_won}/${homeStats.statistics.second_serve_successful} (${(homeStats.statistics.second_serve_points_won / homeStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.receiver_points_won}/${(awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful)} (${((homeStats.statistics.receiver_points_won / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.breakpoints_won}/${homeStats.statistics.total_breakpoints} (${(homeStats.statistics.breakpoints_won / homeStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${homeStats.statistics.points_won}`}</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"away\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${awayStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{awayStats.statistics.first_serve_successful}{`/`}{awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults}{` (`}{(awayStats.statistics.first_serve_successful / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_successful}/${awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults} (${(awayStats.statistics.second_serve_successful / (awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.first_serve_points_won}/${awayStats.statistics.first_serve_successful} (${(awayStats.statistics.first_serve_points_won / awayStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_points_won}/${awayStats.statistics.second_serve_successful} (${(awayStats.statistics.second_serve_points_won / awayStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.receiver_points_won}/${(homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful)} (${((awayStats.statistics.receiver_points_won / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.breakpoints_won}/${awayStats.statistics.total_breakpoints} (${(awayStats.statistics.breakpoints_won / awayStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${awayStats.statistics.points_won}`}</p>\n          \n            </div>\n\n          </div>\n      \n        </div>\n      }\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["167"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n    \n    const parseTournamentInfo = (tournament) => {\n\n      const splitTournamentName = currentTournament.name.split(\",\")\n      const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n      const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n      if (tournamentName.includes(\"doubles\")) {\n        return\n      } else if (tournament.name.includes(\"WTA\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (tournament.name.toLowerCase().includes(\"challenger\")) {\n        const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n        setTournamentName(isolatedChallengerTournamentName)\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ATP\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ITF\")) {\n        const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n        setTournamentName(isolatedITFTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n    parseTournamentInfo(currentTournament)\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n        <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["168","169","170"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",["171"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx",["172","173"],"import React, { useState, useEffect } from 'react'\n\nimport Loader from './Loader'\nimport Results from './Results'\n\n\nexport default function ResultsContainer (props) {\n\n  const { playerResults } = props\n\n  const [uniqueTournaments, setUniqueTournaments] = useState(null)\n\n  const currentYear = new Date().getFullYear()\n  \n  console.log(currentYear)\n  console.log(playerResults)\n  console.log(uniqueTournaments)\n\n  useEffect(() => {\n\n    if (playerResults) {\n\n      console.log(\"generating unique tournaments\")\n\n      const generateUniqueTournaments = () => {\n\n        console.log('ahead of the loop')\n\n        let tournaments = []\n        let tournamentsData = []\n\n        for (let i = 0; i < playerResults.results.length; i++) {\n\n          console.log(`in the loop ${i} time`)\n\n          if (!tournaments.includes(playerResults.results[i].sport_event.tournament.id) && (playerResults.results[i].sport_event.season.year === currentYear.toString())) {\n            console.log('pushing into array')\n            tournaments.push(playerResults.results[i].sport_event.tournament.id)\n            tournamentsData.push(playerResults.results[i])\n          }\n        }\n        return tournamentsData\n      }\n\n\n      const uniqueTournamentsArray = generateUniqueTournaments()\n\n      setUniqueTournaments(uniqueTournamentsArray)\n    }\n\n  }, [])\n  \n    return (\n     \n      <>\n        \n        {uniqueTournaments === null ?\n\n          <>\n          </>\n          \n        :\n        \n          <>\n      \n            <Results uniqueTournaments={uniqueTournaments} playerResults={playerResults} />\n            \n          </>\n          \n        }\n\n    </>\n  )\n\n}\n\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":69,"column":6,"nodeType":"180","endLine":69,"endColumn":8,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":94,"column":6,"nodeType":"180","endLine":94,"endColumn":38,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"182","line":115,"column":6,"nodeType":"180","endLine":115,"endColumn":21,"suggestions":"184"},{"ruleId":"178","severity":1,"message":"185","line":57,"column":6,"nodeType":"180","endLine":57,"endColumn":43,"suggestions":"186"},{"ruleId":"178","severity":1,"message":"187","line":81,"column":6,"nodeType":"180","endLine":81,"endColumn":18,"suggestions":"188"},{"ruleId":"178","severity":1,"message":"189","line":114,"column":6,"nodeType":"180","endLine":114,"endColumn":18,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":136,"column":5,"nodeType":"193","messageId":"194","endLine":143,"endColumn":6},{"ruleId":"178","severity":1,"message":"195","line":64,"column":6,"nodeType":"180","endLine":64,"endColumn":8,"suggestions":"196"},{"ruleId":"178","severity":1,"message":"197","line":105,"column":6,"nodeType":"180","endLine":105,"endColumn":38,"suggestions":"198"},{"ruleId":"178","severity":1,"message":"199","line":119,"column":6,"nodeType":"180","endLine":119,"endColumn":40,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"201","line":153,"column":6,"nodeType":"180","endLine":153,"endColumn":38,"suggestions":"202"},{"ruleId":"178","severity":1,"message":"203","line":182,"column":6,"nodeType":"180","endLine":182,"endColumn":39,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"205","line":232,"column":6,"nodeType":"180","endLine":232,"endColumn":47,"suggestions":"206"},{"ruleId":"191","severity":1,"message":"192","line":241,"column":5,"nodeType":"193","messageId":"194","endLine":251,"endColumn":6},{"ruleId":"178","severity":1,"message":"207","line":84,"column":6,"nodeType":"180","endLine":84,"endColumn":14,"suggestions":"208"},{"ruleId":"178","severity":1,"message":"209","line":46,"column":6,"nodeType":"180","endLine":46,"endColumn":8,"suggestions":"210"},{"ruleId":"178","severity":1,"message":"211","line":70,"column":6,"nodeType":"180","endLine":70,"endColumn":35,"suggestions":"212"},{"ruleId":"178","severity":1,"message":"213","line":95,"column":6,"nodeType":"180","endLine":95,"endColumn":24,"suggestions":"214"},{"ruleId":"178","severity":1,"message":"215","line":326,"column":6,"nodeType":"180","endLine":326,"endColumn":13,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"189","line":76,"column":6,"nodeType":"180","endLine":76,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"178","severity":1,"message":"222","line":51,"column":6,"nodeType":"180","endLine":51,"endColumn":8,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'today' and 'tournaments.length'. Either include them or remove the dependency array.","ArrayExpression",["226"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["227"],["228"],"React Hook useEffect has missing dependencies: 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["229"],"React Hook useEffect has a missing dependency: 'playerResults'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["231"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'params.id' and 'tournaments'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament' and 'tournamentName'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.parent_id' and 'tournaments'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', and 'dailySchedule'. Either include them or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailyResults', and 'dailySchedule.length'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailySchedule.length', and 'liveMatches'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has missing dependencies: 'matchData.matchStatus' and 'matchData.sport_event.id'. Either include them or remove the dependency array.",["238"],"React Hook useEffect has missing dependencies: 'tournament' and 'tournamentName'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has missing dependencies: 'matchData.sport_event' and 'matchData.sport_event_status.status'. Either include them or remove the dependency array.",["242"],["243"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [today, tournaments.length]",{"range":"283","text":"284"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"285","text":"286"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, dailySchedule]",{"range":"287","text":"288"},"Update the dependencies array to be: [loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"289","text":"290"},"Update the dependencies array to be: [playerData, playerResults]",{"range":"291","text":"292"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"293","text":"294"},"Update the dependencies array to be: [params.id, tournaments]",{"range":"295","text":"296"},"Update the dependencies array to be: [currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",{"range":"297","text":"298"},"Update the dependencies array to be: [tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",{"range":"299","text":"300"},"Update the dependencies array to be: [currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",{"range":"301","text":"302"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",{"range":"303","text":"304"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",{"range":"305","text":"306"},"Update the dependencies array to be: [loaded, matchData.matchStatus, matchData.sport_event.id]",{"range":"307","text":"308"},"Update the dependencies array to be: [tournament, tournamentName]",{"range":"309","text":"310"},"Update the dependencies array to be: [matchData, currentMatchData, match]",{"range":"311","text":"312"},"Update the dependencies array to be: [match, matchData, matchInfo.matchStatus, scoreInfo]",{"range":"313","text":"314"},"Update the dependencies array to be: [match, matchData.sport_event, matchData.sport_event_status.status]",{"range":"315","text":"316"},"Update the dependencies array to be: [playerData]",{"range":"317","text":"318"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"319","text":"320"},[2105,2107],"[today, tournaments.length]",[2874,2906],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[3564,3579],"[currentDay, currentMonth, currentYear, dailySchedule]",[2532,2569],"[loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[2642,2654],"[playerData, playerResults]",[3619,3631],"[dataLoaded, playerData]",[2745,2747],"[params.id, tournaments]",[5100,5132],"[currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",[5744,5778],"[tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",[7207,7239],"[currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",[8661,8694],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",[10903,10944],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",[2365,2373],"[loaded, matchData.matchStatus, matchData.sport_event.id]",[2213,2215],"[tournament, tournamentName]",[1858,1887],"[matchData, currentMatchData, match]",[2488,2506],"[match, matchData, matchInfo.matchStatus, scoreInfo]",[8671,8678],"[match, matchData.sport_event, matchData.sport_event_status.status]",[2899,2901],"[playerData]",[1328,1330],"[currentYear, playerResults]"]