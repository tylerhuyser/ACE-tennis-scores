[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30"},{"size":589,"mtime":1610168112225,"results":"31","hashOfConfig":"32"},{"size":4139,"mtime":1612932468971,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1610088373592,"results":"34","hashOfConfig":"32"},{"size":1035,"mtime":1613260884794,"results":"35","hashOfConfig":"32"},{"size":1026,"mtime":1612931833751,"results":"36","hashOfConfig":"32"},{"size":6277,"mtime":1612831048553,"results":"37","hashOfConfig":"32"},{"size":1635,"mtime":1612471916149,"results":"38","hashOfConfig":"32"},{"size":5625,"mtime":1613271476581,"results":"39","hashOfConfig":"32"},{"size":9782,"mtime":1612485420066,"results":"40","hashOfConfig":"32"},{"size":8481,"mtime":1612485573837,"results":"41","hashOfConfig":"32"},{"size":322,"mtime":1613262957318,"results":"42","hashOfConfig":"32"},{"size":1380,"mtime":1612321384908,"results":"43","hashOfConfig":"32"},{"size":430,"mtime":1610266940796,"results":"44","hashOfConfig":"32"},{"size":1711,"mtime":1610402758870,"results":"45","hashOfConfig":"32"},{"size":511,"mtime":1610402681806,"results":"46","hashOfConfig":"32"},{"size":549,"mtime":1610387506009,"results":"47","hashOfConfig":"32"},{"size":782,"mtime":1610390275911,"results":"48","hashOfConfig":"32"},{"size":3248,"mtime":1612931685395,"results":"49","hashOfConfig":"32"},{"size":12980,"mtime":1612931419890,"results":"50","hashOfConfig":"32"},{"size":767,"mtime":1611217044721,"results":"51","hashOfConfig":"32"},{"size":200,"mtime":1610517578412,"results":"52","hashOfConfig":"32"},{"size":669,"mtime":1610602823119,"results":"53","hashOfConfig":"32"},{"size":271,"mtime":1610687892583,"results":"54","hashOfConfig":"32"},{"size":1409,"mtime":1613091744623,"results":"55","hashOfConfig":"32"},{"size":611,"mtime":1610517554366,"results":"56","hashOfConfig":"32"},{"size":1257,"mtime":1612328381358,"results":"57","hashOfConfig":"32"},{"size":1321,"mtime":1610517594598,"results":"58","hashOfConfig":"32"},{"size":1000,"mtime":1613266102891,"results":"59","hashOfConfig":"32"},{"size":1479,"mtime":1613271768260,"results":"60","hashOfConfig":"32"},{"size":727,"mtime":1613271094538,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"ks3lcs",{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["130","131"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["132","133","134","135","136"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getCurrentTournaments\n} from './utils/tournaments'\n\nimport {\n  getLiveMatches\n} from './utils/live'\n\nimport {\n  getDailySchedule,\n  getDailyResults\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [ tournaments, setTournaments ] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n\n  const [ searchQuery, setSearchQuery ] = useState(\"\")\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n\n    const tournamentData = localStorage.getItem('tournaments')\n\n    if (totalTournaments === 0 && tournamentData === null) {\n\n      const gatherActiveTournaments = async () => {\n        console.log('apirequest 1')\n        const tournamentData = await getCurrentTournaments()\n        setTournaments(tournamentData.tournaments)\n        console.log(tournamentData.tournaments)\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData.tournaments))\n        setTournamentsLoaded(true)\n      }\n      gatherActiveTournaments()\n\n    } else {\n\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (tournamentsLoaded) {\n      console.log('apirequest 2')\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n        const dailyScheduleData = await getDailySchedule(currentYear, currentMonth, currentDay)\n        console.log(dailyScheduleData.sport_events)\n        if (dailyScheduleData.length === 0) {\n          setDailySchedule(dailyScheduleData)\n          // setTournamentsLoaded(true)\n        } else {\n          setDailySchedule(dailyScheduleData.sport_events)\n          // setTournamentsLoaded(true)\n        }\n      }\n      gatherDailySchedule(year, month, day)\n    }\n\n  }, [tournaments])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 3')\n      const gatherDailyResults = async (currentYear, currentMonth, currentDay) => {\n        const dailyResultsData = await getDailyResults(currentYear, currentMonth, currentDay)\n        console.log(dailyResultsData.results)\n        setDailyResults(dailyResultsData.results)\n      }\n\n      gatherDailyResults(year, month, day)\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 4')\n      const gatherLiveMatches = async () => {\n        const liveMatchesData = await getLiveMatches()\n        console.log(liveMatchesData.summaries)\n        if (liveMatchesData.summaries.length === 0) {\n          setLoaded(true)\n        } else {\n          setLiveMatches(liveMatchesData.summaries)\n          setLoaded(true)\n        }\n      }\n      const timeOut = setTimeout(() => gatherLiveMatches(), 1001)\n      return () => clearTimeout(timeOut)\n    }\n    \n  }, [dailySchedule])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["137"],"import React, { useState, useEffect } from 'react'\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport Players from '../components/Players'\n\nimport './Rankings.css'\n\nimport {\n  playerRankings,\n  playerRaceRankings,\n  doublesTeamRankings,\n  doublesTeamRaceRankings\n} from '../utils/rankings'\n\nexport default function Rankings(props) {\n\n  const [loaded, setLoaded] = useState(false)\n\n  const [event, setEvent] = useState('ATP')\n  const [discipline, setDiscipline] = useState('Singles')\n  const [viewRace, setViewRace] = useState(false)\n\n  const [maleSinglesRankings, setMaleSinglesRankings] = useState(null)\n  const [femaleSinglesRankings, setFemaleSinglesRankings] = useState(null)\n  const [maleDoublesRankings, setMaleDoublesRankings] = useState(null)\n  const [femaleDoublesRankings, setFemaleDoublesRankings] = useState(null)\n\n  const [maleSinglesRaceRankings, setMaleSinglesRaceRankings] = useState(null)\n  const [femaleSinglesRaceRankings, setFemaleSinglesRaceRankings] = useState(null)\n  const [maleDoublesRaceRankings, setMaleDoublesRaceRankings] = useState(null)\n  const [femaleDoublesRaceRankings, setFemaleDoublesRaceRankings] = useState(null)\n\n\n  const [ rankingCategory, setRankingCategory ] = useState(false)\n\n  useEffect(() => {\n    if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(femaleSinglesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(femaleSinglesRaceRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(femaleDoublesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(femaleDoublesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(maleSinglesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(maleSinglesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(maleDoublesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(maleDoublesRaceRankings)\n    }\n  }, [loaded, event, discipline, viewRace])\n\n  \n  useEffect(() => {\n    const gatherSinglesRankings = async () => {\n      const combinedSinglesRankings = await playerRankings()\n      console.log(combinedSinglesRankings)\n      setMaleSinglesRankings(combinedSinglesRankings.rankings[1])\n      setFemaleSinglesRankings(combinedSinglesRankings.rankings[0])\n    }\n\n    gatherSinglesRankings()\n\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRankings = async () => {\n      const combinedDoublesRankings = await doublesTeamRankings()\n      setMaleDoublesRankings(combinedDoublesRankings.rankings[1])\n      setFemaleDoublesRankings(combinedDoublesRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherDoublesRankings(), 1001)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherSinglesRaceRankings = async () => {\n      const combinedSinglesRaceRankings = await playerRaceRankings()\n      setMaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[1])\n      setFemaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherSinglesRaceRankings(), 2002)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRaceRankings = async () => {\n      const combinedDoublesRaceRankings = await doublesTeamRaceRankings()\n      setMaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[1])\n      setFemaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[0])\n      setLoaded(true)\n    }\n    const timeOut = setTimeout(() => gatherDoublesRaceRankings(), 3003)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  const handleEventSwitch = () => {\n    if (event === \"WTA\") {\n      setEvent(\"ATP\")\n    } else if (event === \"ATP\") {\n      setEvent(\"WTA\")\n    }\n  }\n\n  const handleDisciplineSwitch = () => {\n    if (discipline === \"Singles\") {\n      setDiscipline(\"Doubles\")\n    } else if (discipline === \"Doubles\") {\n      setDiscipline(\"Singles\")\n    }\n  }\n\n  const handleRaceSwitch = () => {\n    setViewRace(!viewRace)\n  }\n  \n  return (\n    <>\n\n      {!loaded ?\n        \n        <Loader />\n\n        :\n      \n        <>\n\n          <div className=\"rankings-container\">\n\n            <p className=\"rankings-container-title\">{event} {discipline} {viewRace ? \"Race\" : \"\"} Rankings</p>\n\n            <div className=\"rankings-toggle-view-container\">\n\n              <div className=\"switch-container\" id=\"tour-view-switch-container\">\n\n                <p className=\"tour-view-switch-container-copy\">ATP</p>\n\n                <Switch onChange={handleEventSwitch} checked={event === \"WTA\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"tour-view-switch-container-copy\">WTA</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">SINGLES</p>\n\n                <Switch onChange={handleDisciplineSwitch} checked={discipline === \"Doubles\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">DOUBLES</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">ROLLING</p>\n\n                <Switch onChange={handleRaceSwitch} checked={viewRace ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">RACE</p>\n\n              </div>\n\n            </div>\n\n            <Players rankingCategory={rankingCategory} event={event} discipline={discipline} viewRace={viewRace} />\n\n\n          </div>\n          \n        </>\n\n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["138","139","140"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["141","142","143","144","145","146","147","148"],"import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\n\nimport Matches from '../components/Matches'\nimport OrderOfPlay from '../components/OrderOfPlay'\n\nimport './TournamentDetail.css'\n\nexport default function TournamentDetail(props) {\n\n  // Switches\n  const [ loaded, setLoaded ] = useState(false)\n  const [ currentMode, setCurrentMode ] = useState(false)\n  const [ view, setView ] = useState(\"Live Scores\")\n\n  // Data\n    // Tournament Info\n  const [ currentSinglesTournament, setCurrentSinglesTournament ] = useState([])\n  const [ currentDoublesTournament, setCurrentDoublesTournament ] = useState([])\n    // Tournament Schedule\n  const [ currentTournamentSchedule, setCurrentTournamentSchedule ] = useState([])\n    // Completed Matches (Results)\n  const [ completedSinglesMatches, setCompletedSinglesMatches ] = useState([])\n  const [ completedDoublesMatches, setCompletedDoublesMatches ] = useState([])\n    // Live Matches\n  const [ liveSinglesMatches, setLiveSinglesMatches ] = useState([])\n  const [ liveDoublesMatches, setLiveDoublesMatches ] = useState([])\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategory, setTournamentCategory] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n\n  const params = useParams();\n  const history = useHistory()\n\n  const { tournaments, dailySchedule, dailyResults, liveMatches, currentDate } = props;\n\n// UseEffects\n  \n  // Sets currentSinglesTournament Object\n  useEffect(() => {\n    if (tournaments !== undefined && tournaments !== null) {\n      const currentTournamentData = tournaments.find((tournament) => params.id === tournament.id)\n      setCurrentSinglesTournament(currentTournamentData)\n      setLoaded(true)\n    } else {\n      const currentTournamentData = localStorage.getItem('currentSinglesTournament')\n      setCurrentSinglesTournament(JSON.parse(currentTournamentData))\n      setLoaded(true)\n    }\n  }, [])\n\n  // Parses Key Tournament Info\n  useEffect(() => {\n    \n    if (loaded) {\n      const parseTournamentInfo = (currentSinglesTournament) => {\n\n        const splitTournamentName = currentSinglesTournament.name.split(\",\")\n        const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n        const isolatedTournamentTier = isolatedTournamentNameAndTier[0]\n        const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n        if (tournamentName.includes(\"doubles\")) {\n          return\n        } else if (currentSinglesTournament.name.includes(\"WTA\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategory(isolatedTournamentTier)\n          setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n        } else if (currentSinglesTournament.name.toLowerCase().includes(\"challenger\")) {\n          console.log(isolatedTournamentName)\n          const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n          console.log(isolatedChallengerTournamentName)\n          setTournamentName(isolatedChallengerTournamentName)\n          setTournamentCategory('ATP')\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ATP\")) {\n          setTournamentName(isolatedTournamentName.join(\" \"))\n          setTournamentCategory(isolatedTournamentTier)\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n        } else if (currentSinglesTournament.name.includes(\"ITF\")) {\n          const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n          setTournamentName(isolatedITFTournamentName.join(\" \"))\n          setTournamentCategory(isolatedTournamentTier)\n          setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n        } else {\n          setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n          setTournamentCategory(\"Grand Slam\")\n          setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n        }\n      }\n      parseTournamentInfo(currentSinglesTournament)\n    }\n  }, [loaded])\n\n  // Collects Corresponding Doubles Tournament Data\n  useEffect(() => {\n\n    if (tournamentName) {\n      const currentDoublesTournamentData = tournaments.find((tournament) => ((tournament.type === \"doubles\") && (tournament.name.includes(tournamentName))))\n      setCurrentDoublesTournament(currentDoublesTournamentData)\n    }\n  }, [tournamentName])\n\n\n  // Collects Tournament Schedule\n  useEffect(() => {\n    if (currentDoublesTournament && dailySchedule.length > 0) {\n      console.log('here schedule')\n      const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id) || (match.tournament.id === currentDoublesTournament.id)))\n      if (currentTournamentScheduleData === undefined) {\n        return\n      } else {\n        setCurrentTournamentSchedule(currentTournamentScheduleData)\n      }\n    }\n  }, [currentDoublesTournament])\n\n  // Collect Completed Matches (Results)\n  useEffect(() => {\n    if (currentDoublesTournament && dailySchedule.length > 0) {\n      const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n      setCompletedSinglesMatches(completedSinglesMatchesData)\n      const completedDoublesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentDoublesTournament.id)))\n      setCompletedDoublesMatches(completedDoublesMatchesData)\n      console.log(dailyResults)\n      console.log(completedSinglesMatchesData)\n      console.log('here completed')\n    }\n  }, [currentDoublesTournament])\n  \n  \n  // Collects Live Singles & Doubles Matches\n  useEffect(() => {\n\n    if (currentDoublesTournament && dailySchedule.length > 0) {\n      const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n      const liveDoublesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentDoublesTournament.id)))\n      if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData === undefined)) {\n        return\n      } else if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData !== undefined)) {\n        setLiveDoublesMatches(liveDoublesMatchesData)\n      } else if ((liveSinglesMatchesData !== undefined) && (liveDoublesMatchesData === undefined)) {\n        setLiveSinglesMatches(liveSinglesMatchesData)\n      } else if ((liveSinglesMatchesData) && (liveDoublesMatchesData)) {\n        setLiveSinglesMatches(liveSinglesMatchesData)\n        setLiveDoublesMatches(liveDoublesMatchesData)\n      }\n      console.log('here live')\n      console.log(liveMatches)\n      console.log(currentSinglesTournament.id)\n      console.log(liveSinglesMatchesData)\n    }\n  }, [currentDoublesTournament])\n\n  // Switch Functions\n\n  const handleSwitch = () => {\n    setCurrentMode(!currentMode)\n  }\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Live Scores\":\n        setView(\"Live Scores\")\n        break;\n      case \"Completed Matches\":\n        setView(\"Completed Matches\")\n        break;\n      case \"Schedule\":\n        setView(\"Schedule\")\n        break;\n    }\n  }\n\n  const handleReturnToCalendar = (e) => {\n    history.push('/calendar')\n  }\n  \n  return (\n    <div className=\"tournament-detail-container\">\n      \n      <i class=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToCalendar(e)} >    BACK</i>\n\n      <div className=\"tournament-card-container\">\n\n        <p className=\"tournament-card-name\">{tournamentName}</p>\n\n        <div className=\"tournament-category-container\">\n\n          <p className=\"tournament-category\">{tournamentCategory}</p>\n\n          <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n        \n        </div>\n\n      </div>\n\n\n\n      <div className=\"discipline-switch-container\">\n\n        <p className=\"discipline-switch-container-copy\">SINGLES</p>\n\n        <Switch onChange={handleSwitch} checked={currentMode ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n        <p className=\"discipline-switch-container-copy\">DOUBLES</p>\n\n      </div>\n\n\n        \n      <div className=\"tournament-views-container\">\n\n        <button className=\"tournament-views-button\" id=\"live-scores-button\" onClick={(e) => handleChangeView(\"Live Scores\")} > Live Matches</button>\n\n        <button className=\"tournament-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Completed Matches\")}> Completed Matches</button>\n\n        <button className=\"tournament-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Schedule\")} > Schedule</button>\n         \n      </div>\n\n\n\n      { view === \"Live Scores\" ?\n      \n        <Matches matchesData={ currentMode ? liveDoublesMatches : liveSinglesMatches } view={view} />\n\n      :\n      \n      <>\n        \n        { view === \"Completed Matches\" ?\n      \n          <Matches matchesData={ currentMode ? completedDoublesMatches : completedSinglesMatches } view={view} />\n            \n        :\n          \n          <OrderOfPlay currentTournamentSchedule={currentTournamentSchedule} />\n      \n        }\n      \n      </>\n    \n      }\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["149"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport MatchCard from '../components/MatchCard'\nimport Loader from '../components/Loader'\n\nimport './MatchDetail.css'\n\nimport {\n  getMatchDetails\n} from \"../utils/matches\"\n\nexport default function MatchDetail(props) {\n  \n  const [ loaded, setLoaded ] = useState(false)\n  const [ matchData, setMatchData ] = useState(null)\n  const [ homeStats, setHomeStats] = useState(null)\n  const [ awayStats, setAwayStats ] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const match = localStorage.getItem('currentMatch')\n    const matchDetails = localStorage.getItem('matchDetails')\n\n    if (matchDetails) {\n      setMatchData(JSON.parse(matchDetails))\n      setHomeStats(JSON.parse(matchDetails).statistics.teams[0])\n      setAwayStats(JSON.parse(matchDetails).statistics.teams[1])\n \n    } else {\n\n      const matchID = JSON.parse(match).sport_event.id\n      console.log(matchID)\n\n      const getMatchStatistics = async (matchID) => {\n        const matchDetails = await getMatchDetails(matchID)\n        console.log(matchDetails)\n\n        setMatchData(matchDetails)\n        setHomeStats(matchDetails.statistics.teams[0])\n        setAwayStats(matchDetails.statistics.teams[1])\n        console.log(matchDetails.statistics.teams[0])\n\n        localStorage.setItem('matchDetails', JSON.stringify(matchDetails))\n      }\n      getMatchStatistics(matchID)\n\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (awayStats) {\n      setLoaded(true)\n    }\n\n  }, [awayStats])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchData.matchStatus === \"live\") {\n          const getLiveMatchStatistics = async (matchID) => {\n            const matchDetails = await getMatchDetails(matchID)\n            setMatchData(matchDetails)\n          }\n          getLiveMatchStatistics(matchData.sport_event.id)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [loaded])\n\n  const handleReturnToTournament = () => {\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n    const tournamentID = JSON.parse(currentTournament).id\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n  return (\n\n    <>\n\n      { ((loaded === false) || (matchData === null)) ? \n        \n        <Loader />\n     :\n        \n        <div className=\"match-detail-container\">\n\n          <i class=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToTournament(e)} >    BACK</i>\n\n          <MatchCard matchData={matchData} key={matchData.sport_event.id} />\n\n          <p className=\"match-statistics-title\">MATCH STATISTICS</p>\n\n          <div className=\"match-statistics-container\">\n\n            <div className=\"match-statistic-categories-container\">\n\n              <p className=\"statistic-category\" id=\"placeholder-category\"></p>\n\n              <p className=\"statistic-category\">First Serve Percentage</p>\n\n              <p className=\"statistic-category\">Second Serve Percentage</p>\n\n              <p className=\"statistic-category\">Aces</p>\n\n              <p className=\"statistic-category\">Double Faults</p>\n\n              <p className=\"statistic-category\">First Serve Points Won</p>\n\n              <p className=\"statistic-category\">Second Serve Points Won</p>\n\n              <p className=\"statistic-category\">Receiving Points Won</p>\n\n              <p className=\"statistic-category\">Break Points</p>\n\n              <p className=\"statistic-category\">Total Points Won</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"home\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${homeStats.name}`}</p>\n\n              <p className=\"statistic-category\">{homeStats.statistics.first_serve_successful}{`/`}{homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults}{` (`}{(homeStats.statistics.first_serve_successful / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.second_serve_successful}/${homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults} (${(homeStats.statistics.second_serve_successful / (homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.first_serve_points_won}/${homeStats.statistics.first_serve_successful} (${(homeStats.statistics.first_serve_points_won / homeStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.second_serve_points_won}/${homeStats.statistics.second_serve_successful} (${(homeStats.statistics.second_serve_points_won / homeStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.receiver_points_won}/${(awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful)} (${((homeStats.statistics.receiver_points_won / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.breakpoints_won}/${homeStats.statistics.total_breakpoints} (${(homeStats.statistics.breakpoints_won / homeStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${homeStats.statistics.points_won}`}</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"away\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${awayStats.name}`}</p>\n\n              <p className=\"statistic-category\">{awayStats.statistics.first_serve_successful}{`/`}{awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults}{` (`}{(awayStats.statistics.first_serve_successful / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.second_serve_successful}/${awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults} (${(awayStats.statistics.second_serve_successful / (awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.first_serve_points_won}/${awayStats.statistics.first_serve_successful} (${(awayStats.statistics.first_serve_points_won / awayStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.second_serve_points_won}/${awayStats.statistics.second_serve_successful} (${(awayStats.statistics.second_serve_points_won / awayStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.receiver_points_won}/${(homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful)} (${((awayStats.statistics.receiver_points_won / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.breakpoints_won}/${awayStats.statistics.total_breakpoints} (${(awayStats.statistics.breakpoints_won / awayStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\">{`${awayStats.statistics.points_won}`}</p>\n          \n            </div>\n\n          </div>\n      \n        </div>\n      }\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["150","151"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategory, setTournamentCategory] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n    \n    const parseTournamentInfo = (tournament) => {\n\n      const splitTournamentName = currentTournament.name.split(\",\")\n      const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n      const isolatedTournamentTier = isolatedTournamentNameAndTier[0]\n      const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n      if (tournamentName.includes(\"doubles\")) {\n        return\n      } else if (tournament.name.includes(\"WTA\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategory(isolatedTournamentTier)\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (tournament.name.toLowerCase().includes(\"challenger\")) {\n        const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n        setTournamentName(isolatedChallengerTournamentName)\n        setTournamentCategory('ATP')\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ATP\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategory(isolatedTournamentTier)\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ITF\")) {\n        const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n        setTournamentName(isolatedITFTournamentName.join(\" \"))\n        setTournamentCategory(isolatedTournamentTier)\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n        setTournamentCategory(\"Grand Slam\")\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n    parseTournamentInfo(currentTournament)\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n        <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["152","153"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./MatchCard.css\";\n\nimport {\n  getMatch,\n} from '../utils/matches'\n\nexport default function MatchCard(props) {\n  const { matchData, key } = props;\n  const history = useHistory();\n\n  console.log(matchData)\n\n  const [match, setMatch] = useState(null)\n\n  const [matchInfo, setMatchInfo] = useState({\n\n    tournamentEvent: matchData.sport_event.tournament.gender,\n    tournamentDiscipline: matchData.sport_event.sport_event_type,\n    tournamentRound: matchData.sport_event.tournament_round.name,\n\n    matchFormat: matchData.sport_event_conditions.match_mode,\n    matchCourt: matchData.sport_event_conditions.venue.name,\n    matchStatus: matchData.sport_event_status.status,\n\n    homeCompetitorID: matchData.sport_event.competitors[0].id,\n    homeCompetitor: matchData.sport_event.competitors[0].name,\n\n    awayCompetitorID: matchData.sport_event.competitors[1].id,\n    awayCompetitor: matchData.sport_event.competitors[1].name\n\n  })\n\n  const [scoreInfo, setScoreInfo] = useState({\n\n    setOneScoreHome: \"\",\n    setOneScoreAway: \"\",\n    setTwoScoreHome: \"\",\n    setTwoScoreAway: \"\",\n    setThreeScoreHome: \"\",\n    setThreeScoreAway: \"\",\n    setFourScoreHome: \"\",\n    setFourScoreAway: \"\",\n    setFiveScoreHome: \"\",\n    setFiveScoreAway: \"\",\n    serviceScoreHome: \"\",\n    serviceScoreAway: \"\",\n    server: \"\"\n\n  })\n\n  useEffect(() => {\n\n    const currentMatch = match\n    const currentMatchData = matchData\n    \n    if (currentMatch === null) {\n      console.log('setMatchData')\n      setMatch(currentMatchData)\n    } \n    \n  }, [])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchInfo.matchStatus === \"live\") {\n\n        const currentMatchID = matchData.sport_event.id\n\n        console.log('live data')\n         console.log(matchData)\n         const fetchMatch = async (matchID) => {\n           const data = await getMatch(matchID)\n           console.log(\"interval for fetchMatch within MatchCard\")\n           setMatch(data)\n         }\n         fetchMatch(currentMatchID)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [scoreInfo])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const parseTournamentRound = (tournamentRound) => {\n        switch (tournamentRound) {\n          case \"round_of_128\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 128\"\n            }));\n            break;\n          case \"round_of_64\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 64\"\n            }));\n            break;\n          case \"round_of_32\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 32\"\n            }));\n            break;\n          case \"round_of_16\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 16\"\n            }));\n            break;\n          case \"round_of_8\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"quarterfinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"round_of_4\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"semifinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"round_of_2\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Final\"\n            }));\n            break;\n          case \"final\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Final\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentRound(\n        match.sport_event.tournament_round.name\n      );\n\n      const parseTournamentDiscipline = (tournamentType) => {\n        switch (tournamentType) {\n          case \"singles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"Singles\"\n            }));\n            break;\n          case \"doubles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"Doubles\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"Mixed\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentDiscipline(\n        match.sport_event.sport_event_type\n      );\n\n      const parseTournamentGender = (tournamentGender) => {\n        switch (tournamentGender) {\n          case \"men\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"Men's\"\n            }));\n            break;\n          case \"women\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"Women's\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"Mixed\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentGender(\n        match.sport_event.tournament.gender\n      );\n    }\n  }, [match])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const handleHomeScore = () => {\n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.home_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: \"AD\"\n            }))\n\n          } else {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: match.sport_event_status.game_state.home_score\n            }))\n\n          }\n\n\n        }\n      }\n\n      const handleAwayScore = () => {\n        \n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.away_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: \"AD\"\n            }))\n\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: match.sport_event_status.game_state.away_score\n            }))\n          }\n        }\n      }\n\n      const generateSets = (formatValue) => {\n        \n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.period_scores !== undefined) {\n\n          const sets = [\"setOneScore\", \"setTwoScore\", \"setThreeScore\", \"setFourScore\", \"setFiveScore\"]\n\n          for (let i = 0; i < formatValue; i++) {\n\n            if (match.sport_event_status.period_scores[i] !== undefined) {\n          \n              let homeScore = sets[i] + \"Home\"\n              let awayScore = sets[i] + \"Away\"\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                [homeScore]: match.sport_event_status.period_scores[i].home_score,\n                [awayScore]: match.sport_event_status.period_scores[i].away_score\n              }))\n            }\n          }\n        }\n      }\n\n      const handleServer = () => {\n        if (matchInfo.matchStatus === \"live\" && match.sport_event_status.game_state.serving !== undefined) {\n          setScoreInfo(prevState => ({\n            ...prevState,\n            server: match.sport_event_status.game_state.serving\n          }))\n        } else if (matchInfo.matchStatus === \"closed\" && match.sport_event_status.winner_id !== undefined) {\n          if (match.sport_event_status.winner_id === matchInfo.homeCompetitorID) {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: \"homeWinner\"\n            }))\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: \"awayWinner\"\n            }))\n          }\n        }\n      }\n        \n      handleHomeScore()\n      handleAwayScore()\n      handleServer()\n\n      if (matchInfo.matchFormat === \"bo3\") {\n\n        let formatValue = 3\n\n        generateSets(formatValue, match)\n\n      } else if (matchInfo.matchFormat === \"bo5\") {\n\n        let formatValue = 5\n\n        generateSets(formatValue, match)\n\n      }\n\n    }\n  }, [match, matchInfo])\n\n  const handleMatch = (matchInfo, scoreInfo, matchID) => {\n    localStorage.setItem(\"currentMatch\", JSON.stringify(match))\n    history.push(`/match/${matchID}`);\n  };\n\n  return (\n    <div\n      className=\"match-card-container\"\n      id={key}\n      key={key}\n      onClick={(e) => handleMatch(matchInfo, scoreInfo, matchData.sport_event.id)}\n    >\n      <div className=\"match-card-header-container\">\n\n        <p className=\"match-card-title\">{`${matchInfo.tournamentEvent} ${matchInfo.tournamentDiscipline}`}</p>\n\n        <p className=\"match-court\">{`${matchInfo.matchCourt}`}</p>\n\n      </div>\n\n      <div className=\"match-container\">\n\n        <div className=\"match-info-container\">\n\n          <p className=\"match-round\">{`${matchInfo.tournamentRound}`}</p>\n\n          <p className=\"match-status\">{`${matchInfo.matchStatus}`}</p>\n\n        </div>\n\n        <div className=\"competitor-container\" id=\"home\">\n\n          <p className=\"competitor-name\">{`${matchInfo.homeCompetitor}`}</p>\n\n          {scoreInfo.server === \"home\" ? \n          \n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server home\"></i>\n            \n          :\n            \n          <>\n            \n          {\n            scoreInfo.server === \"homeWinner\" ?\n            \n            <i class=\"fas fa-check service-icon\"></i>\n              \n          :\n          \n            <div className=\"service-icon\" id=\"receiver home\" />\n\n          }\n          </>\n          \n          }\n\n          <p className=\"service-score home\">{scoreInfo.serviceScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-one\">{scoreInfo.setOneScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-two\">{scoreInfo.setTwoScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-three\">{scoreInfo.setThreeScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-four\">{scoreInfo.setFourScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-five\">{scoreInfo.setFiveScoreHome}</p>\n\n        </div>\n\n        <div className=\"set-labels-container\">\n\n          <p className=\"set-label\" id=\"set-one\">1</p>\n\n          <p className=\"set-label\" id=\"set-two\">2</p>\n\n          <p className=\"set-label\" id=\"set-three\">3</p>\n\n          <p className=\"set-label\" id=\"set-four\">4</p>\n\n          <p className=\"set-label\" id=\"set-five\">5</p>\n\n        </div>\n        \n\n        <div className=\"competitor-container\" id=\"away\">\n\n          <p className=\"competitor-name\">{`${matchInfo.awayCompetitor}`}</p>\n\n          {scoreInfo.server === \"away\" ?\n\n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server away\"></i>\n            \n            :\n          \n            <>\n            \n            {\n              scoreInfo.server === \"awayWinner\" ?\n              \n              <i class=\"fas fa-check service-icon\"></i>\n                \n            :\n            \n              <div className=\"service-icon\" id=\"receiver away\" />\n\n            }\n            </>\n\n          }\n\n          <p className=\"service-score away\">{scoreInfo.serviceScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-one\">{scoreInfo.setOneScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-two\">{scoreInfo.setTwoScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-three\">{scoreInfo.setThreeScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-four\">{scoreInfo.setFourScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-five\">{scoreInfo.setFiveScoreAway}</p>\n\n        </div>\n\n      </div>\n\n      <div className=\"match-stats-container\">\n        VIEW MATCH STATS\n      </div>\n      \n    </div>\n  );\n}\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",["154","155","156"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",["157","158"],"import React, { useState, useEffect } from 'react'\n\nimport TournamentCard from '../components/TournamentCard'\nimport MatchCard from '../components/MatchCard'\n\nexport default function ResultCard(props) {\n\n  const { playerResults, tournament, startDate, endDate, index } = props\n  \n    const tournamentResults = playerResults?.filter((result) => (\n      result.sport_event.id === tournament.id\n    )).map((result, index) => (\n      <MatchCard matchData={result} key={result.sport_event.id} />\n    ))\n\n  return (\n    <>\n      <TournamentCard\n        tournament={tournament}\n        index={index}\n        key={tournament.id}\n        startDate={startDate}\n        endDate={endDate}\n      />\n\n    {tournamentResults}\n  \n    </>\n  )\n}",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":28,"column":11,"nodeType":"165","messageId":"166","endLine":28,"endColumn":22},{"ruleId":"163","severity":1,"message":"167","line":28,"column":24,"nodeType":"165","messageId":"166","endLine":28,"endColumn":38},{"ruleId":"168","severity":1,"message":"169","line":67,"column":6,"nodeType":"170","endLine":67,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":91,"column":6,"nodeType":"170","endLine":91,"endColumn":19,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":110,"column":6,"nodeType":"170","endLine":110,"endColumn":21,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"176","line":55,"column":6,"nodeType":"170","endLine":55,"endColumn":43,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"178","line":81,"column":6,"nodeType":"170","endLine":81,"endColumn":18,"suggestions":"179"},{"ruleId":"168","severity":1,"message":"180","line":114,"column":6,"nodeType":"170","endLine":114,"endColumn":18,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":136,"column":5,"nodeType":"184","messageId":"185","endLine":143,"endColumn":6},{"ruleId":"163","severity":1,"message":"186","line":37,"column":66,"nodeType":"165","messageId":"166","endLine":37,"endColumn":77},{"ruleId":"168","severity":1,"message":"187","line":52,"column":6,"nodeType":"170","endLine":52,"endColumn":8,"suggestions":"188"},{"ruleId":"168","severity":1,"message":"189","line":95,"column":6,"nodeType":"170","endLine":95,"endColumn":14,"suggestions":"190"},{"ruleId":"168","severity":1,"message":"191","line":104,"column":6,"nodeType":"170","endLine":104,"endColumn":22,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"193","line":118,"column":6,"nodeType":"170","endLine":118,"endColumn":32,"suggestions":"194"},{"ruleId":"168","severity":1,"message":"195","line":131,"column":6,"nodeType":"170","endLine":131,"endColumn":32,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"197","line":155,"column":6,"nodeType":"170","endLine":155,"endColumn":32,"suggestions":"198"},{"ruleId":"182","severity":1,"message":"183","line":164,"column":5,"nodeType":"184","messageId":"185","endLine":174,"endColumn":6},{"ruleId":"168","severity":1,"message":"199","line":78,"column":6,"nodeType":"170","endLine":78,"endColumn":14,"suggestions":"200"},{"ruleId":"163","severity":1,"message":"201","line":9,"column":10,"nodeType":"165","messageId":"166","endLine":9,"endColumn":28},{"ruleId":"168","severity":1,"message":"202","line":53,"column":6,"nodeType":"170","endLine":53,"endColumn":8,"suggestions":"203"},{"ruleId":"168","severity":1,"message":"204","line":64,"column":6,"nodeType":"170","endLine":64,"endColumn":8,"suggestions":"205"},{"ruleId":"168","severity":1,"message":"206","line":89,"column":6,"nodeType":"170","endLine":89,"endColumn":17,"suggestions":"207"},{"ruleId":"163","severity":1,"message":"208","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":22},{"ruleId":"163","severity":1,"message":"209","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":17},{"ruleId":"168","severity":1,"message":"210","line":34,"column":6,"nodeType":"170","endLine":34,"endColumn":8,"suggestions":"211"},{"ruleId":"163","severity":1,"message":"212","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"213","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'searchQuery' is assigned a value but never used.","Identifier","unusedVar","'setSearchQuery' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tournaments.length'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', 'currentYear', and 'tournamentsLoaded'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has missing dependencies: 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["219"],"React Hook useEffect has a missing dependency: 'playerResults'. Either include it or remove the dependency array.",["220"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["221"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'currentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'tournaments'. Either include them or remove the dependency array.",["222"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament' and 'tournamentName'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'tournaments'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.id' and 'dailySchedule'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.id', 'dailyResults', and 'dailySchedule.length'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.id', 'dailySchedule.length', and 'liveMatches'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'matchData.matchStatus' and 'matchData.sport_event.id'. Either include them or remove the dependency array.",["228"],"'tournamentCategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'tournament' and 'tournamentName'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'match' and 'matchData'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["231"],"'TournamentCard' is defined but never used.","'MatchCard' is defined but never used.","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["232"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [tournaments.length]",{"range":"267","text":"268"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"269","text":"270"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, dailySchedule]",{"range":"271","text":"272"},"Update the dependencies array to be: [loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"273","text":"274"},"Update the dependencies array to be: [playerData, playerResults]",{"range":"275","text":"276"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"277","text":"278"},"Update the dependencies array to be: [params.id, tournaments]",{"range":"279","text":"280"},"Update the dependencies array to be: [currentSinglesTournament, loaded, tournamentName]",{"range":"281","text":"282"},"Update the dependencies array to be: [tournamentName, tournaments]",{"range":"283","text":"284"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, dailySchedule]",{"range":"285","text":"286"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, dailyResults, dailySchedule.length]",{"range":"287","text":"288"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, dailySchedule.length, liveMatches]",{"range":"289","text":"290"},"Update the dependencies array to be: [loaded, matchData.matchStatus, matchData.sport_event.id]",{"range":"291","text":"292"},"Update the dependencies array to be: [tournament, tournamentName]",{"range":"293","text":"294"},"Update the dependencies array to be: [match, matchData]",{"range":"295","text":"296"},"Update the dependencies array to be: [matchData, matchInfo.matchStatus, scoreInfo]",{"range":"297","text":"298"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"299","text":"300"},[1886,1888],"[tournaments.length]",[2618,2631],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[3170,3185],"[currentDay, currentMonth, currentYear, dailySchedule]",[2418,2455],"[loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[2610,2622],"[playerData, playerResults]",[3587,3599],"[dataLoaded, playerData]",[2024,2026],"[params.id, tournaments]",[4420,4428],"[currentSinglesTournament, loaded, tournamentName]",[4762,4778],"[tournamentName, tournaments]",[5299,5325],"[currentDoublesTournament, currentSinglesTournament.id, dailySchedule]",[6087,6113],"[currentDoublesTournament, currentSinglesTournament.id, dailyResults, dailySchedule.length]",[7293,7319],"[currentDoublesTournament, currentSinglesTournament.id, dailySchedule.length, liveMatches]",[2037,2045],"[loaded, matchData.matchStatus, matchData.sport_event.id]",[2593,2595],"[tournament, tournamentName]",[1630,1632],"[match, matchData]",[2228,2239],"[matchData, matchInfo.matchStatus, scoreInfo]",[1044,1046],"[currentYear, playerResults]"]