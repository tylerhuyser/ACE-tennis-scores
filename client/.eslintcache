[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx":"31"},{"size":589,"mtime":1610168112225,"results":"32","hashOfConfig":"33"},{"size":4059,"mtime":1614098671187,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1610088373592,"results":"35","hashOfConfig":"33"},{"size":1035,"mtime":1613260884794,"results":"36","hashOfConfig":"33"},{"size":1094,"mtime":1614193422467,"results":"37","hashOfConfig":"33"},{"size":6277,"mtime":1612831048553,"results":"38","hashOfConfig":"33"},{"size":1636,"mtime":1614051845565,"results":"39","hashOfConfig":"33"},{"size":5812,"mtime":1614147234849,"results":"40","hashOfConfig":"33"},{"size":11571,"mtime":1614232138625,"results":"41","hashOfConfig":"33"},{"size":8778,"mtime":1614233008622,"results":"42","hashOfConfig":"33"},{"size":322,"mtime":1613262957318,"results":"43","hashOfConfig":"33"},{"size":1380,"mtime":1612321384908,"results":"44","hashOfConfig":"33"},{"size":430,"mtime":1610266940796,"results":"45","hashOfConfig":"33"},{"size":1711,"mtime":1610402758870,"results":"46","hashOfConfig":"33"},{"size":511,"mtime":1610402681806,"results":"47","hashOfConfig":"33"},{"size":549,"mtime":1610387506009,"results":"48","hashOfConfig":"33"},{"size":782,"mtime":1610390275911,"results":"49","hashOfConfig":"33"},{"size":2868,"mtime":1614116156970,"results":"50","hashOfConfig":"33"},{"size":14908,"mtime":1614147071652,"results":"51","hashOfConfig":"33"},{"size":767,"mtime":1611217044721,"results":"52","hashOfConfig":"33"},{"size":200,"mtime":1610517578412,"results":"53","hashOfConfig":"33"},{"size":669,"mtime":1610602823119,"results":"54","hashOfConfig":"33"},{"size":271,"mtime":1610687892583,"results":"55","hashOfConfig":"33"},{"size":1459,"mtime":1613712261259,"results":"56","hashOfConfig":"33"},{"size":611,"mtime":1610517554366,"results":"57","hashOfConfig":"33"},{"size":1257,"mtime":1612328381358,"results":"58","hashOfConfig":"33"},{"size":1321,"mtime":1610517594598,"results":"59","hashOfConfig":"33"},{"size":1000,"mtime":1613266102891,"results":"60","hashOfConfig":"33"},{"size":901,"mtime":1613766193544,"results":"61","hashOfConfig":"33"},{"size":1003,"mtime":1613629547033,"results":"62","hashOfConfig":"33"},{"size":1645,"mtime":1613465539505,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ks3lcs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["134","135"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["136","137","138","139","140"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getCurrentTournaments\n} from './utils/tournaments'\n\nimport {\n  getLiveMatches\n} from './utils/live'\n\nimport {\n  getDailySchedule,\n  getDailyResults\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [ tournaments, setTournaments ] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n\n  const [ searchQuery, setSearchQuery ] = useState(\"\")\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n\n    const tournamentData = localStorage.getItem('tournaments')\n\n    if (totalTournaments === 0 && tournamentData === null) {\n\n      const gatherActiveTournaments = async () => {\n        console.log('apirequest 1')\n        const tournamentData = await getCurrentTournaments()\n        setTournaments(tournamentData.tournaments)\n        console.log(tournamentData.tournaments)\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData.tournaments))\n        setTournamentsLoaded(true)\n      }\n      gatherActiveTournaments()\n\n    } else {\n\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (tournamentsLoaded) {\n      console.log('apirequest 2')\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n        const dailyScheduleData = await getDailySchedule(currentYear, currentMonth, currentDay)\n        console.log(dailyScheduleData.sport_events)\n        if (dailyScheduleData.length === 0) {\n          setDailySchedule(dailyScheduleData)\n        } else {\n          setDailySchedule(dailyScheduleData.sport_events)\n        }\n      }\n      gatherDailySchedule(year, month, day)\n    }\n\n  }, [tournaments])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 3')\n      const gatherDailyResults = async (currentYear, currentMonth, currentDay) => {\n        const dailyResultsData = await getDailyResults(currentYear, currentMonth, currentDay)\n        console.log(dailyResultsData.results)\n        setDailyResults(dailyResultsData.results)\n      }\n\n      gatherDailyResults(year, month, day)\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0) {\n      console.log('apirequest 4')\n      const gatherLiveMatches = async () => {\n        const liveMatchesData = await getLiveMatches()\n        console.log(liveMatchesData.summaries)\n        if (liveMatchesData.summaries.length === 0) {\n          setLoaded(true)\n        } else {\n          setLiveMatches(liveMatchesData.summaries)\n          setLoaded(true)\n        }\n      }\n      const timeOut = setTimeout(() => gatherLiveMatches(), 1001)\n      return () => clearTimeout(timeOut)\n    }\n    \n  }, [dailySchedule])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["141"],"import React, { useState, useEffect } from 'react'\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport Players from '../components/Players'\n\nimport './Rankings.css'\n\nimport {\n  playerRankings,\n  playerRaceRankings,\n  doublesTeamRankings,\n  doublesTeamRaceRankings\n} from '../utils/rankings'\n\nexport default function Rankings(props) {\n\n  const [loaded, setLoaded] = useState(false)\n\n  const [event, setEvent] = useState('ATP')\n  const [discipline, setDiscipline] = useState('Singles')\n  const [viewRace, setViewRace] = useState(false)\n\n  const [maleSinglesRankings, setMaleSinglesRankings] = useState(null)\n  const [femaleSinglesRankings, setFemaleSinglesRankings] = useState(null)\n  const [maleDoublesRankings, setMaleDoublesRankings] = useState(null)\n  const [femaleDoublesRankings, setFemaleDoublesRankings] = useState(null)\n\n  const [maleSinglesRaceRankings, setMaleSinglesRaceRankings] = useState(null)\n  const [femaleSinglesRaceRankings, setFemaleSinglesRaceRankings] = useState(null)\n  const [maleDoublesRaceRankings, setMaleDoublesRaceRankings] = useState(null)\n  const [femaleDoublesRaceRankings, setFemaleDoublesRaceRankings] = useState(null)\n\n\n  const [ rankingCategory, setRankingCategory ] = useState(false)\n\n  useEffect(() => {\n    if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(femaleSinglesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(femaleSinglesRaceRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(femaleDoublesRankings)\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(femaleDoublesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(maleSinglesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(maleSinglesRaceRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(maleDoublesRankings)\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(maleDoublesRaceRankings)\n    }\n  }, [loaded, event, discipline, viewRace])\n\n  \n  useEffect(() => {\n    const gatherSinglesRankings = async () => {\n      const combinedSinglesRankings = await playerRankings()\n      console.log(combinedSinglesRankings)\n      setMaleSinglesRankings(combinedSinglesRankings.rankings[1])\n      setFemaleSinglesRankings(combinedSinglesRankings.rankings[0])\n    }\n\n    gatherSinglesRankings()\n\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRankings = async () => {\n      const combinedDoublesRankings = await doublesTeamRankings()\n      setMaleDoublesRankings(combinedDoublesRankings.rankings[1])\n      setFemaleDoublesRankings(combinedDoublesRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherDoublesRankings(), 1001)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherSinglesRaceRankings = async () => {\n      const combinedSinglesRaceRankings = await playerRaceRankings()\n      setMaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[1])\n      setFemaleSinglesRaceRankings(combinedSinglesRaceRankings.rankings[0])\n    }\n    const timeOut = setTimeout(() => gatherSinglesRaceRankings(), 2002)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  useEffect(() => {\n    const gatherDoublesRaceRankings = async () => {\n      const combinedDoublesRaceRankings = await doublesTeamRaceRankings()\n      setMaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[1])\n      setFemaleDoublesRaceRankings(combinedDoublesRaceRankings.rankings[0])\n      setLoaded(true)\n    }\n    const timeOut = setTimeout(() => gatherDoublesRaceRankings(), 3003)\n    return () => clearTimeout(timeOut)\n  }, [])\n\n  const handleEventSwitch = () => {\n    if (event === \"WTA\") {\n      setEvent(\"ATP\")\n    } else if (event === \"ATP\") {\n      setEvent(\"WTA\")\n    }\n  }\n\n  const handleDisciplineSwitch = () => {\n    if (discipline === \"Singles\") {\n      setDiscipline(\"Doubles\")\n    } else if (discipline === \"Doubles\") {\n      setDiscipline(\"Singles\")\n    }\n  }\n\n  const handleRaceSwitch = () => {\n    setViewRace(!viewRace)\n  }\n  \n  return (\n    <>\n\n      {!loaded ?\n        \n        <Loader />\n\n        :\n      \n        <>\n\n          <div className=\"rankings-container\">\n\n            <p className=\"rankings-container-title\">{event} {discipline} {viewRace ? \"Race\" : \"\"} Rankings</p>\n\n            <div className=\"rankings-toggle-view-container\">\n\n              <div className=\"switch-container\" id=\"tour-view-switch-container\">\n\n                <p className=\"tour-view-switch-container-copy\">ATP</p>\n\n                <Switch onChange={handleEventSwitch} checked={event === \"WTA\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"tour-view-switch-container-copy\">WTA</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">SINGLES</p>\n\n                <Switch onChange={handleDisciplineSwitch} checked={discipline === \"Doubles\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">DOUBLES</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">ROLLING</p>\n\n                <Switch onChange={handleRaceSwitch} checked={viewRace ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">RACE</p>\n\n              </div>\n\n            </div>\n\n            <Players rankingCategory={rankingCategory} event={event} discipline={discipline} viewRace={viewRace} />\n\n\n          </div>\n          \n        </>\n\n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["142","143","144","145"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Loader from '../components/Loader'\nimport TournamentCard from '../components/TournamentCard'\nimport ResultsContainer from '../components/ResultsContainer'\nimport PlayerCard from '../components/PlayerCard'\n\nimport './PlayerDetail.css'\n\nimport {\n  getPlayer,\n  getPlayerResults,\n  getPlayerSchedule\n} from \"../utils/players\"\n\nexport default function PlayerDetail(props) {\n\n  const [ dataLoaded, setDataLoadedm] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [view, setView] = useState('Player Results')\n\n  const [playerData, setPlayerData] = useState(null)\n  const [playerResults, setPlayerResults] = useState(null)\n  const [playerSchedule, setPlayerSchedule] = useState(false)\n\n  const currentYear = new Date().getFullYear()\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const currentPlayer = localStorage.getItem('currentPlayer')\n    const playerScheduleData = localStorage.getItem('playerSchedule')\n    const playerResultsData = localStorage.getItem('playerResults')\n    const playerDetails = localStorage.getItem('playerDetails')\n\n    if (playerDetails === undefined || playerDetails === null || playerDetails.length <= 2) {\n\n      console.log('gathering player data via API Call 1')\n\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerData = async (currentPlayerID) => {\n        const playerInfo = await getPlayer(currentPlayerID)\n        console.log(playerInfo)\n        localStorage.setItem('playerDetails', JSON.stringify(playerInfo))\n        setPlayerData(playerInfo)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerData(currentPlayerID), 3001)\n      return () => clearTimeout(timeOut)\n\n    } else {\n\n      console.log(\n        'gathering Player Data from LocalStorage'\n      )\n\n      setPlayerData(JSON.parse(playerDetails))\n      setPlayerResults(JSON.parse(playerResultsData))\n      setPlayerSchedule(JSON.parse(playerScheduleData))\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerResults = async (currentPlayerID) => {\n        const playerResultsInfo = await getPlayerResults(currentPlayerID)\n        localStorage.setItem('playerResults', JSON.stringify(playerResults))\n        setPlayerResults(playerResultsInfo)\n      }\n\n      gatherPlayerResults(currentPlayerID)\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    if (playerData !== null && playerData !== undefined && Object.keys(playerData).length !== 0) {\n\n      const currentPlayer = localStorage.getItem('currentPlayer')\n      const currentPlayerID = JSON.parse(currentPlayer).player.id\n\n      const gatherPlayerSchedule = async (currentPlayerID) => {\n        const playerScheduleInfo = await getPlayerSchedule(currentPlayerID)\n        localStorage.setItem('playerSchedule', JSON.stringify(playerScheduleInfo))\n        setPlayerSchedule(playerScheduleInfo)\n        setDataLoadedm(true)\n      }\n\n      const timeOut = setTimeout(() => gatherPlayerSchedule(currentPlayerID), 1001)\n      return () => clearTimeout(timeOut)\n\n    }\n\n  }, [playerData])\n\n  useEffect(() => {\n\n    console.log(playerData)\n    console.log('PlayerData and PlayerSchedule/Results are being checked')\n\n    if (dataLoaded) {\n\n      console.log('data has been loaded and component will mount')\n      setLoaded(true)\n    }\n  }, [dataLoaded])\n\n  const scheduleItems = playerSchedule && playerSchedule?.schedule.map((tournament, index) => {\n\n    const startDate = new Date(tournament.season.start_date)\n    const endDate = new Date(tournament.season.end_date)\n\n    return (\n\n    <TournamentCard\n      tournament={tournament}\n      index={index}\n      key={tournament.id}\n      startDate={startDate}\n      endDate={endDate}\n    />\n      \n  )})\n\n  console.log(playerResults)\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Player Schedule\":\n        setView(\"Player Schedule\")\n        break;\n      case \"Player Results\":\n        setView(\"Player Results\")\n        break;\n    }\n  }\n\n  const handleReturnToTournament = (e) => {\n    localStorage.removeItem('currentPlayer')\n    localStorage.removeItem('playerSchedule')\n    localStorage.removeItem('playerResults')\n    localStorage.removeItem('playerDetails')\n    history.push('/rankings')\n  }\n  \n  return (\n    \n    <>\n\n      { !loaded ? \n      \n        <Loader />\n\n        :\n\n        <>\n          \n          <div className=\"player-detail-container\">\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" onClick={(e) => handleReturnToTournament(e)} >    BACK</i>\n\n            <PlayerCard playerData={playerData} key={playerData.player.id} />\n            \n            <div className=\"player-views-container\">\n\n              <button className=\"player-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Player Results\")}> Player Results</button>\n\n              <button className=\"player-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Player Schedule\")} > Player Schedule</button>\n\n            </div>\n\n              {view === \"Player Results\" ? \n              \n                <div className=\"player-results-container\">\n\n                  <ResultsContainer playerResults={playerResults} />\n\n                </div>\n              \n                :\n                \n                <div className=\"player-schedule-container\">\n\n                  { scheduleItems }\n\n                </div>\n              \n              }\n              \n            </div>\n          \n        </>\n      \n      }\n\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["146","147","148","149","150","151","152","153"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["154"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["155"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n    \n    const parseTournamentInfo = (tournament) => {\n\n      const splitTournamentName = currentTournament.name.split(\",\")\n      const isolatedTournamentNameAndTier = splitTournamentName[0].split(\" \")\n      const isolatedTournamentName = isolatedTournamentNameAndTier.slice(1)\n    \n      if (tournamentName.includes(\"doubles\")) {\n        return\n      } else if (tournament.name.includes(\"WTA\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (tournament.name.toLowerCase().includes(\"challenger\")) {\n        const isolatedChallengerTournamentName = isolatedTournamentName.join(\" \").slice(11)\n        setTournamentName(isolatedChallengerTournamentName)\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ATP\")) {\n        setTournamentName(isolatedTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (tournament.name.includes(\"ITF\")) {\n        const isolatedITFTournamentName = isolatedTournamentName.slice(0, -1)\n        setTournamentName(isolatedITFTournamentName.join(\" \"))\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentName(isolatedTournamentNameAndTier.slice(0, 2).join(\" \"))\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n    parseTournamentInfo(currentTournament)\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n        <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["156","157","158"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./MatchCard.css\";\n\nimport {\n  getMatch,\n} from '../utils/matches'\n\nexport default function MatchCard(props) {\n  const { matchData, key } = props;\n  const history = useHistory();\n\n  console.log(matchData)\n\n  const [match, setMatch] = useState(null)\n\n  const [matchInfo, setMatchInfo] = useState({\n\n    tournamentEvent: matchData.sport_event.tournament.gender,\n    tournamentDiscipline: matchData.sport_event.sport_event_type,\n    tournamentRound: matchData.sport_event.tournament_round.name,\n\n    matchFormat: matchData.sport_event_conditions.match_mode,\n    matchCourt: matchData.sport_event_conditions.venue.name,\n    matchStatus: matchData.sport_event_status.status,\n\n    homeCompetitorID: matchData.sport_event.competitors[0].id,\n    homeCompetitor: matchData.sport_event.competitors[0].name,\n\n    awayCompetitorID: matchData.sport_event.competitors[1].id,\n    awayCompetitor: matchData.sport_event.competitors[1].name\n\n  })\n\n  const [scoreInfo, setScoreInfo] = useState({\n\n    setOneScoreHome: \"\",\n    setOneScoreAway: \"\",\n    setTwoScoreHome: \"\",\n    setTwoScoreAway: \"\",\n    setThreeScoreHome: \"\",\n    setThreeScoreAway: \"\",\n    setFourScoreHome: \"\",\n    setFourScoreAway: \"\",\n    setFiveScoreHome: \"\",\n    setFiveScoreAway: \"\",\n    serviceScoreHome: \"\",\n    serviceScoreAway: \"\",\n    server: \"\"\n\n  })\n\n  useEffect(() => {\n\n    const currentMatch = match\n    const currentMatchData = matchData\n    \n    if (currentMatch === null) {\n      console.log('setMatchData')\n      setMatch(currentMatchData)\n    } \n    \n  }, [])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchInfo.matchStatus === \"live\") {\n\n        const currentMatchID = matchData.sport_event.id\n\n        console.log('live data')\n         console.log(matchData)\n         const fetchMatch = async (matchID) => {\n           const data = await getMatch(matchID)\n           console.log(\"interval for fetchMatch within MatchCard\")\n           setMatch(data)\n         }\n         fetchMatch(currentMatchID)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [scoreInfo])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const parseTournamentRound = (tournamentRound) => {\n        switch (tournamentRound) {\n          case \"round_of_128\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 128\"\n            }));\n            break;\n          case \"round_of_64\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 64\"\n            }));\n            break;\n          case \"round_of_32\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 32\"\n            }));\n            break;\n          case \"round_of_16\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 16\"\n            }));\n            break;\n          case \"round_of_8\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"quarterfinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"round_of_4\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"semifinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"round_of_2\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          case \"final\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentRound(\n        match.sport_event.tournament_round.name\n      );\n\n      const parseTournamentDiscipline = (tournamentType) => {\n        switch (tournamentType) {\n          case \"singles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"SINGLES\"\n            }));\n            break;\n          case \"doubles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"DOUBLES\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentDiscipline(\n        match.sport_event.sport_event_type\n      );\n\n      const parseTournamentGender = (tournamentGender) => {\n        switch (tournamentGender) {\n          case \"men\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MEN'S\"\n            }));\n            break;\n          case \"women\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"WOMEN'S\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentGender(\n        match.sport_event.tournament.gender\n      );\n\n      const parseMatchStatus = (props) => {\n        switch (props) {\n          case \"not_started\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Not Started\"\n            }));\n            break;\n          case \"match_about_to_start\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Match To Start\"\n            }));\n            break;\n          case \"live\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Live\"\n            }));\n            break;\n          case \"closed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"ended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"interrupted\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Interrupted\"\n            }));\n            break;\n          case \"suspended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Suspended\"\n            }));\n            break;\n          case \"cancelled\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Cancelled\"\n            }));\n            break;\n          case \"delayed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Delayed\"\n            }));\n            break;\n          case \"abandoned\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Abandoned\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n\n      parseMatchStatus(\n        matchData.sport_event_status.status\n      );\n\n    }\n  }, [match])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const handleHomeScore = () => {\n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.home_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: \"AD\"\n            }))\n\n          } else {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: match.sport_event_status.game_state.home_score\n            }))\n\n          }\n\n\n        }\n      }\n\n      const handleAwayScore = () => {\n        \n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.away_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: \"AD\"\n            }))\n\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: match.sport_event_status.game_state.away_score\n            }))\n          }\n        }\n      }\n\n      const generateSets = (formatValue) => {\n        \n        if ((matchInfo.matchStatus === \"live\" || matchInfo.matchStatus === \"ended\" || matchInfo.matchStatus === \"closed\" || matchInfo.matchStatus === \"interrupted\") && match.sport_event_status.period_scores !== undefined) {\n\n          const sets = [\"setOneScore\", \"setTwoScore\", \"setThreeScore\", \"setFourScore\", \"setFiveScore\"]\n\n          for (let i = 0; i < formatValue; i++) {\n\n            if (match.sport_event_status.period_scores[i] !== undefined) {\n          \n              let homeScore = sets[i] + \"Home\"\n              let awayScore = sets[i] + \"Away\"\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                [homeScore]: match.sport_event_status.period_scores[i].home_score,\n                [awayScore]: match.sport_event_status.period_scores[i].away_score\n              }))\n            }\n          }\n        }\n      }\n\n      const handleServer = () => {\n        if (matchInfo.matchStatus === \"live\" && match.sport_event_status.game_state.serving !== undefined) {\n          setScoreInfo(prevState => ({\n            ...prevState,\n            server: match.sport_event_status.game_state.serving\n          }))\n        } else if (matchInfo.matchStatus === \"closed\" && match.sport_event_status.winner_id !== undefined) {\n          if (match.sport_event_status.winner_id === matchInfo.homeCompetitorID) {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: \"homeWinner\"\n            }))\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: \"awayWinner\"\n            }))\n          }\n        }\n      }\n        \n      handleHomeScore()\n      handleAwayScore()\n      handleServer()\n\n      if (matchInfo.matchFormat === \"bo3\") {\n\n        let formatValue = 3\n\n        generateSets(formatValue, match)\n\n      } else if (matchInfo.matchFormat === \"bo5\") {\n\n        let formatValue = 5\n\n        generateSets(formatValue, match)\n\n      }\n\n    }\n  }, [match, matchInfo])\n\n  const handleMatch = (matchInfo, scoreInfo, matchID) => {\n    localStorage.setItem(\"currentMatch\", JSON.stringify(match))\n    history.push(`/match/${matchID}`);\n  };\n\n  return (\n    <div\n      className=\"match-card-container\"\n      id={key}\n      key={key}\n      onClick={(e) => handleMatch(matchInfo, scoreInfo, matchData.sport_event.id)}\n    >\n      <div className=\"match-card-header-container\">\n\n        <p className=\"match-card-title\">{`${matchInfo.tournamentEvent} ${matchInfo.tournamentDiscipline}`}</p>\n\n        <p className=\"match-court\">{`${matchInfo.matchCourt}`}</p>\n\n      </div>\n\n      <div className=\"match-container\">\n\n        <div className=\"match-info-container\">\n\n          <p className=\"match-round\">{`${matchInfo.tournamentRound}`}</p>\n\n          <p className=\"match-status\">{`${matchInfo.matchStatus}`}</p>\n\n        </div>\n\n        <div className=\"competitor-container\" id=\"home\">\n\n          <p className=\"competitor-name\">{`${matchInfo.homeCompetitor}`}</p>\n\n          {scoreInfo.server === \"home\" ? \n          \n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server home\"></i>\n            \n          :\n            \n          <>\n            \n          {\n            scoreInfo.server === \"homeWinner\" ?\n            \n            <i class=\"fas fa-check service-icon\"></i>\n              \n          :\n          \n            <div className=\"service-icon\" id=\"receiver home\" />\n\n          }\n          </>\n          \n          }\n\n          <p className=\"service-score home\">{scoreInfo.serviceScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-one\">{scoreInfo.setOneScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-two\">{scoreInfo.setTwoScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-three\">{scoreInfo.setThreeScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-four\">{scoreInfo.setFourScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-five\">{scoreInfo.setFiveScoreHome}</p>\n\n        </div>\n\n        <div className=\"set-labels-container\">\n\n          <p className=\"set-label\" id=\"set-one\">1</p>\n\n          <p className=\"set-label\" id=\"set-two\">2</p>\n\n          <p className=\"set-label\" id=\"set-three\">3</p>\n\n          <p className=\"set-label\" id=\"set-four\">4</p>\n\n          <p className=\"set-label\" id=\"set-five\">5</p>\n\n        </div>\n        \n\n        <div className=\"competitor-container\" id=\"away\">\n\n          <p className=\"competitor-name\">{`${matchInfo.awayCompetitor}`}</p>\n\n          {scoreInfo.server === \"away\" ?\n\n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server away\"></i>\n            \n            :\n          \n            <>\n            \n            {\n              scoreInfo.server === \"awayWinner\" ?\n              \n              <i class=\"fas fa-check service-icon\"></i>\n                \n            :\n            \n              <div className=\"service-icon\" id=\"receiver away\" />\n\n            }\n            </>\n\n          }\n\n          <p className=\"service-score away\">{scoreInfo.serviceScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-one\">{scoreInfo.setOneScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-two\">{scoreInfo.setTwoScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-three\">{scoreInfo.setThreeScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-four\">{scoreInfo.setFourScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-five\">{scoreInfo.setFiveScoreAway}</p>\n\n        </div>\n\n      </div>\n\n      <div className=\"match-stats-container\">\n        VIEW MATCH STATS\n      </div>\n      \n    </div>\n  );\n}\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",["159"],"import React from 'react'\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport './OrderOfPlay.css'\n\nexport default function OrderOfPlay(props) {\n\n  const { currentTournamentSchedule } = props\n\n  const schedule = currentTournamentSchedule.map((match) => {\n\n    let homeCompetitorName = match.competitors[0].name\n    let awayCompetitorName = match.competitors[1].name\n    let homeCompetitorSeed = '[' + match.competitors[0].seed + ']'\n    let awayCompetitorSeed = '[' + match.competitors[1].seed + ']'\n    let homeCompetitorCountry = '(' + match.competitors[0].country_code + ')'\n    let awayCompetitorCountry = '(' + match.competitors[1].country_code + ')'\n    \n    return (\n      <div className=\"upcoming-match-container\" key={match.id}>\n        <p className=\"competitors\">{match.competitors[0].seed !== undefined && match.competitors[0].seed !== null ? homeCompetitorSeed : ``}{` `}{homeCompetitorName}{` `}{homeCompetitorCountry !== undefined && homeCompetitorCountry !== null && match.sport_event_type !== \"doubles\" ? homeCompetitorCountry : `` }{` vs. `}{match.competitors[1].seed !== undefined && match.competitors[1].seed !== null ? awayCompetitorSeed : ``}{` `}{awayCompetitorName}{` `}{awayCompetitorCountry !== undefined && awayCompetitorCountry !== null && match.sport_event_type !== \"doubles\" ? awayCompetitorCountry : `` }</p>\n      </div>\n    )})\n   \n  return (\n    <div className=\"order-of-play-container\">\n      {schedule}\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx",["160","161"],"import React, { useState, useEffect } from 'react'\n\nimport Loader from './Loader'\nimport Results from './Results'\n\n\nexport default function ResultsContainer (props) {\n\n  const { playerResults } = props\n\n  const [uniqueTournaments, setUniqueTournaments] = useState(null)\n\n  const currentYear = new Date().getFullYear()\n  \n  console.log(currentYear)\n  console.log(playerResults)\n  console.log(uniqueTournaments)\n\n  useEffect(() => {\n\n    if (playerResults) {\n\n      console.log(\"generating unique tournaments\")\n\n      const generateUniqueTournaments = () => {\n\n        console.log('ahead of the loop')\n\n        let tournaments = []\n        let tournamentsData = []\n\n        for (let i = 0; i < playerResults.results.length; i++) {\n\n          console.log(`in the loop ${i} time`)\n\n          if (!tournaments.includes(playerResults.results[i].sport_event.tournament.id) && (playerResults.results[i].sport_event.season.year === currentYear.toString())) {\n            console.log('pushing into array')\n            tournaments.push(playerResults.results[i].sport_event.tournament.id)\n            tournamentsData.push(playerResults.results[i])\n          }\n        }\n        return tournamentsData\n      }\n\n\n      const uniqueTournamentsArray = generateUniqueTournaments()\n\n      setUniqueTournaments(uniqueTournamentsArray)\n    }\n\n  }, [])\n  \n    return (\n     \n      <>\n        \n        {uniqueTournaments === null ?\n\n          <>\n          </>\n          \n        :\n        \n          <>\n      \n            <Results uniqueTournaments={uniqueTournaments} playerResults={playerResults} />\n            \n          </>\n          \n        }\n\n    </>\n  )\n\n}\n\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":28,"column":11,"nodeType":"168","messageId":"169","endLine":28,"endColumn":22},{"ruleId":"166","severity":1,"message":"170","line":28,"column":24,"nodeType":"168","messageId":"169","endLine":28,"endColumn":38},{"ruleId":"171","severity":1,"message":"172","line":67,"column":6,"nodeType":"173","endLine":67,"endColumn":8,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":89,"column":6,"nodeType":"173","endLine":89,"endColumn":19,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"177","line":108,"column":6,"nodeType":"173","endLine":108,"endColumn":21,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"179","line":55,"column":6,"nodeType":"173","endLine":55,"endColumn":43,"suggestions":"180"},{"ruleId":"166","severity":1,"message":"181","line":27,"column":9,"nodeType":"168","messageId":"169","endLine":27,"endColumn":20},{"ruleId":"171","severity":1,"message":"182","line":81,"column":6,"nodeType":"173","endLine":81,"endColumn":18,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"184","line":114,"column":6,"nodeType":"173","endLine":114,"endColumn":18,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":136,"column":5,"nodeType":"188","messageId":"189","endLine":143,"endColumn":6},{"ruleId":"166","severity":1,"message":"190","line":47,"column":66,"nodeType":"168","messageId":"169","endLine":47,"endColumn":77},{"ruleId":"171","severity":1,"message":"191","line":62,"column":6,"nodeType":"173","endLine":62,"endColumn":8,"suggestions":"192"},{"ruleId":"171","severity":1,"message":"193","line":103,"column":6,"nodeType":"173","endLine":103,"endColumn":38,"suggestions":"194"},{"ruleId":"171","severity":1,"message":"195","line":113,"column":6,"nodeType":"173","endLine":113,"endColumn":22,"suggestions":"196"},{"ruleId":"171","severity":1,"message":"197","line":131,"column":6,"nodeType":"173","endLine":131,"endColumn":38,"suggestions":"198"},{"ruleId":"171","severity":1,"message":"199","line":145,"column":6,"nodeType":"173","endLine":145,"endColumn":39,"suggestions":"200"},{"ruleId":"171","severity":1,"message":"201","line":175,"column":6,"nodeType":"173","endLine":175,"endColumn":47,"suggestions":"202"},{"ruleId":"186","severity":1,"message":"187","line":184,"column":5,"nodeType":"188","messageId":"189","endLine":194,"endColumn":6},{"ruleId":"171","severity":1,"message":"203","line":81,"column":6,"nodeType":"173","endLine":81,"endColumn":14,"suggestions":"204"},{"ruleId":"171","severity":1,"message":"205","line":46,"column":6,"nodeType":"173","endLine":46,"endColumn":8,"suggestions":"206"},{"ruleId":"171","severity":1,"message":"207","line":64,"column":6,"nodeType":"173","endLine":64,"endColumn":8,"suggestions":"208"},{"ruleId":"171","severity":1,"message":"209","line":89,"column":6,"nodeType":"173","endLine":89,"endColumn":17,"suggestions":"210"},{"ruleId":"171","severity":1,"message":"211","line":299,"column":6,"nodeType":"173","endLine":299,"endColumn":13,"suggestions":"212"},{"ruleId":"166","severity":1,"message":"213","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":24},{"ruleId":"166","severity":1,"message":"214","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"171","severity":1,"message":"215","line":51,"column":6,"nodeType":"173","endLine":51,"endColumn":8,"suggestions":"216"},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'searchQuery' is assigned a value but never used.","Identifier","unusedVar","'setSearchQuery' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tournaments.length'. Either include it or remove the dependency array.","ArrayExpression",["219"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', 'currentYear', and 'tournamentsLoaded'. Either include them or remove the dependency array.",["220"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["222"],"'currentYear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'playerResults'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["224"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'currentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'tournaments'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament' and 'tournamentName'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'tournamentGender' and 'tournaments'. Either include them or remove the dependency array.",["227"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament.id', 'currentSinglesTournament.id', and 'dailySchedule'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament.id', 'currentSinglesTournament.id', 'dailyResults', and 'dailySchedule.length'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament.id', 'currentSinglesTournament.id', 'dailySchedule.length', and 'liveMatches'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'matchData.matchStatus' and 'matchData.sport_event.id'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'tournament' and 'tournamentName'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'match' and 'matchData'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'matchData.sport_event_status.status'. Either include it or remove the dependency array.",["235"],"'ReactCountryFlag' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [tournaments.length]",{"range":"273","text":"274"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"275","text":"276"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, dailySchedule]",{"range":"277","text":"278"},"Update the dependencies array to be: [loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"279","text":"280"},"Update the dependencies array to be: [playerData, playerResults]",{"range":"281","text":"282"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"283","text":"284"},"Update the dependencies array to be: [params.id, tournaments]",{"range":"285","text":"286"},"Update the dependencies array to be: [currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",{"range":"287","text":"288"},"Update the dependencies array to be: [tournamentGender, tournamentName, tournaments]",{"range":"289","text":"290"},"Update the dependencies array to be: [currentDoublesTournament.id, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",{"range":"291","text":"292"},"Update the dependencies array to be: [currentDoublesTournament.id, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",{"range":"293","text":"294"},"Update the dependencies array to be: [currentDoublesTournament.id, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",{"range":"295","text":"296"},"Update the dependencies array to be: [loaded, matchData.matchStatus, matchData.sport_event.id]",{"range":"297","text":"298"},"Update the dependencies array to be: [tournament, tournamentName]",{"range":"299","text":"300"},"Update the dependencies array to be: [match, matchData]",{"range":"301","text":"302"},"Update the dependencies array to be: [matchData, matchInfo.matchStatus, scoreInfo]",{"range":"303","text":"304"},"Update the dependencies array to be: [match, matchData.sport_event_status.status]",{"range":"305","text":"306"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"307","text":"308"},[1886,1888],"[tournaments.length]",[2538,2551],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[3090,3105],"[currentDay, currentMonth, currentYear, dailySchedule]",[2418,2455],"[loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[2627,2639],"[playerData, playerResults]",[3604,3616],"[dataLoaded, playerData]",[2654,2656],"[params.id, tournaments]",[5009,5041],"[currentSinglesTournament, currentSinglesTournamentLoaded, tournamentName]",[5465,5481],"[tournamentGender, tournamentName, tournaments]",[6091,6123],"[currentDoublesTournament.id, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",[6947,6980],"[currentDoublesTournament.id, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",[8391,8432],"[currentDoublesTournament.id, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",[2246,2254],"[loaded, matchData.matchStatus, matchData.sport_event.id]",[2213,2215],"[tournament, tournamentName]",[1630,1632],"[match, matchData]",[2228,2239],"[matchData, matchInfo.matchStatus, scoreInfo]",[7790,7797],"[match, matchData.sport_event_status.status]",[1328,1330],"[currentYear, playerResults]"]