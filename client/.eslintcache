[{"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js":"1","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js":"2","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js":"3","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js":"4","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx":"5","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx":"6","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx":"7","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx":"8","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx":"9","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx":"10","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js":"11","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx":"12","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx":"13","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx":"14","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx":"15","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx":"16","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx":"17","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx":"18","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx":"19","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx":"20","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js":"21","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js":"22","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx":"23","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx":"24","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js":"25","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx":"26","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js":"27","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx":"28","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx":"29","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx":"30","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx":"31","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx":"32","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx":"33","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx":"34","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx":"35","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rapidAPI-config.js":"36","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/country-converter.js":"37","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/RankingDetailCard.jsx":"38"},{"size":589,"mtime":1610168112225,"results":"39","hashOfConfig":"40"},{"size":5563,"mtime":1624162349043,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1610088373592,"results":"42","hashOfConfig":"40"},{"size":1375,"mtime":1624130641199,"results":"43","hashOfConfig":"40"},{"size":7393,"mtime":1616626597972,"results":"44","hashOfConfig":"40"},{"size":6735,"mtime":1624160907025,"results":"45","hashOfConfig":"40"},{"size":1612,"mtime":1624130641191,"results":"46","hashOfConfig":"40"},{"size":6588,"mtime":1624241309230,"results":"47","hashOfConfig":"40"},{"size":14643,"mtime":1624130641193,"results":"48","hashOfConfig":"40"},{"size":9879,"mtime":1616712522301,"results":"49","hashOfConfig":"40"},{"size":353,"mtime":1624130641196,"results":"50","hashOfConfig":"40"},{"size":1486,"mtime":1616471701047,"results":"51","hashOfConfig":"40"},{"size":438,"mtime":1616362426753,"results":"52","hashOfConfig":"40"},{"size":1881,"mtime":1616365380313,"results":"53","hashOfConfig":"40"},{"size":511,"mtime":1610402681806,"results":"54","hashOfConfig":"40"},{"size":549,"mtime":1610387506009,"results":"55","hashOfConfig":"40"},{"size":782,"mtime":1610390275911,"results":"56","hashOfConfig":"40"},{"size":2595,"mtime":1624130641189,"results":"57","hashOfConfig":"40"},{"size":18770,"mtime":1616298076617,"results":"58","hashOfConfig":"40"},{"size":767,"mtime":1615137524649,"results":"59","hashOfConfig":"40"},{"size":200,"mtime":1610517578412,"results":"60","hashOfConfig":"40"},{"size":929,"mtime":1624130641197,"results":"61","hashOfConfig":"40"},{"size":271,"mtime":1610687892583,"results":"62","hashOfConfig":"40"},{"size":6306,"mtime":1616479213618,"results":"63","hashOfConfig":"40"},{"size":1907,"mtime":1624130641198,"results":"64","hashOfConfig":"40"},{"size":3106,"mtime":1624241214735,"results":"65","hashOfConfig":"40"},{"size":1324,"mtime":1622828957548,"results":"66","hashOfConfig":"40"},{"size":1875,"mtime":1624161459889,"results":"67","hashOfConfig":"40"},{"size":901,"mtime":1613766193544,"results":"68","hashOfConfig":"40"},{"size":1003,"mtime":1613629547033,"results":"69","hashOfConfig":"40"},{"size":1645,"mtime":1613465539505,"results":"70","hashOfConfig":"40"},{"size":4768,"mtime":1616021734575,"results":"71","hashOfConfig":"40"},{"size":1053,"mtime":1616544251397,"results":"72","hashOfConfig":"40"},{"size":174,"mtime":1616260120177,"results":"73","hashOfConfig":"40"},{"size":174,"mtime":1616260120177,"results":"74","hashOfConfig":"40"},{"size":409,"mtime":1624130641198,"results":"75","hashOfConfig":"40"},{"size":9896,"mtime":1624162827344,"results":"76","hashOfConfig":"40"},{"size":5444,"mtime":1624241285556,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"ks3lcs",{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/index.js",[],["166","167"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/App.js",["168","169","170","171","172","173"],"import React, { useState, useEffect } from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport Layout from './components/shared/Layout'\nimport Loader from './components/Loader'\n\nimport {\n  getTournamentsRapidAPI\n} from './utils/tournaments'\n\nimport {\n  getDailyMatchesRapidAPI,\n  getDailyResultsRapidAPI\n} from './utils/matches'\n\nfunction App () {\n\n// API Data\n  const [tournaments, setTournaments] = useState([])\n  const [ dailySchedule, setDailySchedule ] = useState([])\n  const [ dailyResults, setDailyResults ] = useState([])\n  const [ liveMatches, setLiveMatches ] = useState([])\n \n// Switches\n  const [ tournamentsLoaded, setTournamentsLoaded ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n\n// Date\n  const today = new Date()\n  const currentMonth = String(today.getMonth() + 1).padStart(2, '0')\n  const currentDay = String(today.getDate()).padStart(2, '0')\n  const currentYear = today.getFullYear()\n  const currentDate = new Date(currentYear + \"-\" + currentMonth + \"-\" + currentDay)\n  \n  useEffect(() => {\n\n    const totalTournaments = tournaments.length\n    const oneDay = 60 * 60 * 24 * 1000\n\n    const tournamentData = localStorage.getItem('tournaments')\n    const createdAt = localStorage.getItem('createdAt')\n\n    if (totalTournaments === 0 || tournamentData === undefined || tournamentData === null || createdAt === undefined || ((today - createdAt) > (oneDay))) {\n\n      const gatherTournaments = async (currentYear) => {\n        console.log('gathering tournaments -- UseEffect # 1 + API Call #1 from RapidAPI in App.js')\n        const tournamentData = await getTournamentsRapidAPI(currentYear)\n        console.log(tournamentData)\n        setTournaments(tournamentData.sort((a,b) => (a.start_date > b.start_date) ? 1 : -1 ))\n        localStorage.setItem('tournaments', JSON.stringify(tournamentData))\n        localStorage.setItem('createdAt', today)\n        setTournamentsLoaded(true)\n      }\n      gatherTournaments(currentYear)\n\n    } else {\n\n      console.log('retrieving Tournaments from Local Storage -- UseEffect #1 in App.js')\n      console.log(JSON.parse(tournamentData))\n      setTournaments(JSON.parse(tournamentData))\n      setTournamentsLoaded(true)\n\n    }\n\n  }, [])\n\n  useEffect(() => {\n\n    const day = currentDay\n    const month = currentMonth\n    const year = currentYear\n\n    console.log(tournamentsLoaded)\n\n    if (tournamentsLoaded) {\n\n      console.log('gathering dailySchedule -- UseEffect #2 + API Call #2 from RapidAPI in App.js')\n\n      const gatherDailySchedule = async (currentYear, currentMonth, currentDay) => {\n\n        const dailyScheduleRawData = await getDailyMatchesRapidAPI(currentYear, currentMonth, currentDay)\n\n        console.log(dailyScheduleRawData)\n\n        const dailyScheduleData = []\n\n        dailyScheduleRawData.map((event) => \n        \n          dailyScheduleData.push(event.matches)\n          \n        )\n\n        console.log(dailyScheduleData.flat())\n\n        if (dailyScheduleData.length === 0) {\n\n          setDailySchedule(\"No Matches Today\")\n\n        } else {\n\n          setDailySchedule(dailyScheduleData.flat())\n        }\n      }\n      const timeOut = setTimeout(() => gatherDailySchedule(year, month, day), 1001)\n      return () => clearTimeout(timeOut)\n    }\n\n  }, [tournaments, tournamentsLoaded])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0 && dailySchedule !== \"No Matches Today\") {\n      \n      console.log('gathering dailyResults -- UseEffect #3 + FILTERING DailySchedule in App.js')\n\n      const scheduleData = dailySchedule.filter(match => match.status === \"finished\")\n\n      if (scheduleData.length > 0) {\n\n        setDailyResults(scheduleData)\n        \n        console.log(dailyResults)\n\n      } else if (scheduleData.length === 0) {\n\n        setDailyResults(\"Currently No Results\")\n        \n        console.log(dailyResults)\n\n      }\n\n    } else if (dailySchedule && dailySchedule.length !== 0 && dailySchedule === \"No Matches Today\") {\n\n      setDailyResults(\"Currently No Results\")\n\n    }\n\n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if (dailySchedule && dailySchedule.length !== 0 && dailySchedule !== \"No Matches Today\") {\n\n      console.log('gathering liveMatches -- UseEffect #4 + FILTERING DailySchedule in App.js')\n\n      const liveMatchData = dailySchedule.filter(match => match.status === \"inprogress\")\n\n      if (liveMatchData.length !== 0) {\n\n        setLiveMatches(dailySchedule.filter(match => match.status === \"inprogress\"))\n\n        console.log(liveMatches)\n\n      } else if (liveMatchData.length === 0) {\n\n        setLiveMatches(\"Currently No Live Matches\")\n        \n      }\n\n    } else if (dailySchedule && dailySchedule.length !== 0 && dailySchedule === \"No Matches Today\") {\n      \n      setLiveMatches(\"Currently No Live Matches\")\n\n    }\n    \n  }, [dailySchedule])\n\n  useEffect(() => {\n\n    if ((dailySchedule.length !== 0 || dailySchedule === \"No Matches Today\") && (dailyResults.length !== 0 || dailyResults === \"Currently No Results\") && (liveMatches.length !== 0 || liveMatches === \"No Matches Today\")) {\n\n      console.log('UseEffect #5 + Setting Loaded to True in App.js')\n\n      setLoaded(true)\n    }\n\n  }, [liveMatches])\n\n  return (\n    <div className=\"app-container\">\n\n      { loaded ?\n\n        <Layout>\n          <MainContainer tournaments={tournaments} dailySchedule={dailySchedule} dailyResults={dailyResults} liveMatches={liveMatches} currentDate={currentDate} />\n        </Layout>\n        \n        :\n      \n        <Loader />\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/reportWebVitals.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/tournaments.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Calendar.jsx",["174","175","176"],"import React, {useState, useEffect} from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Tournaments from '../components/Tournaments'\n\nimport './Calendar.css'\n\nimport {\n  getTournaments\n} from '../utils/tournaments'\n\nexport default function Calendar(props) {\n  \n  const [viewCalendar, setViewCalendar] = useState(false)\n  const [calendarTournaments, setCalendarTournaments] = useState(null)\n  const [calendarTournamentsITF, setCalendarTournamentsITF] = useState(null)\n  const [calendarTournamentData, setCalendarTournamentData] = useState(null)\n  const [filter, setFilter] = useState(\"\")\n\n  const { tournaments, currentDate, viewITF, setViewITF } = props\n\n  useEffect(() => {\n\n    if (viewCalendar) {\n\n      const getDate = (str) => {\n        const splitDate = str.split(\"/\")\n        const date = splitDate[0]+splitDate[1]+splitDate[2]\n        return date\n      }\n\n      const gatherCalendar = async () => {\n        const calendarData = await getTournaments()\n        console.log(calendarData)\n        const calendar = calendarData.tournaments.sort((a, b) => {\n          a = getDate(a.current_season.end_date); b = getDate(b.current_season.end_date); return a.localeCompare(b)\n      })\n        console.log(calendar)\n        setCalendarTournaments(calendar.filter(tournament => {\n          return (\n            ((tournament.current_season.year === \"2021\") && (tournament.type === \"singles\") && (!tournament.name.toLowerCase().includes(\"itf\")))\n          )\n        }))\n        setCalendarTournamentData(calendar.filter(tournament => {\n          return (\n            ((tournament.current_season.year === \"2021\") && (tournament.type === \"singles\") && (!tournament.name.toLowerCase().includes(\"itf\")))\n          )\n        }))\n        setCalendarTournamentsITF(calendar)\n      }\n      gatherCalendar()\n    }\n  }, [viewCalendar])\n\n  useEffect(() => {\n    if (calendarTournamentData !== undefined || calendarTournamentData !== null) {\n      if (viewCalendar && viewITF) {\n        setCalendarTournamentData(calendarTournamentsITF)\n      } else if (viewCalendar) {\n        setCalendarTournamentData(calendarTournaments)\n      }\n    }\n  }, [viewITF])\n\n  useEffect(() => {\n\n    if (filter != \"\" && viewCalendar) {\n\n      if (viewITF) {\n\n        const calendar = calendarTournamentsITF\n    \n        setCalendarTournamentData(calendar.filter((tournament) => {\n\n          const tournamentMonth = tournament.current_season.start_date.split(\"-\")[1]\n\n          return (\n            (tournamentMonth === filter)\n          )\n        }))\n      } else {\n\n        const calendar = calendarTournaments\n\n        setCalendarTournamentData(calendar.filter((tournament) => {\n\n          const tournamentMonth = tournament.current_season.start_date.split(\"-\")[1]\n\n          return (\n            (tournamentMonth === filter)\n          )\n        }))\n\n      }\n    }\n  }, [filter])\n\n  const handleSwitch = () => {\n    setViewCalendar(!viewCalendar)\n  }\n\n  const handleChange = (e) => {\n    setViewITF(!viewITF)\n  }\n\n  const handleNavigation = (month) => {\n    setFilter(month)\n  }\n\n\n  return (\n    <div className=\"calendar-container\">\n\n      <p className=\"calendar-container-title\">Tournament Calendar</p>\n\n      <div className=\"calendar-switch-container\">\n\n        <p className=\"calendar-switch-label\">Ongoing</p>\n\n        <Switch onChange={handleSwitch} checked={viewCalendar ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n        \n        <p className=\"calendar-switch-label\">Calendar</p>\n        \n      </div>\n\n      <div className=\"checkbox-container\">\n\n        <label class=\"checkbox-label\">\n          <input type=\"checkbox\"\n            className=\"checkbox-input\"\n            id=\"calendar-checkbox\"\n            name=\"viewITF\"\n            value={viewITF}\n            onChange={(e) => handleChange(e)}\n          />\n            <span class=\"checkbox-custom rectangular\"></span>\n        </label>\n        \n        <p className=\"checkbox-label-copy\"> Include ITF?</p>\n  \n      </div>\n\n      <MobileBanner />\n\n      <div class=\"calendar-navigation-container-desktop\">\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"01\")}>JAN</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"02\")}>FEB</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"03\")}>MAR</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"04\")}>APR</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"05\")}>MAY</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"06\")}>JUN</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"07\")}>JUL</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"08\")}>AUG</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"09\")}>SEP</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"10\")}>OCT</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"11\")}>NOV</p>\n\n        <p class=\"calendar-month-separator\">•</p>\n\n        <p className=\"calendar-month-copy\" onClick={(e) => handleNavigation(\"12\")}>DEC</p>\n\n      </div>\n\n      <div className=\"calendar-navigation-container-mobile\">\n        <select className=\"calendar-navigations-select-input\" defaultValue={'default'} name=\"mobile-navigation\" onChange={(e) => handleNavigation(e.target.value)}>\n          <option defaultValue=\"default\">-- Select a Month --</option>\n          <option value=\"01\" className=\"calendar-navigations-select-option\">JAN</option>\n          <option value=\"02\" className=\"calendar-navigations-select-option\">FEB</option>\n          <option value=\"03\" className=\"calendar-navigations-select-option\">MAR</option>\n          <option value=\"04\" className=\"calendar-navigations-select-option\">APR</option>\n          <option value=\"05\" className=\"calendar-navigations-select-option\">MAY</option>\n          <option value=\"06\" className=\"calendar-navigations-select-option\">JUN</option>\n          <option value=\"07\" className=\"calendar-navigations-select-option\">JUL</option>\n          <option value=\"08\" className=\"calendar-navigations-select-option\">AUG</option>\n          <option value=\"09\" className=\"calendar-navigations-select-option\">SEP</option>\n          <option value=\"10\" className=\"calendar-navigations-select-option\">OCT</option>\n          <option value=\"11\" className=\"calendar-navigations-select-option\">NOV</option>\n          <option value=\"12\" className=\"calendar-navigations-select-option\">DEC</option>\n        </select>\n      </div>\n      \n      <Tournaments tournaments={viewCalendar ? calendarTournamentData : tournaments} currentDate={currentDate} viewCalendar={viewCalendar} />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Rankings.jsx",["177"],"import React, { useState, useEffect } from 'react'\nimport Switch from \"react-switch\";\n\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Loader from '../components/Loader'\nimport Players from '../components/Players'\n\nimport './Rankings.css'\n\nimport {\n  herokuRankings\n} from '../utils/rankings'\n\nexport default function Rankings(props) {\n\n  const [loaded, setLoaded] = useState(false)\n\n  const [event, setEvent] = useState('ATP')\n  const [discipline, setDiscipline] = useState('Singles')\n  const [viewRace, setViewRace] = useState(false)\n\n  const [maleSinglesRankings, setMaleSinglesRankings] = useState(null)\n  const [femaleSinglesRankings, setFemaleSinglesRankings] = useState(null)\n  const [maleDoublesRankings, setMaleDoublesRankings] = useState(null)\n  const [femaleDoublesRankings, setFemaleDoublesRankings] = useState(null)\n\n  const [maleSinglesRaceRankings, setMaleSinglesRaceRankings] = useState(null)\n  const [femaleSinglesRaceRankings, setFemaleSinglesRaceRankings] = useState(null)\n  const [maleDoublesRaceRankings, setMaleDoublesRaceRankings] = useState(null)\n  const [femaleDoublesRaceRankings, setFemaleDoublesRaceRankings] = useState(null)\n\n  const [ rankingCategory, setRankingCategory ] = useState(false)\n\n  const [playerCount, setPlayerCount] = useState(0)\n\n  useEffect(() => {\n    if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(femaleSinglesRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"WTA\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(femaleSinglesRaceRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(femaleDoublesRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"WTA\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(femaleDoublesRaceRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === false) {\n      setRankingCategory(maleSinglesRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"ATP\" && discipline === \"Singles\" && viewRace === true) {\n      setRankingCategory(maleSinglesRaceRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === false) {\n      setRankingCategory(maleDoublesRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    } else if (loaded && event === \"ATP\" && discipline === \"Doubles\" && viewRace === true) {\n      setRankingCategory(maleDoublesRaceRankings.sort((a,b) => (parseInt(a.ranking) > parseInt(b.ranking)) ? 1 : -1 ))\n    }\n  }, [loaded, event, discipline, viewRace])\n\n  \n  useEffect(() => {\n    const gatherRankings = async () => {\n      const combinedRankingsData = await herokuRankings()\n      console.log(combinedRankingsData)\n\n      const combinedRankings = JSON.parse(combinedRankingsData[0].data)\n      console.log(combinedRankings)\n\n      const ATPRANKINGS = combinedRankings.rankings.ATPRANKINGS\n      const WTARANKINGS = combinedRankings.rankings.WTARANKINGS\n\n      console.log(ATPRANKINGS)\n      console.log(WTARANKINGS)\n\n      setMaleSinglesRankings(JSON.parse(ATPRANKINGS.ATPSINGLESRANKINGS).data.dataList)\n      setFemaleSinglesRankings(JSON.parse(WTARANKINGS.WTASINGLESRANKINGS).data.dataList)\n      setMaleSinglesRaceRankings(JSON.parse(ATPRANKINGS.ATPSINGLESRACERANKINGS).data.dataList)\n      setFemaleSinglesRaceRankings(JSON.parse(WTARANKINGS.WTASINGLESRACERANKINGS).data.dataList)\n      setMaleDoublesRankings(JSON.parse(ATPRANKINGS.ATPDOUBLESRANKINGS).data.dataList)\n      setFemaleDoublesRankings(JSON.parse(WTARANKINGS.WTADOUBLESRANKINGS).data.dataList)\n      setMaleDoublesRaceRankings(JSON.parse(ATPRANKINGS.ATPDOUBLESRACERANKINGS).data.dataList)\n      setFemaleDoublesRaceRankings(JSON.parse(WTARANKINGS.WTADOUBLESRACERANKINGS).data.dataList)\n      \n      setLoaded(true)\n    }\n\n    gatherRankings()\n\n  }, [])\n\n  const handleEventSwitch = () => {\n    if (event === \"WTA\") {\n      setPlayerCount(0)\n      setEvent(\"ATP\")\n    } else if (event === \"ATP\") {\n      setPlayerCount(0)\n      setEvent(\"WTA\")\n    }\n  }\n\n  const handleDisciplineSwitch = () => {\n    if (discipline === \"Singles\") {\n      setPlayerCount(0)\n      setDiscipline(\"Doubles\")\n    } else if (discipline === \"Doubles\") {\n      setPlayerCount(0)\n      setDiscipline(\"Singles\")\n    }\n  }\n\n  const handleRaceSwitch = () => {\n    setPlayerCount(0)\n    setViewRace(!viewRace)\n  }\n  \n  return (\n    <>\n\n      {!loaded ?\n        \n        <Loader />\n\n        :\n      \n        <>\n\n          <div className=\"rankings-container\">\n\n            <p className=\"rankings-container-title\">{event} {discipline} {viewRace ? \"Race\" : \"\"} Rankings</p>\n\n            <div className=\"rankings-toggle-view-container\">\n\n              <div className=\"switch-container\" id=\"tour-view-switch-container\">\n\n                <p className=\"tour-view-switch-container-copy\">ATP</p>\n\n                <Switch onChange={handleEventSwitch} checked={event === \"WTA\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"tour-view-switch-container-copy\">WTA</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">SINGLES</p>\n\n                <Switch onChange={handleDisciplineSwitch} checked={discipline === \"Doubles\" ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">DOUBLES</p>\n\n              </div>\n\n              <div className=\"switch-container\" id=\"discipline-view-switch-container\">\n\n                <p className=\"discipline-view-switch-container-copy\">ROLLING</p>\n\n                <Switch onChange={handleRaceSwitch} checked={viewRace ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n                <p className=\"discipline-view-switch-container-copy\">RACE</p>\n\n              </div>\n\n            </div>\n\n            <MobileBanner />\n\n              <Players rankingCategory={rankingCategory} discipline={discipline} viewRace={viewRace} playerCount={playerCount} setPlayerCount={setPlayerCount} />\n            \n          </div>\n          \n        </>\n\n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/Home.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/PlayerDetail.jsx",["178","179"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/TournamentDetail.jsx",["180","181","182","183","184","185","186"],"import React, {useState, useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router-dom';\nimport Switch from \"react-switch\";\n\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\nimport Matches from '../components/Matches'\nimport OrderOfPlay from '../components/OrderOfPlay'\n\nimport './TournamentDetail.css'\n\nexport default function TournamentDetail(props) {\n\n  // Data Loaded Switches\n  const [currentSinglesTournamentLoaded, setCurrentSinglesTournamentLoaded] = useState(false)\n  const [currentDoublesTournamentLoaded, setCurrentDoublesTournamentLoaded] = useState(false)\n  const [currentTournamentScheduleLoaded, setCurrentTournamentScheduleLoaded] = useState(false)\n  const [currentTournamentCompletedMatchesLoaded, setCurrentTournamentCompletedMatchesLoaded] = useState(false)\n  const [currentTournamentLiveMatchesLoaded, setCurrentTournamentLiveMatchesLoaded] = useState(false)\n  \n  // Visibility Switches\n  const [currentMode, setCurrentMode] = useState(false)\n  const [view, setView] = useState(\"Live Scores\")\n\n  // Data\n    // Tournament Info\n  const [currentSinglesTournament, setCurrentSinglesTournament] = useState([])\n  const [currentDoublesTournament, setCurrentDoublesTournament] = useState([])\n  \n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentGender, setTournamentGender] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n\n    // Tournament Schedule\n  const [currentTournamentSchedule, setCurrentTournamentSchedule] = useState([])\n    // Completed Matches (Results)\n  const [completedSinglesMatches, setCompletedSinglesMatches] = useState([])\n  const [ completedDoublesMatches, setCompletedDoublesMatches] = useState([])\n    // Live Matches\n  const [liveSinglesMatches, setLiveSinglesMatches] = useState([])\n  const [liveDoublesMatches, setLiveDoublesMatches] = useState([])\n\n  const params = useParams();\n  const history = useHistory()\n\n  const { tournaments, dailySchedule, dailyResults, liveMatches } = props;\n\n// UseEffects\n  \n  // Sets currentSinglesTournament Object\n  useEffect(() => {\n\n    if (tournaments !== undefined && tournaments !== null) {\n\n      console.log(tournaments)\n      console.log(params)\n\n      console.log(\"TournamentDetail.js - UseEffect #1 - finding currentTournamentData using params\")\n\n      const currentTournamentData = tournaments.find((tournament) => parseInt(params.id) === parseInt(tournament.id))\n      setCurrentSinglesTournament(currentTournamentData)\n      setCurrentSinglesTournamentLoaded(true)\n\n      console.log(\"TournamentDetail.js - UseEffect #1 - currentSinglesTournament set\")\n      console.log(currentTournamentData)\n\n    } else {\n\n      console.log(\"TournamentDetail.js - UseEffect #1 - gathering currentTournamentData from LocalStorage\")\n\n      const currentTournamentData = localStorage.getItem('currentSinglesTournament')\n      setCurrentSinglesTournament(JSON.parse(currentTournamentData))\n      setCurrentSinglesTournamentLoaded(true)\n\n      console.log(\"TournamentDetail.js - UseEffect #1 - currentSinglesTournament set\")\n\n    }\n  }, [])\n\n  // Parses Key Tournament Info\n  useEffect(() => {\n    \n    if (currentSinglesTournamentLoaded) {\n\n      console.log(\"TournamentDetail.js - UseEffect #2 - parsing CurrentSinglesTournamentInfo\")\n\n      const currentTournament = currentSinglesTournament\n\n      const parseTournamentName = (currentTournament) => {\n        if (currentTournament.name) {\n          setTournamentName(currentTournament.name)\n        } else if (currentTournament.city) {\n          setTournamentName(currentTournament.city)\n        }\n      }\n  \n      parseTournamentName(currentTournament)\n      \n      const parseTournamentIcon = (currentTournament) => {\n      \n        if (currentTournament.name.includes(\"doubles\")) {\n          return\n        } else if (currentTournament.code.includes(\"WTA\")) {\n          setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n          setTournamentGender(\"WTA\")\n        } else if (currentTournament.name.toLowerCase().includes(\"challenger\")) {\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n          setTournamentGender(\"N/A\")\n        } else if (currentTournament.code.includes(\"ATP\")) {\n          setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n          setTournamentGender(\"ATP\")\n        } else if (currentTournament.name.includes(\"ITF\")) {\n          setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n          setTournamentGender(\"N/A\")\n        } else {\n          setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n          setTournamentGender(\"N/A\")\n        }\n      }\n  \n      parseTournamentIcon(currentTournament)\n\n      setStartDate(currentSinglesTournament.start_date)\n      setEndDate(currentSinglesTournament.end_date)\n\n      console.log(\"TournamentDetail.js - UseEffect #2 - CurrentSinglesTournamentInfo parsed & set\")\n\n    }\n  }, [currentSinglesTournamentLoaded])\n\n  // Collects Corresponding Doubles Tournament Data\n  useEffect(() => {\n\n    if (tournamentName && tournamentGender) {\n\n      console.log(\"TournamentDetail.js - UseEffect #3 - gathering CurrentDoublesTournamentInfo\")\n\n      console.log(tournaments)\n      console.log(tournamentGender)\n      console.log(tournamentName)\n      const currentDoublesTournamentData = tournaments.find((tournament) => ((tournament.type === \"doubles\") && (tournament.gender === tournamentGender) && (tournament.parent_id === currentSinglesTournament.parent_id)))\n      console.log(currentDoublesTournamentData)\n      setCurrentDoublesTournament(currentDoublesTournamentData)\n      setCurrentDoublesTournamentLoaded(true)\n\n      console.log(\"TournamentDetail.js - UseEffect #3 - CurrentDoublesTournamentInfo set\")\n    }\n  }, [tournamentName, tournamentGender])\n\n\n  // Collects Tournament Schedule\n  useEffect(() => {\n    if (currentDoublesTournamentLoaded) {\n      \n      console.log(currentDoublesTournament)\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n        console.log(currentSinglesTournament.id)\n        console.log(currentDoublesTournament.id)\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id) || (match.tournament.id === currentDoublesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n        const currentTournamentScheduleData = dailySchedule.filter((match) => ((match.tournament.id === currentSinglesTournament.id)))\n        if (currentTournamentScheduleData === undefined) {\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        } else {\n          setCurrentTournamentSchedule(currentTournamentScheduleData)\n          setCurrentTournamentScheduleLoaded(true)\n          console.log('schedule completed')\n        }\n      }\n\n    }\n  }, [currentDoublesTournamentLoaded])\n\n  // Collect Completed Matches (Results)\n  useEffect(() => {\n\n    if (currentTournamentScheduleLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        const completedDoublesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentDoublesTournament.id)))\n        setCompletedDoublesMatches(completedDoublesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const completedSinglesMatchesData = dailyResults.filter((match) => ((match.sport_event_status.status === \"closed\") && (match.sport_event.tournament.id === currentSinglesTournament.id)))\n        setCompletedSinglesMatches(completedSinglesMatchesData)\n        setCurrentTournamentCompletedMatchesLoaded(true)\n        console.log(dailyResults)\n        console.log(completedSinglesMatchesData)\n        console.log('completed matches pulled')\n\n      }\n    }\n  }, [currentTournamentScheduleLoaded])\n  \n  \n  // Collects Live Singles & Doubles Matches\n  useEffect(() => {\n\n    if (currentTournamentCompletedMatchesLoaded) {\n\n      if (dailySchedule.length > 0 && currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n        const liveDoublesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentDoublesTournament.id)))\n        \n        if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData === undefined) && (liveDoublesMatchesData !== undefined)) {\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData !== undefined) && (liveDoublesMatchesData === undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        } else if ((liveSinglesMatchesData) && (liveDoublesMatchesData)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setLiveDoublesMatches(liveDoublesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      } else if (dailySchedule.length > 0 && !currentDoublesTournament) {\n\n        const liveSinglesMatchesData = liveMatches.filter((match) => ((match.sport_event.tournament.id === currentSinglesTournament.id)))\n  \n        if ((liveSinglesMatchesData === undefined)) {\n          setCurrentTournamentLiveMatchesLoaded(true)\n          return\n        } else if ((liveSinglesMatchesData !== undefined)) {\n          setLiveSinglesMatches(liveSinglesMatchesData)\n          setCurrentTournamentLiveMatchesLoaded(true)\n        }\n        console.log('live matches completed')\n        console.log(liveMatches)\n        console.log(currentSinglesTournament.id)\n        console.log(liveSinglesMatchesData)\n\n      }\n    }\n  }, [currentTournamentCompletedMatchesLoaded])\n\n  // Switch Functions\n\n  const handleSwitch = () => {\n    setCurrentMode(!currentMode)\n  }\n\n  const handleChangeView = (view) => {\n    switch (view) {\n      case \"Live Scores\":\n        setView(\"Live Scores\")\n        break;\n      case \"Completed Matches\":\n        setView(\"Completed Matches\")\n        break;\n      case \"Schedule\":\n        setView(\"Schedule\")\n        break;\n    }\n  }\n\n  const handleReturnToCalendar = (e) => {\n    localStorage.removeItem('currentSinglesTournament')\n    history.push('/calendar')\n  }\n  \n  return (\n\n    <>\n      \n      { currentTournamentLiveMatchesLoaded ?\n      \n        <div className=\"tournament-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToCalendar(e)} >\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <div className=\"tournament-card-container\">\n\n            <p className=\"tournament-card-name\">{tournamentName}</p>\n\n            <div className=\"tournament-category-container\">\n\n              <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n\n              <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n          \n            </div>\n\n          </div>\n\n\n\n          <div className=\"discipline-switch-container\">\n\n            <p className=\"discipline-switch-container-copy\">SINGLES</p>\n\n            <Switch onChange={handleSwitch} checked={currentMode ? true : false} onColor=\"#F39C12\" checkedIcon={false} uncheckedIcon={false} />\n\n            <p className=\"discipline-switch-container-copy\">DOUBLES</p>\n\n          </div>\n\n\n          \n          <div className=\"tournament-views-container\">\n\n            <button className=\"tournament-views-button\" id=\"live-scores-button\" onClick={(e) => handleChangeView(\"Live Scores\")} > Live Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"completed-matches-button\" onClick={(e) => handleChangeView(\"Completed Matches\")}> Completed Matches</button>\n\n            <button className=\"tournament-views-button\" id=\"schedule-button\" onClick={(e) => handleChangeView(\"Schedule\")} > Schedule</button>\n          \n          </div>\n\n          <MobileBanner />\n\n          {view === \"Live Scores\" ?\n        \n            <Matches matchesData={currentMode ? liveDoublesMatches : liveSinglesMatches} view={view} />\n\n            :\n        \n            <>\n          \n              {view === \"Completed Matches\" ?\n        \n                <Matches matchesData={currentMode ? completedDoublesMatches : completedSinglesMatches} view={view} />\n              \n                :\n            \n                <>\n              \n                  {currentTournamentSchedule.length === 0 ?\n              \n                    <p className=\"match-container-copy\">Tournament schedule currently unavailable.</p>\n            \n                    :\n\n                    <OrderOfPlay currentTournamentSchedule={currentTournamentSchedule} />\n        \n                  }\n\n                </>\n              \n              }\n        \n            </>\n      \n          }\n\n        </div>\n        \n      :\n        \n        <Loader />\n      \n      }\n      \n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/screens/MatchDetail.jsx",["187"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport MatchCard from '../components/MatchCard'\nimport Loader from '../components/Loader'\nimport MobileBanner from '../components/adSense/MobileBanner'\n\nimport './MatchDetail.css'\n\nimport {\n  getMatchDetails\n} from \"../utils/matches\"\n\nexport default function MatchDetail(props) {\n  \n  const [matchDetailsLoaded, setMatchDetailsLoaded] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  const [ matchData, setMatchData ] = useState(null)\n  const [ homeStats, setHomeStats] = useState(null)\n  const [ awayStats, setAwayStats ] = useState(null)\n\n  const history = useHistory()\n\n  useEffect(() => {\n\n    const match = localStorage.getItem('currentMatch')\n    const matchDetails = localStorage.getItem('matchDetails')\n\n    if (matchDetails) {\n      setMatchData(JSON.parse(matchDetails))\n      setHomeStats(JSON.parse(matchDetails).statistics.teams[0])\n      setAwayStats(JSON.parse(matchDetails).statistics.teams[1])\n      setMatchDetailsLoaded(true)\n \n    } else {\n\n      const matchID = JSON.parse(match).sport_event.id\n      console.log(matchID)\n\n      const getMatchStatistics = async (matchID) => {\n        const matchDetails = await getMatchDetails(matchID)\n        console.log(matchDetails)\n        setMatchData(matchDetails)\n        localStorage.setItem('matchDetails', JSON.stringify(matchDetails))\n        if (matchDetails.statistics) {\n          setHomeStats(matchDetails.statistics.teams[0])\n          setAwayStats(matchDetails.statistics.teams[1])\n          console.log(matchDetails.statistics.teams[0])\n          setMatchDetailsLoaded(true)\n        } else {\n          setMatchDetailsLoaded(true)\n        }\n      }\n      getMatchStatistics(matchID)\n\n    }\n  }, [])\n\n  useEffect(() => {\n\n    if (matchDetailsLoaded) {\n      setLoaded(true)\n    }\n\n  }, [matchDetailsLoaded])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchData.matchStatus === \"live\") {\n          const getLiveMatchStatistics = async (matchID) => {\n            const matchDetails = await getMatchDetails(matchID)\n            setMatchData(matchDetails)\n          }\n          getLiveMatchStatistics(matchData.sport_event.id)\n       } else {\n         clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [loaded])\n\n  const handleReturnToTournament = () => {\n    const currentTournament = localStorage.getItem('currentSinglesTournament')\n    const currentPlayer = localStorage.getItem('currentPlayer')\n\n    if (currentTournament) {\n      const tournamentID = JSON.parse(currentTournament).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/tournament/${tournamentID}`)\n    } else if (currentPlayer) {\n      const playerID = JSON.parse(currentPlayer).id\n      localStorage.removeItem(\"currentMatch\")\n      localStorage.removeItem('matchDetails')\n      history.push(`/player/${playerID}`)\n    }\n  }\n\n  return (\n\n    <>\n\n      { ((loaded === false) || (matchData === null)) ? \n        \n        <Loader />\n     :\n        \n        <div className=\"match-detail-container\">\n\n          <div className=\"back-button-container\" onClick={(e) => handleReturnToTournament(e)}>\n\n            <i className=\"fas fa-arrow-left\" id=\"match-detail-back-button\" ></i>\n\n            <p className=\"back-button-copy\">BACK</p>\n\n          </div>\n\n          <MatchCard matchData={matchData} key={matchData.sport_event.id} />\n\n          <MobileBanner />\n\n          <p className=\"match-statistics-title\">MATCH STATISTICS</p>\n\n          <div className=\"match-statistics-container\">\n\n            <div className=\"match-statistic-categories-container\">\n\n              <p className=\"statistic-category\" id=\"placeholder-category\"></p>\n\n              <p className=\"statistic-category\">First Serve Percentage</p>\n\n              <p className=\"statistic-category\">Second Serve Percentage</p>\n\n              <p className=\"statistic-category\">Aces</p>\n\n              <p className=\"statistic-category\">Double Faults</p>\n\n              <p className=\"statistic-category\">First Serve Points Won</p>\n\n              <p className=\"statistic-category\">Second Serve Points Won</p>\n\n              <p className=\"statistic-category\">Receiving Points Won</p>\n\n              <p className=\"statistic-category\">Break Points</p>\n\n              <p className=\"statistic-category total-points\">Total Points Won</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"home\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${homeStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{homeStats.statistics.first_serve_successful}{`/`}{homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults}{` (`}{(homeStats.statistics.first_serve_successful / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_successful}/${homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults} (${(homeStats.statistics.second_serve_successful / (homeStats.statistics.second_serve_successful + homeStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.first_serve_points_won}/${homeStats.statistics.first_serve_successful} (${(homeStats.statistics.first_serve_points_won / homeStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.second_serve_points_won}/${homeStats.statistics.second_serve_successful} (${(homeStats.statistics.second_serve_points_won / homeStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.receiver_points_won}/${(awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful)} (${((homeStats.statistics.receiver_points_won / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${homeStats.statistics.breakpoints_won}/${homeStats.statistics.total_breakpoints} (${(homeStats.statistics.breakpoints_won / homeStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${homeStats.statistics.points_won}`}</p>\n\n            </div>\n\n            <div className=\"competitor-statistics-container\" id=\"away\">\n\n              <p className=\"statistic-category\" id=\"competitor-statistics-container-title\">{`${awayStats.name}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{awayStats.statistics.first_serve_successful}{`/`}{awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults}{` (`}{(awayStats.statistics.first_serve_successful / (awayStats.statistics.first_serve_successful + awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}{`%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_successful}/${awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults} (${(awayStats.statistics.second_serve_successful / (awayStats.statistics.second_serve_successful + awayStats.statistics.double_faults) * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.aces}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.double_faults}`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.first_serve_points_won}/${awayStats.statistics.first_serve_successful} (${(awayStats.statistics.first_serve_points_won / awayStats.statistics.first_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.second_serve_points_won}/${awayStats.statistics.second_serve_successful} (${(awayStats.statistics.second_serve_points_won / awayStats.statistics.second_serve_successful * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.receiver_points_won}/${(homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful)} (${((awayStats.statistics.receiver_points_won / (homeStats.statistics.first_serve_successful + homeStats.statistics.second_serve_successful) * 100)).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category\" id=\"competitor-statistic\">{`${awayStats.statistics.breakpoints_won}/${awayStats.statistics.total_breakpoints} (${(awayStats.statistics.breakpoints_won / awayStats.statistics.total_breakpoints * 100).toFixed(1)}%)`}</p>\n\n              <p className=\"statistic-category total-points\" id=\"competitor-statistic\">{`${awayStats.statistics.points_won}`}</p>\n          \n            </div>\n\n          </div>\n      \n        </div>\n      }\n    </>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/api-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/containers/MainContainer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Layout.jsx",["188"],"import React from 'react'\n\nimport Header from '../shared/Header'\nimport Sidebar from '../shared/Sidebar'\nimport Footer from '../shared/Footer'\n\nimport './Layout.css'\n\nexport default function Layout (props) {\n\n  return (\n    <div className=\"layout-container\">\n\n      <Header\n      />\n\n      <div className=\"body-container\">\n\n          \n        {/* <Sidebar /> */}\n\n        {props.children}\n\n      </div>\n\n      <Footer />\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Header.jsx",["189"],"import React, { useState } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport IconLogo from '../IconLogo'\n\nimport './Header.css'\n\nexport default function Header(props) {\n\n  const [menuVisibility, setMenuVisibility] = useState(false);\n\n  const changeMenuVisibility = (e) => {\n    e.preventDefault();\n    setMenuVisibility(!menuVisibility);\n  };\n\n  return (\n\n    <div className=\"header-container slide-in-top-header\"> \n\n      <div className=\"desktop-nav\">\n\n        <Link to=\"/\" className=\"desktop-logo-container\">\n\n          <IconLogo />\n          \n        </Link>\n\n        <div className=\"desktop-nav-links-container\">\n\n          <Link to=\"/\" className=\"desktop-nav-link\">Home</Link>\n\n          <Link to=\"/calendar\" className=\"desktop-nav-link\">Calendar</Link>\n\n          <Link to=\"/rankings\" className=\"desktop-nav-link\">Rankings</Link>\n\n          <p className=\"desktop-nav-link\">About</p>\n\n          <a className=\"desktop-nav-link\" target=\"_blank\" href=\"https://www.gameset.blog\">Blog</a>\n        </div>\n\n      </div>\n\n      <div className=\"mobile-nav\">\n\n        {menuVisibility ?\n        \n        <i className=\"fas fa-times mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n          \n        :\n\n        <i className=\"fas fa-bars mobile-icon\" onClick={(e) => changeMenuVisibility(e)}></i>\n      \n        }\n\n        <div className=\"mobile-logo-container\">\n\n          <IconLogo style={{\n            zIndex: \"5\",\n            textAlign: \"center\",\n            verticalAlign: \"center\",\n            \n        }} />\n\n        </div>\n\n          \n        <div className=\"mobile-header-placeholder\"></div>\n        \n\n      </div>\n\n      <div id=\"mobile-menu\" className={menuVisibility ? \"mobile-menu-visible\" : \"mobile-menu-hidden\"}>\n      \n        <p className=\"mobile-nav-link\">About</p>\n        <p className=\"mobile-nav-link\">Blog</p>\n\n      </div>\n      \n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Sidebar.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/shared/Footer.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/IconLogo.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/TournamentCard.jsx",["190"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './TournamentCard.css'\n\nexport default function TournamentCard(props) {\n\n  const [tournamentName, setTournamentName] = useState(\"\")\n  const [tournamentCategoryIcon, setTournamentCategoryIcon] = useState(\"\")\n  const history = useHistory()\n  \n  const { tournament, startDate, endDate } = props;\n\n  useEffect(() => {\n\n    const currentTournament = tournament\n\n    const parseTournamentName = (currentTournament) => {\n      if (currentTournament.name) {\n        setTournamentName(currentTournament.name)\n      } else if (currentTournament.city) {\n        setTournamentName(currentTournament.city)\n      }\n    }\n\n    parseTournamentName(currentTournament)\n    \n    const parseTournamentIcon = (currentTournament) => {\n    \n      if (currentTournament.name.includes(\"doubles\")) {\n        return\n      } else if (currentTournament.code.includes(\"WTA\")) {\n        setTournamentCategoryIcon(\"https://images.firstpost.com/wp-content/uploads/2020/12/wta-logo-640.png?impolicy=website&width=1200&height=800\")\n      } else if (currentTournament.name.toLowerCase().includes(\"challenger\")) {\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (currentTournament.code.includes(\"ATP\")) {\n        setTournamentCategoryIcon(\"https://logodix.com/logo/1903236.png\")\n      } else if (currentTournament.name.includes(\"ITF\")) {\n        setTournamentCategoryIcon(\"https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/International_Tennis_Federation_logo.svg/1200px-International_Tennis_Federation_logo.svg.png\")\n      } else {\n        setTournamentCategoryIcon(\"https://www.californiasportssurfaces.com/stage/wp-content/uploads/2019/02/au-open-logo.png\")\n      }\n    }\n\n    parseTournamentIcon(currentTournament)\n\n  }, [])\n\n  const handleTournament = (tournament, tournamentID) => {\n    localStorage.setItem('currentSinglesTournament', JSON.stringify(tournament))\n    history.push(`/tournament/${tournamentID}`)\n  }\n\n\n  return (\n    <div className=\"tournament-card-container\" onClick={(e) => handleTournament(tournament, tournament.id)} >\n\n      <p className=\"tournament-card-name\">{tournamentName}</p>\n\n      <div className=\"tournament-category-container\">\n\n        {startDate === \"\" ?\n          <div className=\"tournament-date\"></div>\n        : \n          <p className=\"tournament-date\">{`${startDate} - ${endDate}`}</p>\n        }\n        <img className=\"tournament-category-icon\" alt=\"tournament-category-icon\" src={tournamentCategoryIcon} />\n      </div>\n\n    </div>\n  )\n}","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/MatchCard.jsx",["191","192","193"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ReactCountryFlag from \"react-country-flag\"\n\nimport \"./MatchCard.css\";\n\nimport {\n  getMatch,\n} from '../utils/matches'\n\nexport default function MatchCard(props) {\n  const { matchData, key } = props;\n  const history = useHistory();\n\n  console.log(matchData)\n\n  const [currentMatchData, setCurrentMatchData] = useState(matchData)\n\n  const [match, setMatch] = useState(null)\n\n  const [matchInfo, setMatchInfo] = useState({\n\n    tournamentEvent: matchData.sport_event.tournament.gender,\n    tournamentDiscipline: matchData.sport_event.sport_event_type,\n    tournamentRound: matchData.sport_event.tournament_round.name,\n\n    matchFormat: matchData.sport_event_conditions.match_mode,\n    matchCourt: matchData.sport_event_conditions.venue.name,\n    matchStatus: matchData.sport_event_status.status,\n\n    homeCompetitorID: matchData.sport_event.competitors[0].id,\n    homeCompetitor: matchData.sport_event.competitors[0].name,\n\n    awayCompetitorID: matchData.sport_event.competitors[1].id,\n    awayCompetitor: matchData.sport_event.competitors[1].name\n\n  })\n\n  const [scoreInfo, setScoreInfo] = useState({\n\n    setOneScoreHome: \"\",\n    setOneScoreAway: \"\",\n    setTwoScoreHome: \"\",\n    setTwoScoreAway: \"\",\n    setThreeScoreHome: \"\",\n    setThreeScoreAway: \"\",\n    setFourScoreHome: \"\",\n    setFourScoreAway: \"\",\n    setFiveScoreHome: \"\",\n    setFiveScoreAway: \"\",\n    serviceScoreHome: \"\",\n    serviceScoreAway: \"\",\n    server: \"\"\n\n  })\n\n  const getCountryISO2 = require(\"country-iso-3-to-2\");\n\n  useEffect(() => {\n    setCurrentMatchData(matchData)\n  }, [matchData])\n\n  useEffect(() => {\n    \n    if (match === null || (currentMatchData.sport_event.id !== match.sport_event.id)) {\n      console.log('setMatchData')\n      setMatch(matchData)\n    }\n    \n  }, [matchData, currentMatchData])\n\n  useEffect(() => {\n\n    const interval = setInterval(() => {\n\n      if (matchInfo.matchStatus.toLowerCase() === \"live\") {\n\n        const currentMatchID = matchData.sport_event.id\n\n        console.log('live data')\n        console.log(matchData)\n        const fetchMatch = async (matchID) => {\n          const data = await getMatch(matchID)\n          console.log(\"interval for fetchMatch within MatchCard\")\n          setMatch(data)\n        }\n        fetchMatch(currentMatchID)\n      } else {\n        clearInterval(interval)\n      }\n    }, 60000);\n   \n    return () => clearInterval(interval);\n\n  }, [match, scoreInfo])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const parseTournamentRound = (tournamentRound) => {\n        switch (tournamentRound) {\n          case \"round_of_128\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 128\"\n            }));\n            break;\n          case \"round_of_64\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 64\"\n            }));\n            break;\n          case \"round_of_32\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 32\"\n            }));\n            break;\n          case \"round_of_16\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Round of 16\"\n            }));\n            break;\n          case \"round_of_8\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"quarterfinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Quarterfinal\"\n            }));\n            break;\n          case \"round_of_4\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"semifinal\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"Semifinal\"\n            }));\n            break;\n          case \"round_of_2\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          case \"final\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentRound: \"FINAL\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentRound(\n        match.sport_event.tournament_round.name\n      );\n\n      const parseTournamentDiscipline = (tournamentType) => {\n        switch (tournamentType) {\n          case \"singles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"SINGLES\"\n            }));\n            break;\n          case \"doubles\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"DOUBLES\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentDiscipline: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentDiscipline(\n        match.sport_event.sport_event_type\n      );\n\n      const parseTournamentGender = (tournamentGender) => {\n        switch (tournamentGender) {\n          case \"men\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MEN'S\"\n            }));\n            break;\n          case \"women\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"WOMEN'S\"\n            }));\n            break;\n          case \"mixed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              tournamentEvent: \"MIXED\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n      parseTournamentGender(\n        match.sport_event.tournament.gender\n      );\n\n      const parseMatchStatus = (props) => {\n        switch (props) {\n          case \"not_started\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Not Started\"\n            }));\n            break;\n          case \"match_about_to_start\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Match To Start\"\n            }));\n            break;\n          case \"live\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Live\"\n            }));\n            break;\n          case \"closed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"ended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Complete\"\n            }));\n            break;\n          case \"interrupted\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Interrupted\"\n            }));\n            break;\n          case \"suspended\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Suspended\"\n            }));\n            break;\n          case \"cancelled\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Cancelled\"\n            }));\n            break;\n          case \"delayed\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Delayed\"\n            }));\n            break;\n          case \"abandoned\":\n            setMatchInfo(prevState => ({\n              ...prevState,\n              matchStatus: \"Abandoned\"\n            }));\n            break;\n          default:\n            break;\n        }\n      };\n\n\n      parseMatchStatus(\n        matchData.sport_event_status.status\n      );\n\n      const parseMatchCompetitors = (match) => {\n        setMatchInfo(prevState => ({\n          ...prevState,\n          homeCompetitorID: match.competitors[0].id\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          homeCompetitor: match.competitors[0].name\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          awayCompetitorID: match.competitors[1].id\n        }));\n        setMatchInfo(prevState => ({\n          ...prevState,\n          awayCompetitor: match.competitors[1].name\n        }));\n      }\n\n      parseMatchCompetitors(matchData.sport_event)\n\n    }\n  }, [match])\n\n  useEffect(() => {\n\n    const currentMatch = match\n\n    if (currentMatch !== null) {\n\n      const handleHomeScore = () => {\n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.home_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: \"AD\"\n            }))\n\n          } else {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreHome: match.sport_event_status.game_state.home_score\n            }))\n\n          }\n\n\n        }\n      }\n\n      const handleAwayScore = () => {\n        \n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\") && match.sport_event_status.game_state !== undefined) {\n\n          if (match.sport_event_status.game_state.away_score === 50) {\n\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: \"AD\"\n            }))\n\n          } else {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              serviceScoreAway: match.sport_event_status.game_state.away_score\n            }))\n          }\n        }\n      }\n\n      const generateSets = (formatValue) => {\n        \n        if ((matchInfo.matchStatus.toLowerCase() === \"live\" || matchInfo.matchStatus.toLowerCase() === \"ended\" || matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"interrupted\" || matchInfo.matchStatus.toLowerCase() === \"complete\") && match.sport_event_status.period_scores !== undefined) {\n\n          const sets = [\"setOneScore\", \"setTwoScore\", \"setThreeScore\", \"setFourScore\", \"setFiveScore\"]\n\n          for (let i = 0; i < formatValue; i++) {\n\n            if (match.sport_event_status.period_scores[i] !== undefined) {\n          \n              let homeScore = sets[i] + \"Home\"\n              let awayScore = sets[i] + \"Away\"\n\n              setScoreInfo(prevState => ({\n                ...prevState,\n                [homeScore]: match.sport_event_status.period_scores[i].home_score,\n                [awayScore]: match.sport_event_status.period_scores[i].away_score\n              }))\n            }\n          }\n        }\n      }\n\n      const handleServer = () => {\n        if (matchInfo.matchStatus.toLowerCase() === \"live\") {\n          if (match.sport_event_status.game_state.serving) {\n            setScoreInfo(prevState => ({\n              ...prevState,\n              server: match.sport_event_status.game_state.serving\n            }))\n          }\n        } else if (matchInfo.matchStatus.toLowerCase() === \"closed\" || matchInfo.matchStatus.toLowerCase() === \"complete\") {\n          if (match.sport_event_status.winner_id) {\n            if (match.sport_event_status.winner_id === matchInfo.homeCompetitorID) {\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"homeWinner\"\n              }))\n            } else {\n              setScoreInfo(prevState => ({\n                ...prevState,\n                server: \"awayWinner\"\n              }))\n            }\n          }\n        }\n      }\n        \n      handleHomeScore()\n      handleAwayScore()\n      handleServer()\n\n      if (matchInfo.matchFormat === \"bo3\") {\n\n        let formatValue = 3\n\n        generateSets(formatValue, match)\n\n      } else if (matchInfo.matchFormat === \"bo5\") {\n\n        let formatValue = 5\n\n        generateSets(formatValue, match)\n\n      }\n\n    }\n  }, [match, matchInfo])\n\n  const handleMatch = (matchInfo, scoreInfo, matchID) => {\n    localStorage.setItem(\"currentMatch\", JSON.stringify(match))\n    history.push(`/match/${matchID}`);\n  };\n\n  const generateCompetitor = (index, type) => {\n    if (matchData.sport_event.sport_event_type === \"doubles\") {\n\n      const competitor = matchData.sport_event.competitors[index]\n\n      const doublesTeamInfo = {\n        partnerA: {\n          name: competitor.players[0].name.split(',')[0],\n          countryCode: competitor.players[0].country_code\n        },\n        partnerB: {\n          name: competitor.players[1].name.split(',')[0],\n          countryCode: competitor.players[1].country_code\n        },\n        seed: competitor.seed\n      }\n\n      const partnerAAlpha2Country = getCountryISO2(doublesTeamInfo.partnerA.countryCode)\n      const partnerBAlpha2Country = getCountryISO2(doublesTeamInfo.partnerB.countryCode)\n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={partnerAAlpha2Country}\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n              aria-label=\"United States\"\n            />\n            \n            <p className=\"player-country-seperator\">/</p>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={partnerBAlpha2Country}\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n              aria-label=\"United States\"\n            />\n\n          <p className=\"competitor-name\">{doublesTeamInfo.partnerA.name}{'/'}{doublesTeamInfo.partnerB.name}{' '}{(competitor.seed !== null || competitor.seed !== undefined) ? doublesTeamInfo.seed : ''}</p>\n\n        </div>\n\n      )\n\n    } else {\n\n      const competitor = matchData.sport_event.competitors[index]\n      const competitorName = competitor.name\n      const competitorSeed = '[' + competitor.seed + ']'\n      const competitorCountryCode = competitor.country_code\n      const alpha2Country = getCountryISO2(competitorCountryCode)\n\n      console.log(competitor.seed)\n\n      return (\n\n        <div className=\"competitor-name-container\" id={type}>\n\n            <ReactCountryFlag\n              className=\"emojiFlag\"\n              countryCode={alpha2Country}\n              aria-label=\"United States\"\n              style={{\n                fontSize: '150%',\n                lineHeight: '150%',\n            }}\n            />\n\n          <p className=\"competitor-name\">{competitorName}{' '}{(competitor.seed !== null && competitor.seed !== undefined) ? competitorSeed : ''}</p>\n\n        </div>\n\n      )\n    }\n  }\n  \n  const homePlayer = generateCompetitor(0, \"home\")\n\n  const awayPlayer = generateCompetitor(1, \"away\")\n\n  return (\n    <div\n      className=\"match-card-container\"\n      id={key}\n      key={key}\n      onClick={(e) => handleMatch(matchInfo, scoreInfo, matchData.sport_event.id)}\n    >\n      <div className=\"match-card-header-container\">\n\n        <p className=\"match-card-title\">{`${matchInfo.tournamentEvent} ${matchInfo.tournamentDiscipline}`}</p>\n\n        <p className=\"match-court\">{`${matchInfo.matchCourt}`}</p>\n\n      </div>\n\n      <div className=\"match-container\">\n\n        <div className=\"match-info-container\">\n\n          <p className=\"match-round\">{`${matchInfo.tournamentRound}`}</p>\n\n          <p className=\"match-status\">{`${matchInfo.matchStatus}`}</p>\n\n        </div>\n\n        <div className=\"competitor-container\" id=\"home\">\n\n          {homePlayer}\n\n          {scoreInfo.server === \"home\" ? \n          \n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server home\"></i>\n            \n          :\n            \n          <>\n            \n          {\n            scoreInfo.server === \"homeWinner\" ?\n            \n            <i className=\"fas fa-check service-icon\"></i>\n              \n          :\n          \n            <div className=\"service-icon\" id=\"receiver home\" />\n\n          }\n          </>\n          \n          }\n\n          <p className=\"service-score home\">{scoreInfo.serviceScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-one\">{scoreInfo.setOneScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-two\">{scoreInfo.setTwoScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-three\">{scoreInfo.setThreeScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-four\">{scoreInfo.setFourScoreHome}</p>\n\n          <p className=\"set-score home\" id=\"set-five\">{scoreInfo.setFiveScoreHome}</p>\n\n        </div>\n\n        <div className=\"set-labels-container\">\n\n        <p className=\"set-label\" id=\"service-score\">SERVICE</p>\n\n          <p className=\"set-label\" id=\"set-one\">1</p>\n\n          <p className=\"set-label\" id=\"set-two\">2</p>\n\n          <p className=\"set-label\" id=\"set-three\">3</p>\n\n          <p className=\"set-label\" id=\"set-four\">4</p>\n\n          <p className=\"set-label\" id=\"set-five\">5</p>\n\n        </div>\n        \n\n        <div className=\"competitor-container\" id=\"away\">\n\n          {awayPlayer}\n\n          {scoreInfo.server === \"away\" ?\n\n            <i className=\"fas fa-circle service-icon heartbeat\" id=\"server away\"></i>\n            \n            :\n          \n            <>\n            \n            {\n              scoreInfo.server === \"awayWinner\" ?\n              \n              <i className=\"fas fa-check service-icon\"></i>\n                \n            :\n            \n              <div className=\"service-icon\" id=\"receiver away\" />\n\n            }\n            </>\n\n          }\n\n          <p className=\"service-score away\">{scoreInfo.serviceScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-one\">{scoreInfo.setOneScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-two\">{scoreInfo.setTwoScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-three\">{scoreInfo.setThreeScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-four\">{scoreInfo.setFourScoreAway}</p>\n\n          <p className=\"set-score away\" id=\"set-five\">{scoreInfo.setFiveScoreAway}</p>\n\n        </div>\n\n      </div>\n\n      <div className=\"match-stats-container\">\n        VIEW MATCH STATS\n      </div>\n      \n    </div>\n  );\n}\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Matches.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/live.js",[],["194","195"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/matches.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Loader.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/OrderOfPlay.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rankings.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/PlayerCard.jsx",["196"],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/players.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Players.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Results.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/ResultsContainer.jsx",["197","198"],"import React, { useState, useEffect } from 'react'\n\nimport Loader from './Loader'\nimport Results from './Results'\n\n\nexport default function ResultsContainer (props) {\n\n  const { playerResults } = props\n\n  const [uniqueTournaments, setUniqueTournaments] = useState(null)\n\n  const currentYear = new Date().getFullYear()\n  \n  console.log(currentYear)\n  console.log(playerResults)\n  console.log(uniqueTournaments)\n\n  useEffect(() => {\n\n    if (playerResults) {\n\n      console.log(\"generating unique tournaments\")\n\n      const generateUniqueTournaments = () => {\n\n        console.log('ahead of the loop')\n\n        let tournaments = []\n        let tournamentsData = []\n\n        for (let i = 0; i < playerResults.results.length; i++) {\n\n          console.log(`in the loop ${i} time`)\n\n          if (!tournaments.includes(playerResults.results[i].sport_event.tournament.id) && (playerResults.results[i].sport_event.season.year === currentYear.toString())) {\n            console.log('pushing into array')\n            tournaments.push(playerResults.results[i].sport_event.tournament.id)\n            tournamentsData.push(playerResults.results[i])\n          }\n        }\n        return tournamentsData\n      }\n\n\n      const uniqueTournamentsArray = generateUniqueTournaments()\n\n      setUniqueTournaments(uniqueTournamentsArray)\n    }\n\n  }, [])\n  \n    return (\n     \n      <>\n        \n        {uniqueTournaments === null ?\n\n          <>\n          </>\n          \n        :\n        \n          <>\n      \n            <Results uniqueTournaments={uniqueTournaments} playerResults={playerResults} />\n            \n          </>\n          \n        }\n\n    </>\n  )\n\n}\n\n","/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/Tournaments.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/CalendarCard.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/mobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/adSense/MobileBanner.jsx",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/rapidAPI-config.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/utils/country-converter.js",[],"/Users/tylerhuyser/Coding/ACE-tennis-scores/client/src/components/RankingDetailCard.jsx",["199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":3,"nodeType":"206","messageId":"207","endLine":13,"endColumn":26},{"ruleId":"208","severity":1,"message":"209","line":65,"column":6,"nodeType":"210","endLine":65,"endColumn":8,"suggestions":"211"},{"ruleId":"208","severity":1,"message":"212","line":108,"column":6,"nodeType":"210","endLine":108,"endColumn":38,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"214","line":138,"column":6,"nodeType":"210","endLine":138,"endColumn":21,"suggestions":"215"},{"ruleId":"208","severity":1,"message":"216","line":166,"column":6,"nodeType":"210","endLine":166,"endColumn":21,"suggestions":"217"},{"ruleId":"208","severity":1,"message":"218","line":177,"column":6,"nodeType":"210","endLine":177,"endColumn":19,"suggestions":"219"},{"ruleId":"208","severity":1,"message":"220","line":64,"column":6,"nodeType":"210","endLine":64,"endColumn":15,"suggestions":"221"},{"ruleId":"222","severity":1,"message":"223","line":68,"column":16,"nodeType":"224","messageId":"225","endLine":68,"endColumn":18},{"ruleId":"208","severity":1,"message":"226","line":97,"column":6,"nodeType":"210","endLine":97,"endColumn":14,"suggestions":"227"},{"ruleId":"208","severity":1,"message":"228","line":54,"column":6,"nodeType":"210","endLine":54,"endColumn":43,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"230","line":117,"column":6,"nodeType":"210","endLine":117,"endColumn":18,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":136,"column":5,"nodeType":"234","messageId":"235","endLine":143,"endColumn":6},{"ruleId":"208","severity":1,"message":"236","line":81,"column":6,"nodeType":"210","endLine":81,"endColumn":8,"suggestions":"237"},{"ruleId":"208","severity":1,"message":"238","line":132,"column":6,"nodeType":"210","endLine":132,"endColumn":38,"suggestions":"239"},{"ruleId":"208","severity":1,"message":"240","line":151,"column":6,"nodeType":"210","endLine":151,"endColumn":40,"suggestions":"241"},{"ruleId":"208","severity":1,"message":"242","line":185,"column":6,"nodeType":"210","endLine":185,"endColumn":38,"suggestions":"243"},{"ruleId":"208","severity":1,"message":"244","line":214,"column":6,"nodeType":"210","endLine":214,"endColumn":39,"suggestions":"245"},{"ruleId":"208","severity":1,"message":"246","line":264,"column":6,"nodeType":"210","endLine":264,"endColumn":47,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"233","line":273,"column":5,"nodeType":"234","messageId":"235","endLine":283,"endColumn":6},{"ruleId":"208","severity":1,"message":"248","line":84,"column":6,"nodeType":"210","endLine":84,"endColumn":14,"suggestions":"249"},{"ruleId":"204","severity":1,"message":"250","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":15},{"ruleId":"251","severity":1,"message":"252","line":39,"column":11,"nodeType":"253","endLine":39,"endColumn":91},{"ruleId":"208","severity":1,"message":"254","line":47,"column":6,"nodeType":"210","endLine":47,"endColumn":8,"suggestions":"255"},{"ruleId":"208","severity":1,"message":"256","line":70,"column":6,"nodeType":"210","endLine":70,"endColumn":35,"suggestions":"257"},{"ruleId":"208","severity":1,"message":"258","line":95,"column":6,"nodeType":"210","endLine":95,"endColumn":24,"suggestions":"259"},{"ruleId":"208","severity":1,"message":"260","line":326,"column":6,"nodeType":"210","endLine":326,"endColumn":13,"suggestions":"261"},{"ruleId":"200","replacedBy":"262"},{"ruleId":"202","replacedBy":"263"},{"ruleId":"208","severity":1,"message":"264","line":27,"column":6,"nodeType":"210","endLine":27,"endColumn":8,"suggestions":"265"},{"ruleId":"204","severity":1,"message":"266","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":14},{"ruleId":"208","severity":1,"message":"267","line":51,"column":6,"nodeType":"210","endLine":51,"endColumn":8,"suggestions":"268"},{"ruleId":"208","severity":1,"message":"264","line":64,"column":6,"nodeType":"210","endLine":64,"endColumn":8,"suggestions":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'getDailyResultsRapidAPI' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentYear', 'today', and 'tournaments.length'. Either include them or remove the dependency array.","ArrayExpression",["272"],"React Hook useEffect has missing dependencies: 'currentDay', 'currentMonth', and 'currentYear'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'dailyResults'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'liveMatches'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'dailyResults' and 'dailySchedule'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'calendarTournamentData', 'calendarTournaments', 'calendarTournamentsITF', and 'viewCalendar'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCalendarTournamentData' needs the current value of 'calendarTournamentsITF'.",["277"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'calendarTournaments', 'calendarTournamentsITF', 'viewCalendar', and 'viewITF'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has missing dependencies: 'femaleDoublesRaceRankings', 'femaleDoublesRankings', 'femaleSinglesRaceRankings', 'femaleSinglesRankings', 'maleDoublesRaceRankings', 'maleDoublesRankings', 'maleSinglesRaceRankings', and 'maleSinglesRankings'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRankingCategory' needs the current value of 'femaleSinglesRankings'.",["279"],"React Hook useEffect has a missing dependency: 'playerData'. Either include it or remove the dependency array.",["280"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'params' and 'tournaments'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'currentSinglesTournament'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'currentSinglesTournament.parent_id' and 'tournaments'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', and 'dailySchedule'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailyResults', and 'dailySchedule.length'. Either include them or remove the dependency array.",["285"],"React Hook useEffect has missing dependencies: 'currentDoublesTournament', 'currentSinglesTournament.id', 'dailySchedule.length', and 'liveMatches'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has missing dependencies: 'matchData.matchStatus' and 'matchData.sport_event.id'. Either include them or remove the dependency array.",["287"],"'Sidebar' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'tournament'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'match'. Either include it or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'matchData' and 'matchInfo.matchStatus'. Either include them or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'matchData.sport_event' and 'matchData.sport_event_status.status'. Either include them or remove the dependency array.",["291"],["270"],["271"],"React Hook useEffect has missing dependencies: 'componentUsage' and 'playerData'. Either include them or remove the dependency array.",["292"],"'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'currentYear' and 'playerResults'. Either include them or remove the dependency array.",["293"],["294"],"no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"335","fix":"339"},"Update the dependencies array to be: [currentYear, today, tournaments.length]",{"range":"340","text":"341"},"Update the dependencies array to be: [currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",{"range":"342","text":"343"},"Update the dependencies array to be: [dailyResults, dailySchedule]",{"range":"344","text":"345"},"Update the dependencies array to be: [dailySchedule, liveMatches]",{"range":"346","text":"347"},"Update the dependencies array to be: [dailyResults, dailySchedule, liveMatches]",{"range":"348","text":"349"},"Update the dependencies array to be: [calendarTournamentData, calendarTournaments, calendarTournamentsITF, viewCalendar, viewITF]",{"range":"350","text":"351"},"Update the dependencies array to be: [calendarTournaments, calendarTournamentsITF, filter, viewCalendar, viewITF]",{"range":"352","text":"353"},"Update the dependencies array to be: [loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",{"range":"354","text":"355"},"Update the dependencies array to be: [dataLoaded, playerData]",{"range":"356","text":"357"},"Update the dependencies array to be: [params, tournaments]",{"range":"358","text":"359"},"Update the dependencies array to be: [currentSinglesTournament, currentSinglesTournamentLoaded]",{"range":"360","text":"361"},"Update the dependencies array to be: [tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",{"range":"362","text":"363"},"Update the dependencies array to be: [currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",{"range":"364","text":"365"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",{"range":"366","text":"367"},"Update the dependencies array to be: [currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",{"range":"368","text":"369"},"Update the dependencies array to be: [loaded, matchData.matchStatus, matchData.sport_event.id]",{"range":"370","text":"371"},"Update the dependencies array to be: [tournament]",{"range":"372","text":"373"},"Update the dependencies array to be: [matchData, currentMatchData, match]",{"range":"374","text":"375"},"Update the dependencies array to be: [match, matchData, matchInfo.matchStatus, scoreInfo]",{"range":"376","text":"377"},"Update the dependencies array to be: [match, matchData.sport_event, matchData.sport_event_status.status]",{"range":"378","text":"379"},"Update the dependencies array to be: [componentUsage, playerData]",{"range":"380","text":"381"},"Update the dependencies array to be: [currentYear, playerResults]",{"range":"382","text":"383"},{"range":"384","text":"381"},[2228,2230],"[currentYear, today, tournaments.length]",[3274,3306],"[currentDay, currentMonth, currentYear, tournaments, tournamentsLoaded]",[4046,4061],"[dailyResults, dailySchedule]",[4822,4837],"[dailySchedule, liveMatches]",[5188,5201],"[dailyResults, dailySchedule, liveMatches]",[2194,2203],"[calendarTournamentData, calendarTournaments, calendarTournamentsITF, viewCalendar, viewITF]",[2903,2911],"[calendarTournaments, calendarTournamentsITF, filter, viewCalendar, viewITF]",[3012,3049],"[loaded, event, discipline, viewRace, femaleSinglesRankings, femaleSinglesRaceRankings, femaleDoublesRankings, femaleDoublesRaceRankings, maleSinglesRankings, maleSinglesRaceRankings, maleDoublesRankings, maleDoublesRaceRankings]",[3754,3766],"[dataLoaded, playerData]",[3241,3243],"[params, tournaments]",[5333,5365],"[currentSinglesTournament, currentSinglesTournamentLoaded]",[6168,6202],"[tournamentName, tournamentGender, tournaments, currentSinglesTournament.parent_id]",[7631,7663],"[currentDoublesTournament, currentDoublesTournamentLoaded, currentSinglesTournament.id, dailySchedule]",[9085,9118],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentScheduleLoaded, dailyResults, dailySchedule.length]",[11327,11368],"[currentDoublesTournament, currentSinglesTournament.id, currentTournamentCompletedMatchesLoaded, dailySchedule.length, liveMatches]",[2365,2373],"[loaded, matchData.matchStatus, matchData.sport_event.id]",[1838,1840],"[tournament]",[1858,1887],"[matchData, currentMatchData, match]",[2488,2506],"[match, matchData, matchInfo.matchStatus, scoreInfo]",[8671,8678],"[match, matchData.sport_event, matchData.sport_event_status.status]",[757,759],"[componentUsage, playerData]",[1328,1330],"[currentYear, playerResults]",[2565,2567]]